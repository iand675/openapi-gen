{-# LANGUAGE DataKinds #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE StandaloneDeriving #-}
{-# LANGUAGE TemplateHaskell #-}
{-# LANGUAGE UndecidableInstances #-}
{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE PolyKinds #-}
-- Derived from OpenAPI spec
module Stripe.Types where

-- TODO all of this needs to be qualified to account for generated output causing conflicts
import Control.Applicative ((<|>))
import Data.Aeson (ToJSON1(..), FromJSON1(..), toJSON1, parseJSON1, Value(..))
import Data.Data (Data(..))
import Data.Functor.Const
import qualified Data.Sum
import GHC.Generics (Generic)
import OpenAPI.Support hiding (Error(..))
import OpenAPI.Support.Stripe

-- TODO All objects going into qery string need instance of QueryValueLike based on parameter format


data AccountCapabilitiesCardPaymentsEnum
  = AccountCapabilitiesCardPaymentsEnumActive
  | AccountCapabilitiesCardPaymentsEnumInactive
  | AccountCapabilitiesCardPaymentsEnumPending
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON AccountCapabilitiesCardPaymentsEnum where
  toJSON e = String $ case e of
    AccountCapabilitiesCardPaymentsEnumActive -> "active"
    AccountCapabilitiesCardPaymentsEnumInactive -> "inactive"
    AccountCapabilitiesCardPaymentsEnumPending -> "pending"

instance FromJSON AccountCapabilitiesCardPaymentsEnum where
  parseJSON = withText "AccountCapabilitiesCardPaymentsEnum" $ \case
    "active" -> pure AccountCapabilitiesCardPaymentsEnumActive
    "inactive" -> pure AccountCapabilitiesCardPaymentsEnumInactive
    "pending" -> pure AccountCapabilitiesCardPaymentsEnumPending
    str -> fail (show str <> " is not a known valid option for AccountCapabilitiesCardPaymentsEnum")

data AccountCapabilitiesLegacyPaymentsEnum
  = AccountCapabilitiesLegacyPaymentsEnumActive
  | AccountCapabilitiesLegacyPaymentsEnumInactive
  | AccountCapabilitiesLegacyPaymentsEnumPending
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON AccountCapabilitiesLegacyPaymentsEnum where
  toJSON e = String $ case e of
    AccountCapabilitiesLegacyPaymentsEnumActive -> "active"
    AccountCapabilitiesLegacyPaymentsEnumInactive -> "inactive"
    AccountCapabilitiesLegacyPaymentsEnumPending -> "pending"

instance FromJSON AccountCapabilitiesLegacyPaymentsEnum where
  parseJSON = withText "AccountCapabilitiesLegacyPaymentsEnum" $ \case
    "active" -> pure AccountCapabilitiesLegacyPaymentsEnumActive
    "inactive" -> pure AccountCapabilitiesLegacyPaymentsEnumInactive
    "pending" -> pure AccountCapabilitiesLegacyPaymentsEnumPending
    str -> fail (show str <> " is not a known valid option for AccountCapabilitiesLegacyPaymentsEnum")

data AccountCapabilitiesTransfersEnum
  = AccountCapabilitiesTransfersEnumActive
  | AccountCapabilitiesTransfersEnumInactive
  | AccountCapabilitiesTransfersEnumPending
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON AccountCapabilitiesTransfersEnum where
  toJSON e = String $ case e of
    AccountCapabilitiesTransfersEnumActive -> "active"
    AccountCapabilitiesTransfersEnumInactive -> "inactive"
    AccountCapabilitiesTransfersEnumPending -> "pending"

instance FromJSON AccountCapabilitiesTransfersEnum where
  parseJSON = withText "AccountCapabilitiesTransfersEnum" $ \case
    "active" -> pure AccountCapabilitiesTransfersEnumActive
    "inactive" -> pure AccountCapabilitiesTransfersEnumInactive
    "pending" -> pure AccountCapabilitiesTransfersEnumPending
    str -> fail (show str <> " is not a known valid option for AccountCapabilitiesTransfersEnum")

data AccountLinkObjectEnum
  = AccountLinkObjectEnumAccountLink
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON AccountLinkObjectEnum where
  toJSON e = String $ case e of
    AccountLinkObjectEnumAccountLink -> "account_link"

instance FromJSON AccountLinkObjectEnum where
  parseJSON = withText "AccountLinkObjectEnum" $ \case
    "account_link" -> pure AccountLinkObjectEnumAccountLink
    str -> fail (show str <> " is not a known valid option for AccountLinkObjectEnum")

data AccountObjectEnum
  = AccountObjectEnumAccount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON AccountObjectEnum where
  toJSON e = String $ case e of
    AccountObjectEnumAccount -> "account"

instance FromJSON AccountObjectEnum where
  parseJSON = withText "AccountObjectEnum" $ \case
    "account" -> pure AccountObjectEnumAccount
    str -> fail (show str <> " is not a known valid option for AccountObjectEnum")

data AlipayAccountObjectEnum
  = AlipayAccountObjectEnumAlipayAccount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON AlipayAccountObjectEnum where
  toJSON e = String $ case e of
    AlipayAccountObjectEnumAlipayAccount -> "alipay_account"

instance FromJSON AlipayAccountObjectEnum where
  parseJSON = withText "AlipayAccountObjectEnum" $ \case
    "alipay_account" -> pure AlipayAccountObjectEnumAlipayAccount
    str -> fail (show str <> " is not a known valid option for AlipayAccountObjectEnum")

data ApiErrorsTypeEnum
  = ApiErrorsTypeEnumApiConnectionError
  | ApiErrorsTypeEnumApiError
  | ApiErrorsTypeEnumAuthenticationError
  | ApiErrorsTypeEnumCardError
  | ApiErrorsTypeEnumIdempotencyError
  | ApiErrorsTypeEnumInvalidRequestError
  | ApiErrorsTypeEnumRateLimitError
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ApiErrorsTypeEnum where
  toJSON e = String $ case e of
    ApiErrorsTypeEnumApiConnectionError -> "api_connection_error"
    ApiErrorsTypeEnumApiError -> "api_error"
    ApiErrorsTypeEnumAuthenticationError -> "authentication_error"
    ApiErrorsTypeEnumCardError -> "card_error"
    ApiErrorsTypeEnumIdempotencyError -> "idempotency_error"
    ApiErrorsTypeEnumInvalidRequestError -> "invalid_request_error"
    ApiErrorsTypeEnumRateLimitError -> "rate_limit_error"

instance FromJSON ApiErrorsTypeEnum where
  parseJSON = withText "ApiErrorsTypeEnum" $ \case
    "api_connection_error" -> pure ApiErrorsTypeEnumApiConnectionError
    "api_error" -> pure ApiErrorsTypeEnumApiError
    "authentication_error" -> pure ApiErrorsTypeEnumAuthenticationError
    "card_error" -> pure ApiErrorsTypeEnumCardError
    "idempotency_error" -> pure ApiErrorsTypeEnumIdempotencyError
    "invalid_request_error" -> pure ApiErrorsTypeEnumInvalidRequestError
    "rate_limit_error" -> pure ApiErrorsTypeEnumRateLimitError
    str -> fail (show str <> " is not a known valid option for ApiErrorsTypeEnum")

data ApplePayDomainObjectEnum
  = ApplePayDomainObjectEnumApplePayDomain
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ApplePayDomainObjectEnum where
  toJSON e = String $ case e of
    ApplePayDomainObjectEnumApplePayDomain -> "apple_pay_domain"

instance FromJSON ApplePayDomainObjectEnum where
  parseJSON = withText "ApplePayDomainObjectEnum" $ \case
    "apple_pay_domain" -> pure ApplePayDomainObjectEnumApplePayDomain
    str -> fail (show str <> " is not a known valid option for ApplePayDomainObjectEnum")

data ApplicationFeeObjectEnum
  = ApplicationFeeObjectEnumApplicationFee
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ApplicationFeeObjectEnum where
  toJSON e = String $ case e of
    ApplicationFeeObjectEnumApplicationFee -> "application_fee"

instance FromJSON ApplicationFeeObjectEnum where
  parseJSON = withText "ApplicationFeeObjectEnum" $ \case
    "application_fee" -> pure ApplicationFeeObjectEnumApplicationFee
    str -> fail (show str <> " is not a known valid option for ApplicationFeeObjectEnum")

data ApplicationObjectEnum
  = ApplicationObjectEnumApplication
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ApplicationObjectEnum where
  toJSON e = String $ case e of
    ApplicationObjectEnumApplication -> "application"

instance FromJSON ApplicationObjectEnum where
  parseJSON = withText "ApplicationObjectEnum" $ \case
    "application" -> pure ApplicationObjectEnumApplication
    str -> fail (show str <> " is not a known valid option for ApplicationObjectEnum")

data BalanceObjectEnum
  = BalanceObjectEnumBalance
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON BalanceObjectEnum where
  toJSON e = String $ case e of
    BalanceObjectEnumBalance -> "balance"

instance FromJSON BalanceObjectEnum where
  parseJSON = withText "BalanceObjectEnum" $ \case
    "balance" -> pure BalanceObjectEnumBalance
    str -> fail (show str <> " is not a known valid option for BalanceObjectEnum")

data BalanceTransactionObjectEnum
  = BalanceTransactionObjectEnumBalanceTransaction
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON BalanceTransactionObjectEnum where
  toJSON e = String $ case e of
    BalanceTransactionObjectEnumBalanceTransaction -> "balance_transaction"

instance FromJSON BalanceTransactionObjectEnum where
  parseJSON = withText "BalanceTransactionObjectEnum" $ \case
    "balance_transaction" -> pure BalanceTransactionObjectEnumBalanceTransaction
    str -> fail (show str <> " is not a known valid option for BalanceTransactionObjectEnum")

data BalanceTransactionTypeEnum
  = BalanceTransactionTypeEnumAdjustment
  | BalanceTransactionTypeEnumAdvance
  | BalanceTransactionTypeEnumAdvanceFunding
  | BalanceTransactionTypeEnumApplicationFee
  | BalanceTransactionTypeEnumApplicationFeeRefund
  | BalanceTransactionTypeEnumCharge
  | BalanceTransactionTypeEnumConnectCollectionTransfer
  | BalanceTransactionTypeEnumIssuingAuthorizationHold
  | BalanceTransactionTypeEnumIssuingAuthorizationRelease
  | BalanceTransactionTypeEnumIssuingTransaction
  | BalanceTransactionTypeEnumPayment
  | BalanceTransactionTypeEnumPaymentFailureRefund
  | BalanceTransactionTypeEnumPaymentRefund
  | BalanceTransactionTypeEnumPayout
  | BalanceTransactionTypeEnumPayoutCancel
  | BalanceTransactionTypeEnumPayoutFailure
  | BalanceTransactionTypeEnumRefund
  | BalanceTransactionTypeEnumRefundFailure
  | BalanceTransactionTypeEnumReserveTransaction
  | BalanceTransactionTypeEnumReservedFunds
  | BalanceTransactionTypeEnumStripeFee
  | BalanceTransactionTypeEnumStripeFxFee
  | BalanceTransactionTypeEnumTaxFee
  | BalanceTransactionTypeEnumTopup
  | BalanceTransactionTypeEnumTopupReversal
  | BalanceTransactionTypeEnumTransfer
  | BalanceTransactionTypeEnumTransferCancel
  | BalanceTransactionTypeEnumTransferFailure
  | BalanceTransactionTypeEnumTransferRefund
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON BalanceTransactionTypeEnum where
  toJSON e = String $ case e of
    BalanceTransactionTypeEnumAdjustment -> "adjustment"
    BalanceTransactionTypeEnumAdvance -> "advance"
    BalanceTransactionTypeEnumAdvanceFunding -> "advance_funding"
    BalanceTransactionTypeEnumApplicationFee -> "application_fee"
    BalanceTransactionTypeEnumApplicationFeeRefund -> "application_fee_refund"
    BalanceTransactionTypeEnumCharge -> "charge"
    BalanceTransactionTypeEnumConnectCollectionTransfer -> "connect_collection_transfer"
    BalanceTransactionTypeEnumIssuingAuthorizationHold -> "issuing_authorization_hold"
    BalanceTransactionTypeEnumIssuingAuthorizationRelease -> "issuing_authorization_release"
    BalanceTransactionTypeEnumIssuingTransaction -> "issuing_transaction"
    BalanceTransactionTypeEnumPayment -> "payment"
    BalanceTransactionTypeEnumPaymentFailureRefund -> "payment_failure_refund"
    BalanceTransactionTypeEnumPaymentRefund -> "payment_refund"
    BalanceTransactionTypeEnumPayout -> "payout"
    BalanceTransactionTypeEnumPayoutCancel -> "payout_cancel"
    BalanceTransactionTypeEnumPayoutFailure -> "payout_failure"
    BalanceTransactionTypeEnumRefund -> "refund"
    BalanceTransactionTypeEnumRefundFailure -> "refund_failure"
    BalanceTransactionTypeEnumReserveTransaction -> "reserve_transaction"
    BalanceTransactionTypeEnumReservedFunds -> "reserved_funds"
    BalanceTransactionTypeEnumStripeFee -> "stripe_fee"
    BalanceTransactionTypeEnumStripeFxFee -> "stripe_fx_fee"
    BalanceTransactionTypeEnumTaxFee -> "tax_fee"
    BalanceTransactionTypeEnumTopup -> "topup"
    BalanceTransactionTypeEnumTopupReversal -> "topup_reversal"
    BalanceTransactionTypeEnumTransfer -> "transfer"
    BalanceTransactionTypeEnumTransferCancel -> "transfer_cancel"
    BalanceTransactionTypeEnumTransferFailure -> "transfer_failure"
    BalanceTransactionTypeEnumTransferRefund -> "transfer_refund"

instance FromJSON BalanceTransactionTypeEnum where
  parseJSON = withText "BalanceTransactionTypeEnum" $ \case
    "adjustment" -> pure BalanceTransactionTypeEnumAdjustment
    "advance" -> pure BalanceTransactionTypeEnumAdvance
    "advance_funding" -> pure BalanceTransactionTypeEnumAdvanceFunding
    "application_fee" -> pure BalanceTransactionTypeEnumApplicationFee
    "application_fee_refund" -> pure BalanceTransactionTypeEnumApplicationFeeRefund
    "charge" -> pure BalanceTransactionTypeEnumCharge
    "connect_collection_transfer" -> pure BalanceTransactionTypeEnumConnectCollectionTransfer
    "issuing_authorization_hold" -> pure BalanceTransactionTypeEnumIssuingAuthorizationHold
    "issuing_authorization_release" -> pure BalanceTransactionTypeEnumIssuingAuthorizationRelease
    "issuing_transaction" -> pure BalanceTransactionTypeEnumIssuingTransaction
    "payment" -> pure BalanceTransactionTypeEnumPayment
    "payment_failure_refund" -> pure BalanceTransactionTypeEnumPaymentFailureRefund
    "payment_refund" -> pure BalanceTransactionTypeEnumPaymentRefund
    "payout" -> pure BalanceTransactionTypeEnumPayout
    "payout_cancel" -> pure BalanceTransactionTypeEnumPayoutCancel
    "payout_failure" -> pure BalanceTransactionTypeEnumPayoutFailure
    "refund" -> pure BalanceTransactionTypeEnumRefund
    "refund_failure" -> pure BalanceTransactionTypeEnumRefundFailure
    "reserve_transaction" -> pure BalanceTransactionTypeEnumReserveTransaction
    "reserved_funds" -> pure BalanceTransactionTypeEnumReservedFunds
    "stripe_fee" -> pure BalanceTransactionTypeEnumStripeFee
    "stripe_fx_fee" -> pure BalanceTransactionTypeEnumStripeFxFee
    "tax_fee" -> pure BalanceTransactionTypeEnumTaxFee
    "topup" -> pure BalanceTransactionTypeEnumTopup
    "topup_reversal" -> pure BalanceTransactionTypeEnumTopupReversal
    "transfer" -> pure BalanceTransactionTypeEnumTransfer
    "transfer_cancel" -> pure BalanceTransactionTypeEnumTransferCancel
    "transfer_failure" -> pure BalanceTransactionTypeEnumTransferFailure
    "transfer_refund" -> pure BalanceTransactionTypeEnumTransferRefund
    str -> fail (show str <> " is not a known valid option for BalanceTransactionTypeEnum")

data BankAccountAccountHolderTypeEnum
  = BankAccountAccountHolderTypeEnumIndividual
  | BankAccountAccountHolderTypeEnumCompany
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON BankAccountAccountHolderTypeEnum where
  toJSON e = String $ case e of
    BankAccountAccountHolderTypeEnumIndividual -> "individual"
    BankAccountAccountHolderTypeEnumCompany -> "company"

instance FromJSON BankAccountAccountHolderTypeEnum where
  parseJSON = withText "BankAccountAccountHolderTypeEnum" $ \case
    "individual" -> pure BankAccountAccountHolderTypeEnumIndividual
    "company" -> pure BankAccountAccountHolderTypeEnumCompany
    str -> fail (show str <> " is not a known valid option for BankAccountAccountHolderTypeEnum")

data BankAccountObjectEnum
  = BankAccountObjectEnumBankAccount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON BankAccountObjectEnum where
  toJSON e = String $ case e of
    BankAccountObjectEnumBankAccount -> "bank_account"

instance FromJSON BankAccountObjectEnum where
  parseJSON = withText "BankAccountObjectEnum" $ \case
    "bank_account" -> pure BankAccountObjectEnumBankAccount
    str -> fail (show str <> " is not a known valid option for BankAccountObjectEnum")

data BillingEnum
  = BillingEnumChargeAutomatically
  | BillingEnumSendInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON BillingEnum where
  toJSON e = String $ case e of
    BillingEnumChargeAutomatically -> "charge_automatically"
    BillingEnumSendInvoice -> "send_invoice"

instance FromJSON BillingEnum where
  parseJSON = withText "BillingEnum" $ \case
    "charge_automatically" -> pure BillingEnumChargeAutomatically
    "send_invoice" -> pure BillingEnumSendInvoice
    str -> fail (show str <> " is not a known valid option for BillingEnum")

data BitcoinReceiverObjectEnum
  = BitcoinReceiverObjectEnumBitcoinReceiver
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON BitcoinReceiverObjectEnum where
  toJSON e = String $ case e of
    BitcoinReceiverObjectEnumBitcoinReceiver -> "bitcoin_receiver"

instance FromJSON BitcoinReceiverObjectEnum where
  parseJSON = withText "BitcoinReceiverObjectEnum" $ \case
    "bitcoin_receiver" -> pure BitcoinReceiverObjectEnumBitcoinReceiver
    str -> fail (show str <> " is not a known valid option for BitcoinReceiverObjectEnum")

data BitcoinTransactionObjectEnum
  = BitcoinTransactionObjectEnumBitcoinTransaction
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON BitcoinTransactionObjectEnum where
  toJSON e = String $ case e of
    BitcoinTransactionObjectEnumBitcoinTransaction -> "bitcoin_transaction"

instance FromJSON BitcoinTransactionObjectEnum where
  parseJSON = withText "BitcoinTransactionObjectEnum" $ \case
    "bitcoin_transaction" -> pure BitcoinTransactionObjectEnumBitcoinTransaction
    str -> fail (show str <> " is not a known valid option for BitcoinTransactionObjectEnum")

data CapabilityObjectEnum
  = CapabilityObjectEnumCapability
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CapabilityObjectEnum where
  toJSON e = String $ case e of
    CapabilityObjectEnumCapability -> "capability"

instance FromJSON CapabilityObjectEnum where
  parseJSON = withText "CapabilityObjectEnum" $ \case
    "capability" -> pure CapabilityObjectEnumCapability
    str -> fail (show str <> " is not a known valid option for CapabilityObjectEnum")

data CapabilityStatusEnum
  = CapabilityStatusEnumActive
  | CapabilityStatusEnumDisabled
  | CapabilityStatusEnumInactive
  | CapabilityStatusEnumPending
  | CapabilityStatusEnumUnrequested
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CapabilityStatusEnum where
  toJSON e = String $ case e of
    CapabilityStatusEnumActive -> "active"
    CapabilityStatusEnumDisabled -> "disabled"
    CapabilityStatusEnumInactive -> "inactive"
    CapabilityStatusEnumPending -> "pending"
    CapabilityStatusEnumUnrequested -> "unrequested"

instance FromJSON CapabilityStatusEnum where
  parseJSON = withText "CapabilityStatusEnum" $ \case
    "active" -> pure CapabilityStatusEnumActive
    "disabled" -> pure CapabilityStatusEnumDisabled
    "inactive" -> pure CapabilityStatusEnumInactive
    "pending" -> pure CapabilityStatusEnumPending
    "unrequested" -> pure CapabilityStatusEnumUnrequested
    str -> fail (show str <> " is not a known valid option for CapabilityStatusEnum")

data CardAvailablePayoutMethodsEnum
  = CardAvailablePayoutMethodsEnumInstant
  | CardAvailablePayoutMethodsEnumStandard
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CardAvailablePayoutMethodsEnum where
  toJSON e = String $ case e of
    CardAvailablePayoutMethodsEnumInstant -> "instant"
    CardAvailablePayoutMethodsEnumStandard -> "standard"

instance FromJSON CardAvailablePayoutMethodsEnum where
  parseJSON = withText "CardAvailablePayoutMethodsEnum" $ \case
    "instant" -> pure CardAvailablePayoutMethodsEnumInstant
    "standard" -> pure CardAvailablePayoutMethodsEnumStandard
    str -> fail (show str <> " is not a known valid option for CardAvailablePayoutMethodsEnum")

data CardObjectEnum
  = CardObjectEnumCard
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CardObjectEnum where
  toJSON e = String $ case e of
    CardObjectEnumCard -> "card"

instance FromJSON CardObjectEnum where
  parseJSON = withText "CardObjectEnum" $ \case
    "card" -> pure CardObjectEnumCard
    str -> fail (show str <> " is not a known valid option for CardObjectEnum")

data ChargeObjectEnum
  = ChargeObjectEnumCharge
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ChargeObjectEnum where
  toJSON e = String $ case e of
    ChargeObjectEnumCharge -> "charge"

instance FromJSON ChargeObjectEnum where
  parseJSON = withText "ChargeObjectEnum" $ \case
    "charge" -> pure ChargeObjectEnumCharge
    str -> fail (show str <> " is not a known valid option for ChargeObjectEnum")

data CheckoutSessionDisplayItemTypeEnum
  = CheckoutSessionDisplayItemTypeEnumCustom
  | CheckoutSessionDisplayItemTypeEnumPlan
  | CheckoutSessionDisplayItemTypeEnumSku
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CheckoutSessionDisplayItemTypeEnum where
  toJSON e = String $ case e of
    CheckoutSessionDisplayItemTypeEnumCustom -> "custom"
    CheckoutSessionDisplayItemTypeEnumPlan -> "plan"
    CheckoutSessionDisplayItemTypeEnumSku -> "sku"

instance FromJSON CheckoutSessionDisplayItemTypeEnum where
  parseJSON = withText "CheckoutSessionDisplayItemTypeEnum" $ \case
    "custom" -> pure CheckoutSessionDisplayItemTypeEnumCustom
    "plan" -> pure CheckoutSessionDisplayItemTypeEnumPlan
    "sku" -> pure CheckoutSessionDisplayItemTypeEnumSku
    str -> fail (show str <> " is not a known valid option for CheckoutSessionDisplayItemTypeEnum")

data CheckoutSessionLocaleEnum
  = CheckoutSessionLocaleEnumAuto
  | CheckoutSessionLocaleEnumDa
  | CheckoutSessionLocaleEnumDe
  | CheckoutSessionLocaleEnumEn
  | CheckoutSessionLocaleEnumEs
  | CheckoutSessionLocaleEnumFi
  | CheckoutSessionLocaleEnumFr
  | CheckoutSessionLocaleEnumIt
  | CheckoutSessionLocaleEnumJa
  | CheckoutSessionLocaleEnumNb
  | CheckoutSessionLocaleEnumNl
  | CheckoutSessionLocaleEnumPl
  | CheckoutSessionLocaleEnumPt
  | CheckoutSessionLocaleEnumSv
  | CheckoutSessionLocaleEnumZh
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CheckoutSessionLocaleEnum where
  toJSON e = String $ case e of
    CheckoutSessionLocaleEnumAuto -> "auto"
    CheckoutSessionLocaleEnumDa -> "da"
    CheckoutSessionLocaleEnumDe -> "de"
    CheckoutSessionLocaleEnumEn -> "en"
    CheckoutSessionLocaleEnumEs -> "es"
    CheckoutSessionLocaleEnumFi -> "fi"
    CheckoutSessionLocaleEnumFr -> "fr"
    CheckoutSessionLocaleEnumIt -> "it"
    CheckoutSessionLocaleEnumJa -> "ja"
    CheckoutSessionLocaleEnumNb -> "nb"
    CheckoutSessionLocaleEnumNl -> "nl"
    CheckoutSessionLocaleEnumPl -> "pl"
    CheckoutSessionLocaleEnumPt -> "pt"
    CheckoutSessionLocaleEnumSv -> "sv"
    CheckoutSessionLocaleEnumZh -> "zh"

instance FromJSON CheckoutSessionLocaleEnum where
  parseJSON = withText "CheckoutSessionLocaleEnum" $ \case
    "auto" -> pure CheckoutSessionLocaleEnumAuto
    "da" -> pure CheckoutSessionLocaleEnumDa
    "de" -> pure CheckoutSessionLocaleEnumDe
    "en" -> pure CheckoutSessionLocaleEnumEn
    "es" -> pure CheckoutSessionLocaleEnumEs
    "fi" -> pure CheckoutSessionLocaleEnumFi
    "fr" -> pure CheckoutSessionLocaleEnumFr
    "it" -> pure CheckoutSessionLocaleEnumIt
    "ja" -> pure CheckoutSessionLocaleEnumJa
    "nb" -> pure CheckoutSessionLocaleEnumNb
    "nl" -> pure CheckoutSessionLocaleEnumNl
    "pl" -> pure CheckoutSessionLocaleEnumPl
    "pt" -> pure CheckoutSessionLocaleEnumPt
    "sv" -> pure CheckoutSessionLocaleEnumSv
    "zh" -> pure CheckoutSessionLocaleEnumZh
    str -> fail (show str <> " is not a known valid option for CheckoutSessionLocaleEnum")

data CheckoutSessionModeEnum
  = CheckoutSessionModeEnumPayment
  | CheckoutSessionModeEnumSetup
  | CheckoutSessionModeEnumSubscription
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CheckoutSessionModeEnum where
  toJSON e = String $ case e of
    CheckoutSessionModeEnumPayment -> "payment"
    CheckoutSessionModeEnumSetup -> "setup"
    CheckoutSessionModeEnumSubscription -> "subscription"

instance FromJSON CheckoutSessionModeEnum where
  parseJSON = withText "CheckoutSessionModeEnum" $ \case
    "payment" -> pure CheckoutSessionModeEnumPayment
    "setup" -> pure CheckoutSessionModeEnumSetup
    "subscription" -> pure CheckoutSessionModeEnumSubscription
    str -> fail (show str <> " is not a known valid option for CheckoutSessionModeEnum")

data CheckoutSessionObjectEnum
  = CheckoutSessionObjectEnumCheckoutSession
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CheckoutSessionObjectEnum where
  toJSON e = String $ case e of
    CheckoutSessionObjectEnumCheckoutSession -> "checkout.session"

instance FromJSON CheckoutSessionObjectEnum where
  parseJSON = withText "CheckoutSessionObjectEnum" $ \case
    "checkout.session" -> pure CheckoutSessionObjectEnumCheckoutSession
    str -> fail (show str <> " is not a known valid option for CheckoutSessionObjectEnum")

data CheckoutSessionSubmitTypeEnum
  = CheckoutSessionSubmitTypeEnumAuto
  | CheckoutSessionSubmitTypeEnumBook
  | CheckoutSessionSubmitTypeEnumDonate
  | CheckoutSessionSubmitTypeEnumPay
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CheckoutSessionSubmitTypeEnum where
  toJSON e = String $ case e of
    CheckoutSessionSubmitTypeEnumAuto -> "auto"
    CheckoutSessionSubmitTypeEnumBook -> "book"
    CheckoutSessionSubmitTypeEnumDonate -> "donate"
    CheckoutSessionSubmitTypeEnumPay -> "pay"

instance FromJSON CheckoutSessionSubmitTypeEnum where
  parseJSON = withText "CheckoutSessionSubmitTypeEnum" $ \case
    "auto" -> pure CheckoutSessionSubmitTypeEnumAuto
    "book" -> pure CheckoutSessionSubmitTypeEnumBook
    "donate" -> pure CheckoutSessionSubmitTypeEnumDonate
    "pay" -> pure CheckoutSessionSubmitTypeEnumPay
    str -> fail (show str <> " is not a known valid option for CheckoutSessionSubmitTypeEnum")

data CollectionMethodEnum
  = CollectionMethodEnumChargeAutomatically
  | CollectionMethodEnumSendInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CollectionMethodEnum where
  toJSON e = String $ case e of
    CollectionMethodEnumChargeAutomatically -> "charge_automatically"
    CollectionMethodEnumSendInvoice -> "send_invoice"

instance FromJSON CollectionMethodEnum where
  parseJSON = withText "CollectionMethodEnum" $ \case
    "charge_automatically" -> pure CollectionMethodEnumChargeAutomatically
    "send_invoice" -> pure CollectionMethodEnumSendInvoice
    str -> fail (show str <> " is not a known valid option for CollectionMethodEnum")

data ConnectCollectionTransferObjectEnum
  = ConnectCollectionTransferObjectEnumConnectCollectionTransfer
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ConnectCollectionTransferObjectEnum where
  toJSON e = String $ case e of
    ConnectCollectionTransferObjectEnumConnectCollectionTransfer -> "connect_collection_transfer"

instance FromJSON ConnectCollectionTransferObjectEnum where
  parseJSON = withText "ConnectCollectionTransferObjectEnum" $ \case
    "connect_collection_transfer" -> pure ConnectCollectionTransferObjectEnumConnectCollectionTransfer
    str -> fail (show str <> " is not a known valid option for ConnectCollectionTransferObjectEnum")

data CountrySpecObjectEnum
  = CountrySpecObjectEnumCountrySpec
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CountrySpecObjectEnum where
  toJSON e = String $ case e of
    CountrySpecObjectEnumCountrySpec -> "country_spec"

instance FromJSON CountrySpecObjectEnum where
  parseJSON = withText "CountrySpecObjectEnum" $ \case
    "country_spec" -> pure CountrySpecObjectEnumCountrySpec
    str -> fail (show str <> " is not a known valid option for CountrySpecObjectEnum")

data CouponDurationEnum
  = CouponDurationEnumForever
  | CouponDurationEnumOnce
  | CouponDurationEnumRepeating
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CouponDurationEnum where
  toJSON e = String $ case e of
    CouponDurationEnumForever -> "forever"
    CouponDurationEnumOnce -> "once"
    CouponDurationEnumRepeating -> "repeating"

instance FromJSON CouponDurationEnum where
  parseJSON = withText "CouponDurationEnum" $ \case
    "forever" -> pure CouponDurationEnumForever
    "once" -> pure CouponDurationEnumOnce
    "repeating" -> pure CouponDurationEnumRepeating
    str -> fail (show str <> " is not a known valid option for CouponDurationEnum")

data CouponObjectEnum
  = CouponObjectEnumCoupon
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CouponObjectEnum where
  toJSON e = String $ case e of
    CouponObjectEnumCoupon -> "coupon"

instance FromJSON CouponObjectEnum where
  parseJSON = withText "CouponObjectEnum" $ \case
    "coupon" -> pure CouponObjectEnumCoupon
    str -> fail (show str <> " is not a known valid option for CouponObjectEnum")

data CreditNoteObjectEnum
  = CreditNoteObjectEnumCreditNote
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CreditNoteObjectEnum where
  toJSON e = String $ case e of
    CreditNoteObjectEnumCreditNote -> "credit_note"

instance FromJSON CreditNoteObjectEnum where
  parseJSON = withText "CreditNoteObjectEnum" $ \case
    "credit_note" -> pure CreditNoteObjectEnumCreditNote
    str -> fail (show str <> " is not a known valid option for CreditNoteObjectEnum")

data CreditNoteReasonEnum
  = CreditNoteReasonEnumDuplicate
  | CreditNoteReasonEnumFraudulent
  | CreditNoteReasonEnumOrderChange
  | CreditNoteReasonEnumProductUnsatisfactory
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CreditNoteReasonEnum where
  toJSON e = String $ case e of
    CreditNoteReasonEnumDuplicate -> "duplicate"
    CreditNoteReasonEnumFraudulent -> "fraudulent"
    CreditNoteReasonEnumOrderChange -> "order_change"
    CreditNoteReasonEnumProductUnsatisfactory -> "product_unsatisfactory"

instance FromJSON CreditNoteReasonEnum where
  parseJSON = withText "CreditNoteReasonEnum" $ \case
    "duplicate" -> pure CreditNoteReasonEnumDuplicate
    "fraudulent" -> pure CreditNoteReasonEnumFraudulent
    "order_change" -> pure CreditNoteReasonEnumOrderChange
    "product_unsatisfactory" -> pure CreditNoteReasonEnumProductUnsatisfactory
    str -> fail (show str <> " is not a known valid option for CreditNoteReasonEnum")

data CreditNoteStatusEnum
  = CreditNoteStatusEnumIssued
  | CreditNoteStatusEnumVoid
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CreditNoteStatusEnum where
  toJSON e = String $ case e of
    CreditNoteStatusEnumIssued -> "issued"
    CreditNoteStatusEnumVoid -> "void"

instance FromJSON CreditNoteStatusEnum where
  parseJSON = withText "CreditNoteStatusEnum" $ \case
    "issued" -> pure CreditNoteStatusEnumIssued
    "void" -> pure CreditNoteStatusEnumVoid
    str -> fail (show str <> " is not a known valid option for CreditNoteStatusEnum")

data CreditNoteTypeEnum
  = CreditNoteTypeEnumPostPayment
  | CreditNoteTypeEnumPrePayment
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CreditNoteTypeEnum where
  toJSON e = String $ case e of
    CreditNoteTypeEnumPostPayment -> "post_payment"
    CreditNoteTypeEnumPrePayment -> "pre_payment"

instance FromJSON CreditNoteTypeEnum where
  parseJSON = withText "CreditNoteTypeEnum" $ \case
    "post_payment" -> pure CreditNoteTypeEnumPostPayment
    "pre_payment" -> pure CreditNoteTypeEnumPrePayment
    str -> fail (show str <> " is not a known valid option for CreditNoteTypeEnum")

data CustomerBalanceTransactionObjectEnum
  = CustomerBalanceTransactionObjectEnumCustomerBalanceTransaction
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CustomerBalanceTransactionObjectEnum where
  toJSON e = String $ case e of
    CustomerBalanceTransactionObjectEnumCustomerBalanceTransaction -> "customer_balance_transaction"

instance FromJSON CustomerBalanceTransactionObjectEnum where
  parseJSON = withText "CustomerBalanceTransactionObjectEnum" $ \case
    "customer_balance_transaction" -> pure CustomerBalanceTransactionObjectEnumCustomerBalanceTransaction
    str -> fail (show str <> " is not a known valid option for CustomerBalanceTransactionObjectEnum")

data CustomerBalanceTransactionTypeEnum
  = CustomerBalanceTransactionTypeEnumAdjustment
  | CustomerBalanceTransactionTypeEnumAppliedToInvoice
  | CustomerBalanceTransactionTypeEnumCreditNote
  | CustomerBalanceTransactionTypeEnumInitial
  | CustomerBalanceTransactionTypeEnumInvoiceTooLarge
  | CustomerBalanceTransactionTypeEnumInvoiceTooSmall
  | CustomerBalanceTransactionTypeEnumMigration
  | CustomerBalanceTransactionTypeEnumUnspentReceiverCredit
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CustomerBalanceTransactionTypeEnum where
  toJSON e = String $ case e of
    CustomerBalanceTransactionTypeEnumAdjustment -> "adjustment"
    CustomerBalanceTransactionTypeEnumAppliedToInvoice -> "applied_to_invoice"
    CustomerBalanceTransactionTypeEnumCreditNote -> "credit_note"
    CustomerBalanceTransactionTypeEnumInitial -> "initial"
    CustomerBalanceTransactionTypeEnumInvoiceTooLarge -> "invoice_too_large"
    CustomerBalanceTransactionTypeEnumInvoiceTooSmall -> "invoice_too_small"
    CustomerBalanceTransactionTypeEnumMigration -> "migration"
    CustomerBalanceTransactionTypeEnumUnspentReceiverCredit -> "unspent_receiver_credit"

instance FromJSON CustomerBalanceTransactionTypeEnum where
  parseJSON = withText "CustomerBalanceTransactionTypeEnum" $ \case
    "adjustment" -> pure CustomerBalanceTransactionTypeEnumAdjustment
    "applied_to_invoice" -> pure CustomerBalanceTransactionTypeEnumAppliedToInvoice
    "credit_note" -> pure CustomerBalanceTransactionTypeEnumCreditNote
    "initial" -> pure CustomerBalanceTransactionTypeEnumInitial
    "invoice_too_large" -> pure CustomerBalanceTransactionTypeEnumInvoiceTooLarge
    "invoice_too_small" -> pure CustomerBalanceTransactionTypeEnumInvoiceTooSmall
    "migration" -> pure CustomerBalanceTransactionTypeEnumMigration
    "unspent_receiver_credit" -> pure CustomerBalanceTransactionTypeEnumUnspentReceiverCredit
    str -> fail (show str <> " is not a known valid option for CustomerBalanceTransactionTypeEnum")

data CustomerObjectEnum
  = CustomerObjectEnumCustomer
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CustomerObjectEnum where
  toJSON e = String $ case e of
    CustomerObjectEnumCustomer -> "customer"

instance FromJSON CustomerObjectEnum where
  parseJSON = withText "CustomerObjectEnum" $ \case
    "customer" -> pure CustomerObjectEnumCustomer
    str -> fail (show str <> " is not a known valid option for CustomerObjectEnum")

data CustomerTaxExemptEnum
  = CustomerTaxExemptEnumExempt
  | CustomerTaxExemptEnumNone
  | CustomerTaxExemptEnumReverse
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON CustomerTaxExemptEnum where
  toJSON e = String $ case e of
    CustomerTaxExemptEnumExempt -> "exempt"
    CustomerTaxExemptEnumNone -> "none"
    CustomerTaxExemptEnumReverse -> "reverse"

instance FromJSON CustomerTaxExemptEnum where
  parseJSON = withText "CustomerTaxExemptEnum" $ \case
    "exempt" -> pure CustomerTaxExemptEnumExempt
    "none" -> pure CustomerTaxExemptEnumNone
    "reverse" -> pure CustomerTaxExemptEnumReverse
    str -> fail (show str <> " is not a known valid option for CustomerTaxExemptEnum")

data DeletedAccountObjectEnum
  = DeletedAccountObjectEnumAccount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedAccountObjectEnum where
  toJSON e = String $ case e of
    DeletedAccountObjectEnumAccount -> "account"

instance FromJSON DeletedAccountObjectEnum where
  parseJSON = withText "DeletedAccountObjectEnum" $ \case
    "account" -> pure DeletedAccountObjectEnumAccount
    str -> fail (show str <> " is not a known valid option for DeletedAccountObjectEnum")

data DeletedAlipayAccountObjectEnum
  = DeletedAlipayAccountObjectEnumAlipayAccount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedAlipayAccountObjectEnum where
  toJSON e = String $ case e of
    DeletedAlipayAccountObjectEnumAlipayAccount -> "alipay_account"

instance FromJSON DeletedAlipayAccountObjectEnum where
  parseJSON = withText "DeletedAlipayAccountObjectEnum" $ \case
    "alipay_account" -> pure DeletedAlipayAccountObjectEnumAlipayAccount
    str -> fail (show str <> " is not a known valid option for DeletedAlipayAccountObjectEnum")

data DeletedApplePayDomainObjectEnum
  = DeletedApplePayDomainObjectEnumApplePayDomain
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedApplePayDomainObjectEnum where
  toJSON e = String $ case e of
    DeletedApplePayDomainObjectEnumApplePayDomain -> "apple_pay_domain"

instance FromJSON DeletedApplePayDomainObjectEnum where
  parseJSON = withText "DeletedApplePayDomainObjectEnum" $ \case
    "apple_pay_domain" -> pure DeletedApplePayDomainObjectEnumApplePayDomain
    str -> fail (show str <> " is not a known valid option for DeletedApplePayDomainObjectEnum")

data DeletedBankAccountObjectEnum
  = DeletedBankAccountObjectEnumBankAccount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedBankAccountObjectEnum where
  toJSON e = String $ case e of
    DeletedBankAccountObjectEnumBankAccount -> "bank_account"

instance FromJSON DeletedBankAccountObjectEnum where
  parseJSON = withText "DeletedBankAccountObjectEnum" $ \case
    "bank_account" -> pure DeletedBankAccountObjectEnumBankAccount
    str -> fail (show str <> " is not a known valid option for DeletedBankAccountObjectEnum")

data DeletedBitcoinReceiverObjectEnum
  = DeletedBitcoinReceiverObjectEnumBitcoinReceiver
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedBitcoinReceiverObjectEnum where
  toJSON e = String $ case e of
    DeletedBitcoinReceiverObjectEnumBitcoinReceiver -> "bitcoin_receiver"

instance FromJSON DeletedBitcoinReceiverObjectEnum where
  parseJSON = withText "DeletedBitcoinReceiverObjectEnum" $ \case
    "bitcoin_receiver" -> pure DeletedBitcoinReceiverObjectEnumBitcoinReceiver
    str -> fail (show str <> " is not a known valid option for DeletedBitcoinReceiverObjectEnum")

data DeletedCardObjectEnum
  = DeletedCardObjectEnumCard
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedCardObjectEnum where
  toJSON e = String $ case e of
    DeletedCardObjectEnumCard -> "card"

instance FromJSON DeletedCardObjectEnum where
  parseJSON = withText "DeletedCardObjectEnum" $ \case
    "card" -> pure DeletedCardObjectEnumCard
    str -> fail (show str <> " is not a known valid option for DeletedCardObjectEnum")

data DeletedCouponObjectEnum
  = DeletedCouponObjectEnumCoupon
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedCouponObjectEnum where
  toJSON e = String $ case e of
    DeletedCouponObjectEnumCoupon -> "coupon"

instance FromJSON DeletedCouponObjectEnum where
  parseJSON = withText "DeletedCouponObjectEnum" $ \case
    "coupon" -> pure DeletedCouponObjectEnumCoupon
    str -> fail (show str <> " is not a known valid option for DeletedCouponObjectEnum")

data DeletedCustomerObjectEnum
  = DeletedCustomerObjectEnumCustomer
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedCustomerObjectEnum where
  toJSON e = String $ case e of
    DeletedCustomerObjectEnumCustomer -> "customer"

instance FromJSON DeletedCustomerObjectEnum where
  parseJSON = withText "DeletedCustomerObjectEnum" $ \case
    "customer" -> pure DeletedCustomerObjectEnumCustomer
    str -> fail (show str <> " is not a known valid option for DeletedCustomerObjectEnum")

data DeletedDiscountObjectEnum
  = DeletedDiscountObjectEnumDiscount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedDiscountObjectEnum where
  toJSON e = String $ case e of
    DeletedDiscountObjectEnumDiscount -> "discount"

instance FromJSON DeletedDiscountObjectEnum where
  parseJSON = withText "DeletedDiscountObjectEnum" $ \case
    "discount" -> pure DeletedDiscountObjectEnumDiscount
    str -> fail (show str <> " is not a known valid option for DeletedDiscountObjectEnum")

data DeletedInvoiceObjectEnum
  = DeletedInvoiceObjectEnumInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedInvoiceObjectEnum where
  toJSON e = String $ case e of
    DeletedInvoiceObjectEnumInvoice -> "invoice"

instance FromJSON DeletedInvoiceObjectEnum where
  parseJSON = withText "DeletedInvoiceObjectEnum" $ \case
    "invoice" -> pure DeletedInvoiceObjectEnumInvoice
    str -> fail (show str <> " is not a known valid option for DeletedInvoiceObjectEnum")

data DeletedInvoiceitemObjectEnum
  = DeletedInvoiceitemObjectEnumInvoiceitem
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedInvoiceitemObjectEnum where
  toJSON e = String $ case e of
    DeletedInvoiceitemObjectEnumInvoiceitem -> "invoiceitem"

instance FromJSON DeletedInvoiceitemObjectEnum where
  parseJSON = withText "DeletedInvoiceitemObjectEnum" $ \case
    "invoiceitem" -> pure DeletedInvoiceitemObjectEnumInvoiceitem
    str -> fail (show str <> " is not a known valid option for DeletedInvoiceitemObjectEnum")

data DeletedPersonObjectEnum
  = DeletedPersonObjectEnumPerson
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedPersonObjectEnum where
  toJSON e = String $ case e of
    DeletedPersonObjectEnumPerson -> "person"

instance FromJSON DeletedPersonObjectEnum where
  parseJSON = withText "DeletedPersonObjectEnum" $ \case
    "person" -> pure DeletedPersonObjectEnumPerson
    str -> fail (show str <> " is not a known valid option for DeletedPersonObjectEnum")

data DeletedPlanObjectEnum
  = DeletedPlanObjectEnumPlan
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedPlanObjectEnum where
  toJSON e = String $ case e of
    DeletedPlanObjectEnumPlan -> "plan"

instance FromJSON DeletedPlanObjectEnum where
  parseJSON = withText "DeletedPlanObjectEnum" $ \case
    "plan" -> pure DeletedPlanObjectEnumPlan
    str -> fail (show str <> " is not a known valid option for DeletedPlanObjectEnum")

data DeletedProductObjectEnum
  = DeletedProductObjectEnumProduct
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedProductObjectEnum where
  toJSON e = String $ case e of
    DeletedProductObjectEnumProduct -> "product"

instance FromJSON DeletedProductObjectEnum where
  parseJSON = withText "DeletedProductObjectEnum" $ \case
    "product" -> pure DeletedProductObjectEnumProduct
    str -> fail (show str <> " is not a known valid option for DeletedProductObjectEnum")

data DeletedRadarValueListItemObjectEnum
  = DeletedRadarValueListItemObjectEnumRadarValueListItem
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedRadarValueListItemObjectEnum where
  toJSON e = String $ case e of
    DeletedRadarValueListItemObjectEnumRadarValueListItem -> "radar.value_list_item"

instance FromJSON DeletedRadarValueListItemObjectEnum where
  parseJSON = withText "DeletedRadarValueListItemObjectEnum" $ \case
    "radar.value_list_item" -> pure DeletedRadarValueListItemObjectEnumRadarValueListItem
    str -> fail (show str <> " is not a known valid option for DeletedRadarValueListItemObjectEnum")

data DeletedRadarValueListObjectEnum
  = DeletedRadarValueListObjectEnumRadarValueList
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedRadarValueListObjectEnum where
  toJSON e = String $ case e of
    DeletedRadarValueListObjectEnumRadarValueList -> "radar.value_list"

instance FromJSON DeletedRadarValueListObjectEnum where
  parseJSON = withText "DeletedRadarValueListObjectEnum" $ \case
    "radar.value_list" -> pure DeletedRadarValueListObjectEnumRadarValueList
    str -> fail (show str <> " is not a known valid option for DeletedRadarValueListObjectEnum")

data DeletedRecipientObjectEnum
  = DeletedRecipientObjectEnumRecipient
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedRecipientObjectEnum where
  toJSON e = String $ case e of
    DeletedRecipientObjectEnumRecipient -> "recipient"

instance FromJSON DeletedRecipientObjectEnum where
  parseJSON = withText "DeletedRecipientObjectEnum" $ \case
    "recipient" -> pure DeletedRecipientObjectEnumRecipient
    str -> fail (show str <> " is not a known valid option for DeletedRecipientObjectEnum")

data DeletedSkuObjectEnum
  = DeletedSkuObjectEnumSku
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedSkuObjectEnum where
  toJSON e = String $ case e of
    DeletedSkuObjectEnumSku -> "sku"

instance FromJSON DeletedSkuObjectEnum where
  parseJSON = withText "DeletedSkuObjectEnum" $ \case
    "sku" -> pure DeletedSkuObjectEnumSku
    str -> fail (show str <> " is not a known valid option for DeletedSkuObjectEnum")

data DeletedSubscriptionItemObjectEnum
  = DeletedSubscriptionItemObjectEnumSubscriptionItem
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedSubscriptionItemObjectEnum where
  toJSON e = String $ case e of
    DeletedSubscriptionItemObjectEnumSubscriptionItem -> "subscription_item"

instance FromJSON DeletedSubscriptionItemObjectEnum where
  parseJSON = withText "DeletedSubscriptionItemObjectEnum" $ \case
    "subscription_item" -> pure DeletedSubscriptionItemObjectEnumSubscriptionItem
    str -> fail (show str <> " is not a known valid option for DeletedSubscriptionItemObjectEnum")

data DeletedTaxIdObjectEnum
  = DeletedTaxIdObjectEnumTaxId
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedTaxIdObjectEnum where
  toJSON e = String $ case e of
    DeletedTaxIdObjectEnumTaxId -> "tax_id"

instance FromJSON DeletedTaxIdObjectEnum where
  parseJSON = withText "DeletedTaxIdObjectEnum" $ \case
    "tax_id" -> pure DeletedTaxIdObjectEnumTaxId
    str -> fail (show str <> " is not a known valid option for DeletedTaxIdObjectEnum")

data DeletedTerminalLocationObjectEnum
  = DeletedTerminalLocationObjectEnumTerminalLocation
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedTerminalLocationObjectEnum where
  toJSON e = String $ case e of
    DeletedTerminalLocationObjectEnumTerminalLocation -> "terminal.location"

instance FromJSON DeletedTerminalLocationObjectEnum where
  parseJSON = withText "DeletedTerminalLocationObjectEnum" $ \case
    "terminal.location" -> pure DeletedTerminalLocationObjectEnumTerminalLocation
    str -> fail (show str <> " is not a known valid option for DeletedTerminalLocationObjectEnum")

data DeletedTerminalReaderObjectEnum
  = DeletedTerminalReaderObjectEnumTerminalReader
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedTerminalReaderObjectEnum where
  toJSON e = String $ case e of
    DeletedTerminalReaderObjectEnumTerminalReader -> "terminal.reader"

instance FromJSON DeletedTerminalReaderObjectEnum where
  parseJSON = withText "DeletedTerminalReaderObjectEnum" $ \case
    "terminal.reader" -> pure DeletedTerminalReaderObjectEnumTerminalReader
    str -> fail (show str <> " is not a known valid option for DeletedTerminalReaderObjectEnum")

data DeletedWebhookEndpointObjectEnum
  = DeletedWebhookEndpointObjectEnumWebhookEndpoint
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DeletedWebhookEndpointObjectEnum where
  toJSON e = String $ case e of
    DeletedWebhookEndpointObjectEnumWebhookEndpoint -> "webhook_endpoint"

instance FromJSON DeletedWebhookEndpointObjectEnum where
  parseJSON = withText "DeletedWebhookEndpointObjectEnum" $ \case
    "webhook_endpoint" -> pure DeletedWebhookEndpointObjectEnumWebhookEndpoint
    str -> fail (show str <> " is not a known valid option for DeletedWebhookEndpointObjectEnum")

data DiscountObjectEnum
  = DiscountObjectEnumDiscount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DiscountObjectEnum where
  toJSON e = String $ case e of
    DiscountObjectEnumDiscount -> "discount"

instance FromJSON DiscountObjectEnum where
  parseJSON = withText "DiscountObjectEnum" $ \case
    "discount" -> pure DiscountObjectEnumDiscount
    str -> fail (show str <> " is not a known valid option for DiscountObjectEnum")

data DisputeObjectEnum
  = DisputeObjectEnumDispute
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DisputeObjectEnum where
  toJSON e = String $ case e of
    DisputeObjectEnumDispute -> "dispute"

instance FromJSON DisputeObjectEnum where
  parseJSON = withText "DisputeObjectEnum" $ \case
    "dispute" -> pure DisputeObjectEnumDispute
    str -> fail (show str <> " is not a known valid option for DisputeObjectEnum")

data DisputeStatusEnum
  = DisputeStatusEnumChargeRefunded
  | DisputeStatusEnumLost
  | DisputeStatusEnumNeedsResponse
  | DisputeStatusEnumUnderReview
  | DisputeStatusEnumWarningClosed
  | DisputeStatusEnumWarningNeedsResponse
  | DisputeStatusEnumWarningUnderReview
  | DisputeStatusEnumWon
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON DisputeStatusEnum where
  toJSON e = String $ case e of
    DisputeStatusEnumChargeRefunded -> "charge_refunded"
    DisputeStatusEnumLost -> "lost"
    DisputeStatusEnumNeedsResponse -> "needs_response"
    DisputeStatusEnumUnderReview -> "under_review"
    DisputeStatusEnumWarningClosed -> "warning_closed"
    DisputeStatusEnumWarningNeedsResponse -> "warning_needs_response"
    DisputeStatusEnumWarningUnderReview -> "warning_under_review"
    DisputeStatusEnumWon -> "won"

instance FromJSON DisputeStatusEnum where
  parseJSON = withText "DisputeStatusEnum" $ \case
    "charge_refunded" -> pure DisputeStatusEnumChargeRefunded
    "lost" -> pure DisputeStatusEnumLost
    "needs_response" -> pure DisputeStatusEnumNeedsResponse
    "under_review" -> pure DisputeStatusEnumUnderReview
    "warning_closed" -> pure DisputeStatusEnumWarningClosed
    "warning_needs_response" -> pure DisputeStatusEnumWarningNeedsResponse
    "warning_under_review" -> pure DisputeStatusEnumWarningUnderReview
    "won" -> pure DisputeStatusEnumWon
    str -> fail (show str <> " is not a known valid option for DisputeStatusEnum")

data EphemeralKeyObjectEnum
  = EphemeralKeyObjectEnumEphemeralKey
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON EphemeralKeyObjectEnum where
  toJSON e = String $ case e of
    EphemeralKeyObjectEnumEphemeralKey -> "ephemeral_key"

instance FromJSON EphemeralKeyObjectEnum where
  parseJSON = withText "EphemeralKeyObjectEnum" $ \case
    "ephemeral_key" -> pure EphemeralKeyObjectEnumEphemeralKey
    str -> fail (show str <> " is not a known valid option for EphemeralKeyObjectEnum")

data EventObjectEnum
  = EventObjectEnumEvent
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON EventObjectEnum where
  toJSON e = String $ case e of
    EventObjectEnumEvent -> "event"

instance FromJSON EventObjectEnum where
  parseJSON = withText "EventObjectEnum" $ \case
    "event" -> pure EventObjectEnumEvent
    str -> fail (show str <> " is not a known valid option for EventObjectEnum")

data ExchangeRateObjectEnum
  = ExchangeRateObjectEnumExchangeRate
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ExchangeRateObjectEnum where
  toJSON e = String $ case e of
    ExchangeRateObjectEnumExchangeRate -> "exchange_rate"

instance FromJSON ExchangeRateObjectEnum where
  parseJSON = withText "ExchangeRateObjectEnum" $ \case
    "exchange_rate" -> pure ExchangeRateObjectEnumExchangeRate
    str -> fail (show str <> " is not a known valid option for ExchangeRateObjectEnum")

data FeeRefundObjectEnum
  = FeeRefundObjectEnumFeeRefund
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON FeeRefundObjectEnum where
  toJSON e = String $ case e of
    FeeRefundObjectEnumFeeRefund -> "fee_refund"

instance FromJSON FeeRefundObjectEnum where
  parseJSON = withText "FeeRefundObjectEnum" $ \case
    "fee_refund" -> pure FeeRefundObjectEnumFeeRefund
    str -> fail (show str <> " is not a known valid option for FeeRefundObjectEnum")

data FeeTypeEnum
  = FeeTypeEnumApplicationFee
  | FeeTypeEnumStripeFee
  | FeeTypeEnumTax
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON FeeTypeEnum where
  toJSON e = String $ case e of
    FeeTypeEnumApplicationFee -> "application_fee"
    FeeTypeEnumStripeFee -> "stripe_fee"
    FeeTypeEnumTax -> "tax"

instance FromJSON FeeTypeEnum where
  parseJSON = withText "FeeTypeEnum" $ \case
    "application_fee" -> pure FeeTypeEnumApplicationFee
    "stripe_fee" -> pure FeeTypeEnumStripeFee
    "tax" -> pure FeeTypeEnumTax
    str -> fail (show str <> " is not a known valid option for FeeTypeEnum")

data FileLinkObjectEnum
  = FileLinkObjectEnumFileLink
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON FileLinkObjectEnum where
  toJSON e = String $ case e of
    FileLinkObjectEnumFileLink -> "file_link"

instance FromJSON FileLinkObjectEnum where
  parseJSON = withText "FileLinkObjectEnum" $ \case
    "file_link" -> pure FileLinkObjectEnumFileLink
    str -> fail (show str <> " is not a known valid option for FileLinkObjectEnum")

data FileObjectEnum
  = FileObjectEnumFile
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON FileObjectEnum where
  toJSON e = String $ case e of
    FileObjectEnumFile -> "file"

instance FromJSON FileObjectEnum where
  parseJSON = withText "FileObjectEnum" $ \case
    "file" -> pure FileObjectEnumFile
    str -> fail (show str <> " is not a known valid option for FileObjectEnum")

data InvoiceBillingEnum
  = InvoiceBillingEnumChargeAutomatically
  | InvoiceBillingEnumSendInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON InvoiceBillingEnum where
  toJSON e = String $ case e of
    InvoiceBillingEnumChargeAutomatically -> "charge_automatically"
    InvoiceBillingEnumSendInvoice -> "send_invoice"

instance FromJSON InvoiceBillingEnum where
  parseJSON = withText "InvoiceBillingEnum" $ \case
    "charge_automatically" -> pure InvoiceBillingEnumChargeAutomatically
    "send_invoice" -> pure InvoiceBillingEnumSendInvoice
    str -> fail (show str <> " is not a known valid option for InvoiceBillingEnum")

data InvoiceBillingReasonEnum
  = InvoiceBillingReasonEnumAutomaticPendingInvoiceItemInvoice
  | InvoiceBillingReasonEnumManual
  | InvoiceBillingReasonEnumSubscription
  | InvoiceBillingReasonEnumSubscriptionCreate
  | InvoiceBillingReasonEnumSubscriptionCycle
  | InvoiceBillingReasonEnumSubscriptionThreshold
  | InvoiceBillingReasonEnumSubscriptionUpdate
  | InvoiceBillingReasonEnumUpcoming
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON InvoiceBillingReasonEnum where
  toJSON e = String $ case e of
    InvoiceBillingReasonEnumAutomaticPendingInvoiceItemInvoice -> "automatic_pending_invoice_item_invoice"
    InvoiceBillingReasonEnumManual -> "manual"
    InvoiceBillingReasonEnumSubscription -> "subscription"
    InvoiceBillingReasonEnumSubscriptionCreate -> "subscription_create"
    InvoiceBillingReasonEnumSubscriptionCycle -> "subscription_cycle"
    InvoiceBillingReasonEnumSubscriptionThreshold -> "subscription_threshold"
    InvoiceBillingReasonEnumSubscriptionUpdate -> "subscription_update"
    InvoiceBillingReasonEnumUpcoming -> "upcoming"

instance FromJSON InvoiceBillingReasonEnum where
  parseJSON = withText "InvoiceBillingReasonEnum" $ \case
    "automatic_pending_invoice_item_invoice" -> pure InvoiceBillingReasonEnumAutomaticPendingInvoiceItemInvoice
    "manual" -> pure InvoiceBillingReasonEnumManual
    "subscription" -> pure InvoiceBillingReasonEnumSubscription
    "subscription_create" -> pure InvoiceBillingReasonEnumSubscriptionCreate
    "subscription_cycle" -> pure InvoiceBillingReasonEnumSubscriptionCycle
    "subscription_threshold" -> pure InvoiceBillingReasonEnumSubscriptionThreshold
    "subscription_update" -> pure InvoiceBillingReasonEnumSubscriptionUpdate
    "upcoming" -> pure InvoiceBillingReasonEnumUpcoming
    str -> fail (show str <> " is not a known valid option for InvoiceBillingReasonEnum")

data InvoiceCollectionMethodEnum
  = InvoiceCollectionMethodEnumChargeAutomatically
  | InvoiceCollectionMethodEnumSendInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON InvoiceCollectionMethodEnum where
  toJSON e = String $ case e of
    InvoiceCollectionMethodEnumChargeAutomatically -> "charge_automatically"
    InvoiceCollectionMethodEnumSendInvoice -> "send_invoice"

instance FromJSON InvoiceCollectionMethodEnum where
  parseJSON = withText "InvoiceCollectionMethodEnum" $ \case
    "charge_automatically" -> pure InvoiceCollectionMethodEnumChargeAutomatically
    "send_invoice" -> pure InvoiceCollectionMethodEnumSendInvoice
    str -> fail (show str <> " is not a known valid option for InvoiceCollectionMethodEnum")

data InvoiceCustomerTaxExemptEnum
  = InvoiceCustomerTaxExemptEnumExempt
  | InvoiceCustomerTaxExemptEnumNone
  | InvoiceCustomerTaxExemptEnumReverse
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON InvoiceCustomerTaxExemptEnum where
  toJSON e = String $ case e of
    InvoiceCustomerTaxExemptEnumExempt -> "exempt"
    InvoiceCustomerTaxExemptEnumNone -> "none"
    InvoiceCustomerTaxExemptEnumReverse -> "reverse"

instance FromJSON InvoiceCustomerTaxExemptEnum where
  parseJSON = withText "InvoiceCustomerTaxExemptEnum" $ \case
    "exempt" -> pure InvoiceCustomerTaxExemptEnumExempt
    "none" -> pure InvoiceCustomerTaxExemptEnumNone
    "reverse" -> pure InvoiceCustomerTaxExemptEnumReverse
    str -> fail (show str <> " is not a known valid option for InvoiceCustomerTaxExemptEnum")

data InvoiceObjectEnum
  = InvoiceObjectEnumInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON InvoiceObjectEnum where
  toJSON e = String $ case e of
    InvoiceObjectEnumInvoice -> "invoice"

instance FromJSON InvoiceObjectEnum where
  parseJSON = withText "InvoiceObjectEnum" $ \case
    "invoice" -> pure InvoiceObjectEnumInvoice
    str -> fail (show str <> " is not a known valid option for InvoiceObjectEnum")

data InvoiceStatusEnum
  = InvoiceStatusEnumDeleted
  | InvoiceStatusEnumDraft
  | InvoiceStatusEnumOpen
  | InvoiceStatusEnumPaid
  | InvoiceStatusEnumUncollectible
  | InvoiceStatusEnumVoid
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON InvoiceStatusEnum where
  toJSON e = String $ case e of
    InvoiceStatusEnumDeleted -> "deleted"
    InvoiceStatusEnumDraft -> "draft"
    InvoiceStatusEnumOpen -> "open"
    InvoiceStatusEnumPaid -> "paid"
    InvoiceStatusEnumUncollectible -> "uncollectible"
    InvoiceStatusEnumVoid -> "void"

instance FromJSON InvoiceStatusEnum where
  parseJSON = withText "InvoiceStatusEnum" $ \case
    "deleted" -> pure InvoiceStatusEnumDeleted
    "draft" -> pure InvoiceStatusEnumDraft
    "open" -> pure InvoiceStatusEnumOpen
    "paid" -> pure InvoiceStatusEnumPaid
    "uncollectible" -> pure InvoiceStatusEnumUncollectible
    "void" -> pure InvoiceStatusEnumVoid
    str -> fail (show str <> " is not a known valid option for InvoiceStatusEnum")

data InvoiceitemObjectEnum
  = InvoiceitemObjectEnumInvoiceitem
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON InvoiceitemObjectEnum where
  toJSON e = String $ case e of
    InvoiceitemObjectEnumInvoiceitem -> "invoiceitem"

instance FromJSON InvoiceitemObjectEnum where
  parseJSON = withText "InvoiceitemObjectEnum" $ \case
    "invoiceitem" -> pure InvoiceitemObjectEnumInvoiceitem
    str -> fail (show str <> " is not a known valid option for InvoiceitemObjectEnum")

data InvoicesResourceInvoiceTaxIdTypeEnum
  = InvoicesResourceInvoiceTaxIdTypeEnumAuAbn
  | InvoicesResourceInvoiceTaxIdTypeEnumEuVat
  | InvoicesResourceInvoiceTaxIdTypeEnumInGst
  | InvoicesResourceInvoiceTaxIdTypeEnumNoVat
  | InvoicesResourceInvoiceTaxIdTypeEnumNzGst
  | InvoicesResourceInvoiceTaxIdTypeEnumUnknown
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON InvoicesResourceInvoiceTaxIdTypeEnum where
  toJSON e = String $ case e of
    InvoicesResourceInvoiceTaxIdTypeEnumAuAbn -> "au_abn"
    InvoicesResourceInvoiceTaxIdTypeEnumEuVat -> "eu_vat"
    InvoicesResourceInvoiceTaxIdTypeEnumInGst -> "in_gst"
    InvoicesResourceInvoiceTaxIdTypeEnumNoVat -> "no_vat"
    InvoicesResourceInvoiceTaxIdTypeEnumNzGst -> "nz_gst"
    InvoicesResourceInvoiceTaxIdTypeEnumUnknown -> "unknown"

instance FromJSON InvoicesResourceInvoiceTaxIdTypeEnum where
  parseJSON = withText "InvoicesResourceInvoiceTaxIdTypeEnum" $ \case
    "au_abn" -> pure InvoicesResourceInvoiceTaxIdTypeEnumAuAbn
    "eu_vat" -> pure InvoicesResourceInvoiceTaxIdTypeEnumEuVat
    "in_gst" -> pure InvoicesResourceInvoiceTaxIdTypeEnumInGst
    "no_vat" -> pure InvoicesResourceInvoiceTaxIdTypeEnumNoVat
    "nz_gst" -> pure InvoicesResourceInvoiceTaxIdTypeEnumNzGst
    "unknown" -> pure InvoicesResourceInvoiceTaxIdTypeEnumUnknown
    str -> fail (show str <> " is not a known valid option for InvoicesResourceInvoiceTaxIdTypeEnum")

data IssuerFraudRecordFraudTypeEnum
  = IssuerFraudRecordFraudTypeEnumCardNeverReceived
  | IssuerFraudRecordFraudTypeEnumFraudulentCardApplication
  | IssuerFraudRecordFraudTypeEnumMadeWithCounterfeitCard
  | IssuerFraudRecordFraudTypeEnumMadeWithLostCard
  | IssuerFraudRecordFraudTypeEnumMadeWithStolenCard
  | IssuerFraudRecordFraudTypeEnumMisc
  | IssuerFraudRecordFraudTypeEnumUnauthorizedUseOfCard
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuerFraudRecordFraudTypeEnum where
  toJSON e = String $ case e of
    IssuerFraudRecordFraudTypeEnumCardNeverReceived -> "card_never_received"
    IssuerFraudRecordFraudTypeEnumFraudulentCardApplication -> "fraudulent_card_application"
    IssuerFraudRecordFraudTypeEnumMadeWithCounterfeitCard -> "made_with_counterfeit_card"
    IssuerFraudRecordFraudTypeEnumMadeWithLostCard -> "made_with_lost_card"
    IssuerFraudRecordFraudTypeEnumMadeWithStolenCard -> "made_with_stolen_card"
    IssuerFraudRecordFraudTypeEnumMisc -> "misc"
    IssuerFraudRecordFraudTypeEnumUnauthorizedUseOfCard -> "unauthorized_use_of_card"

instance FromJSON IssuerFraudRecordFraudTypeEnum where
  parseJSON = withText "IssuerFraudRecordFraudTypeEnum" $ \case
    "card_never_received" -> pure IssuerFraudRecordFraudTypeEnumCardNeverReceived
    "fraudulent_card_application" -> pure IssuerFraudRecordFraudTypeEnumFraudulentCardApplication
    "made_with_counterfeit_card" -> pure IssuerFraudRecordFraudTypeEnumMadeWithCounterfeitCard
    "made_with_lost_card" -> pure IssuerFraudRecordFraudTypeEnumMadeWithLostCard
    "made_with_stolen_card" -> pure IssuerFraudRecordFraudTypeEnumMadeWithStolenCard
    "misc" -> pure IssuerFraudRecordFraudTypeEnumMisc
    "unauthorized_use_of_card" -> pure IssuerFraudRecordFraudTypeEnumUnauthorizedUseOfCard
    str -> fail (show str <> " is not a known valid option for IssuerFraudRecordFraudTypeEnum")

data IssuerFraudRecordObjectEnum
  = IssuerFraudRecordObjectEnumIssuerFraudRecord
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuerFraudRecordObjectEnum where
  toJSON e = String $ case e of
    IssuerFraudRecordObjectEnumIssuerFraudRecord -> "issuer_fraud_record"

instance FromJSON IssuerFraudRecordObjectEnum where
  parseJSON = withText "IssuerFraudRecordObjectEnum" $ \case
    "issuer_fraud_record" -> pure IssuerFraudRecordObjectEnumIssuerFraudRecord
    str -> fail (show str <> " is not a known valid option for IssuerFraudRecordObjectEnum")

data IssuingAuthorizationAuthorizationMethodEnum
  = IssuingAuthorizationAuthorizationMethodEnumChip
  | IssuingAuthorizationAuthorizationMethodEnumContactless
  | IssuingAuthorizationAuthorizationMethodEnumKeyedIn
  | IssuingAuthorizationAuthorizationMethodEnumOnline
  | IssuingAuthorizationAuthorizationMethodEnumSwipe
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingAuthorizationAuthorizationMethodEnum where
  toJSON e = String $ case e of
    IssuingAuthorizationAuthorizationMethodEnumChip -> "chip"
    IssuingAuthorizationAuthorizationMethodEnumContactless -> "contactless"
    IssuingAuthorizationAuthorizationMethodEnumKeyedIn -> "keyed_in"
    IssuingAuthorizationAuthorizationMethodEnumOnline -> "online"
    IssuingAuthorizationAuthorizationMethodEnumSwipe -> "swipe"

instance FromJSON IssuingAuthorizationAuthorizationMethodEnum where
  parseJSON = withText "IssuingAuthorizationAuthorizationMethodEnum" $ \case
    "chip" -> pure IssuingAuthorizationAuthorizationMethodEnumChip
    "contactless" -> pure IssuingAuthorizationAuthorizationMethodEnumContactless
    "keyed_in" -> pure IssuingAuthorizationAuthorizationMethodEnumKeyedIn
    "online" -> pure IssuingAuthorizationAuthorizationMethodEnumOnline
    "swipe" -> pure IssuingAuthorizationAuthorizationMethodEnumSwipe
    str -> fail (show str <> " is not a known valid option for IssuingAuthorizationAuthorizationMethodEnum")

data IssuingAuthorizationObjectEnum
  = IssuingAuthorizationObjectEnumIssuingAuthorization
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingAuthorizationObjectEnum where
  toJSON e = String $ case e of
    IssuingAuthorizationObjectEnumIssuingAuthorization -> "issuing.authorization"

instance FromJSON IssuingAuthorizationObjectEnum where
  parseJSON = withText "IssuingAuthorizationObjectEnum" $ \case
    "issuing.authorization" -> pure IssuingAuthorizationObjectEnumIssuingAuthorization
    str -> fail (show str <> " is not a known valid option for IssuingAuthorizationObjectEnum")

data IssuingAuthorizationRequestReasonEnum
  = IssuingAuthorizationRequestReasonEnumAuthenticationFailed
  | IssuingAuthorizationRequestReasonEnumAuthorizationControls
  | IssuingAuthorizationRequestReasonEnumCardActive
  | IssuingAuthorizationRequestReasonEnumCardInactive
  | IssuingAuthorizationRequestReasonEnumInsufficientFunds
  | IssuingAuthorizationRequestReasonEnumAccountComplianceDisabled
  | IssuingAuthorizationRequestReasonEnumAccountInactive
  | IssuingAuthorizationRequestReasonEnumSuspectedFraud
  | IssuingAuthorizationRequestReasonEnumWebhookApproved
  | IssuingAuthorizationRequestReasonEnumWebhookDeclined
  | IssuingAuthorizationRequestReasonEnumWebhookTimeout
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingAuthorizationRequestReasonEnum where
  toJSON e = String $ case e of
    IssuingAuthorizationRequestReasonEnumAuthenticationFailed -> "authentication_failed"
    IssuingAuthorizationRequestReasonEnumAuthorizationControls -> "authorization_controls"
    IssuingAuthorizationRequestReasonEnumCardActive -> "card_active"
    IssuingAuthorizationRequestReasonEnumCardInactive -> "card_inactive"
    IssuingAuthorizationRequestReasonEnumInsufficientFunds -> "insufficient_funds"
    IssuingAuthorizationRequestReasonEnumAccountComplianceDisabled -> "account_compliance_disabled"
    IssuingAuthorizationRequestReasonEnumAccountInactive -> "account_inactive"
    IssuingAuthorizationRequestReasonEnumSuspectedFraud -> "suspected_fraud"
    IssuingAuthorizationRequestReasonEnumWebhookApproved -> "webhook_approved"
    IssuingAuthorizationRequestReasonEnumWebhookDeclined -> "webhook_declined"
    IssuingAuthorizationRequestReasonEnumWebhookTimeout -> "webhook_timeout"

instance FromJSON IssuingAuthorizationRequestReasonEnum where
  parseJSON = withText "IssuingAuthorizationRequestReasonEnum" $ \case
    "authentication_failed" -> pure IssuingAuthorizationRequestReasonEnumAuthenticationFailed
    "authorization_controls" -> pure IssuingAuthorizationRequestReasonEnumAuthorizationControls
    "card_active" -> pure IssuingAuthorizationRequestReasonEnumCardActive
    "card_inactive" -> pure IssuingAuthorizationRequestReasonEnumCardInactive
    "insufficient_funds" -> pure IssuingAuthorizationRequestReasonEnumInsufficientFunds
    "account_compliance_disabled" -> pure IssuingAuthorizationRequestReasonEnumAccountComplianceDisabled
    "account_inactive" -> pure IssuingAuthorizationRequestReasonEnumAccountInactive
    "suspected_fraud" -> pure IssuingAuthorizationRequestReasonEnumSuspectedFraud
    "webhook_approved" -> pure IssuingAuthorizationRequestReasonEnumWebhookApproved
    "webhook_declined" -> pure IssuingAuthorizationRequestReasonEnumWebhookDeclined
    "webhook_timeout" -> pure IssuingAuthorizationRequestReasonEnumWebhookTimeout
    str -> fail (show str <> " is not a known valid option for IssuingAuthorizationRequestReasonEnum")

data IssuingAuthorizationStatusEnum
  = IssuingAuthorizationStatusEnumPending
  | IssuingAuthorizationStatusEnumReversed
  | IssuingAuthorizationStatusEnumClosed
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingAuthorizationStatusEnum where
  toJSON e = String $ case e of
    IssuingAuthorizationStatusEnumPending -> "pending"
    IssuingAuthorizationStatusEnumReversed -> "reversed"
    IssuingAuthorizationStatusEnumClosed -> "closed"

instance FromJSON IssuingAuthorizationStatusEnum where
  parseJSON = withText "IssuingAuthorizationStatusEnum" $ \case
    "pending" -> pure IssuingAuthorizationStatusEnumPending
    "reversed" -> pure IssuingAuthorizationStatusEnumReversed
    "closed" -> pure IssuingAuthorizationStatusEnumClosed
    str -> fail (show str <> " is not a known valid option for IssuingAuthorizationStatusEnum")

data IssuingAuthorizationVerificationDataAddressLine1CheckEnum
  = IssuingAuthorizationVerificationDataAddressLine1CheckEnumMatch
  | IssuingAuthorizationVerificationDataAddressLine1CheckEnumMismatch
  | IssuingAuthorizationVerificationDataAddressLine1CheckEnumNotProvided
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingAuthorizationVerificationDataAddressLine1CheckEnum where
  toJSON e = String $ case e of
    IssuingAuthorizationVerificationDataAddressLine1CheckEnumMatch -> "match"
    IssuingAuthorizationVerificationDataAddressLine1CheckEnumMismatch -> "mismatch"
    IssuingAuthorizationVerificationDataAddressLine1CheckEnumNotProvided -> "not_provided"

instance FromJSON IssuingAuthorizationVerificationDataAddressLine1CheckEnum where
  parseJSON = withText "IssuingAuthorizationVerificationDataAddressLine1CheckEnum" $ \case
    "match" -> pure IssuingAuthorizationVerificationDataAddressLine1CheckEnumMatch
    "mismatch" -> pure IssuingAuthorizationVerificationDataAddressLine1CheckEnumMismatch
    "not_provided" -> pure IssuingAuthorizationVerificationDataAddressLine1CheckEnumNotProvided
    str -> fail (show str <> " is not a known valid option for IssuingAuthorizationVerificationDataAddressLine1CheckEnum")

data IssuingAuthorizationVerificationDataAddressZipCheckEnum
  = IssuingAuthorizationVerificationDataAddressZipCheckEnumMatch
  | IssuingAuthorizationVerificationDataAddressZipCheckEnumMismatch
  | IssuingAuthorizationVerificationDataAddressZipCheckEnumNotProvided
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingAuthorizationVerificationDataAddressZipCheckEnum where
  toJSON e = String $ case e of
    IssuingAuthorizationVerificationDataAddressZipCheckEnumMatch -> "match"
    IssuingAuthorizationVerificationDataAddressZipCheckEnumMismatch -> "mismatch"
    IssuingAuthorizationVerificationDataAddressZipCheckEnumNotProvided -> "not_provided"

instance FromJSON IssuingAuthorizationVerificationDataAddressZipCheckEnum where
  parseJSON = withText "IssuingAuthorizationVerificationDataAddressZipCheckEnum" $ \case
    "match" -> pure IssuingAuthorizationVerificationDataAddressZipCheckEnumMatch
    "mismatch" -> pure IssuingAuthorizationVerificationDataAddressZipCheckEnumMismatch
    "not_provided" -> pure IssuingAuthorizationVerificationDataAddressZipCheckEnumNotProvided
    str -> fail (show str <> " is not a known valid option for IssuingAuthorizationVerificationDataAddressZipCheckEnum")

data IssuingAuthorizationVerificationDataAuthenticationEnum
  = IssuingAuthorizationVerificationDataAuthenticationEnumSuccess
  | IssuingAuthorizationVerificationDataAuthenticationEnumFailure
  | IssuingAuthorizationVerificationDataAuthenticationEnumExempt
  | IssuingAuthorizationVerificationDataAuthenticationEnumNone
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingAuthorizationVerificationDataAuthenticationEnum where
  toJSON e = String $ case e of
    IssuingAuthorizationVerificationDataAuthenticationEnumSuccess -> "success"
    IssuingAuthorizationVerificationDataAuthenticationEnumFailure -> "failure"
    IssuingAuthorizationVerificationDataAuthenticationEnumExempt -> "exempt"
    IssuingAuthorizationVerificationDataAuthenticationEnumNone -> "none"

instance FromJSON IssuingAuthorizationVerificationDataAuthenticationEnum where
  parseJSON = withText "IssuingAuthorizationVerificationDataAuthenticationEnum" $ \case
    "success" -> pure IssuingAuthorizationVerificationDataAuthenticationEnumSuccess
    "failure" -> pure IssuingAuthorizationVerificationDataAuthenticationEnumFailure
    "exempt" -> pure IssuingAuthorizationVerificationDataAuthenticationEnumExempt
    "none" -> pure IssuingAuthorizationVerificationDataAuthenticationEnumNone
    str -> fail (show str <> " is not a known valid option for IssuingAuthorizationVerificationDataAuthenticationEnum")

data IssuingAuthorizationVerificationDataCvcCheckEnum
  = IssuingAuthorizationVerificationDataCvcCheckEnumMatch
  | IssuingAuthorizationVerificationDataCvcCheckEnumMismatch
  | IssuingAuthorizationVerificationDataCvcCheckEnumNotProvided
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingAuthorizationVerificationDataCvcCheckEnum where
  toJSON e = String $ case e of
    IssuingAuthorizationVerificationDataCvcCheckEnumMatch -> "match"
    IssuingAuthorizationVerificationDataCvcCheckEnumMismatch -> "mismatch"
    IssuingAuthorizationVerificationDataCvcCheckEnumNotProvided -> "not_provided"

instance FromJSON IssuingAuthorizationVerificationDataCvcCheckEnum where
  parseJSON = withText "IssuingAuthorizationVerificationDataCvcCheckEnum" $ \case
    "match" -> pure IssuingAuthorizationVerificationDataCvcCheckEnumMatch
    "mismatch" -> pure IssuingAuthorizationVerificationDataCvcCheckEnumMismatch
    "not_provided" -> pure IssuingAuthorizationVerificationDataCvcCheckEnumNotProvided
    str -> fail (show str <> " is not a known valid option for IssuingAuthorizationVerificationDataCvcCheckEnum")

data IssuingAuthorizationWalletProviderEnum
  = IssuingAuthorizationWalletProviderEnumApplePay
  | IssuingAuthorizationWalletProviderEnumGooglePay
  | IssuingAuthorizationWalletProviderEnumSamsungPay
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingAuthorizationWalletProviderEnum where
  toJSON e = String $ case e of
    IssuingAuthorizationWalletProviderEnumApplePay -> "apple_pay"
    IssuingAuthorizationWalletProviderEnumGooglePay -> "google_pay"
    IssuingAuthorizationWalletProviderEnumSamsungPay -> "samsung_pay"

instance FromJSON IssuingAuthorizationWalletProviderEnum where
  parseJSON = withText "IssuingAuthorizationWalletProviderEnum" $ \case
    "apple_pay" -> pure IssuingAuthorizationWalletProviderEnumApplePay
    "google_pay" -> pure IssuingAuthorizationWalletProviderEnumGooglePay
    "samsung_pay" -> pure IssuingAuthorizationWalletProviderEnumSamsungPay
    str -> fail (show str <> " is not a known valid option for IssuingAuthorizationWalletProviderEnum")

data IssuingCardAuthorizationControlsAllowedCategoriesEnum
  = IssuingCardAuthorizationControlsAllowedCategoriesEnumAcRefrigerationRepair
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAccountingBookkeepingServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAdvertisingServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAgriculturalCooperative
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAirlinesAirCarriers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAirportsFlyingFields
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAmbulanceServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAmusementParksCarnivals
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAntiqueReproductions
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAntiqueShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAquariums
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumArchitecturalSurveyingServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumArtDealersAndGalleries
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumArtistsSupplyAndCraftShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoAndHomeSupplyStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoBodyRepairShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoPaintShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoServiceShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomatedCashDisburse
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomatedFuelDispensers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomobileAssociations
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomotivePartsAndAccessoriesStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomotiveTireStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBailAndBondPayments
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBakeries
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBandsOrchestras
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBarberAndBeautyShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBettingCasinoGambling
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBicycleShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBilliardPoolEstablishments
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBoatDealers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBoatRentalsAndLeases
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBookStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBooksPeriodicalsAndNewspapers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBowlingAlleys
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBusLines
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBusinessSecretarialSchools
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumBuyingShoppingServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCameraAndPhotographicSupplyStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCandyNutAndConfectioneryStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersNewUsed
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersUsedOnly
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCarRentalAgencies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCarWashes
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCarpentryServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCarpetUpholsteryCleaning
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCaterers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumChemicalsAndAlliedProducts
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumChidrensAndInfantsWearStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumChildCareServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumChiropodistsPodiatrists
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumChiropractors
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCigarStoresAndStands
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCivicSocialFraternalAssociations
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCleaningAndMaintenance
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumClothingRental
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCollegesUniversities
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCommercialEquipment
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCommercialFootwear
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCommercialPhotographyArtAndGraphics
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCommuterTransportAndFerries
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerNetworkServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerProgramming
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerRepair
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerSoftwareStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumComputersPeripheralsAndSoftware
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumConcreteWorkServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumConstructionMaterials
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumConsultingPublicRelations
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCorrespondenceSchools
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCosmeticStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCounselingServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCountryClubs
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCourierServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCourtCosts
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCreditReportingAgencies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumCruiseLines
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDairyProductsStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDanceHallStudiosSchools
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDatingEscortServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDentistsOrthodontists
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDepartmentStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDetectiveAgencies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDigitalGoodsApplications
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingCatalogMerchant
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingInboundTelemarketing
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingInsuranceServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingOther
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingOutboundTelemarketing
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingSubscription
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingTravel
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDiscountStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDoctors
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDoorToDoorSales
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDrinkingPlaces
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDrugStoresAndPharmacies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDryCleaners
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDurableGoods
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumDutyFreeStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumEatingPlacesRestaurants
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumEducationalServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumElectricRazorStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumElectricalPartsAndEquipment
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumElectricalServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumElectronicsRepairShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumElectronicsStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumElementarySecondarySchools
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumEmploymentTempAgencies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumEquipmentRental
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumExterminatingServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFamilyClothingStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFastFoodRestaurants
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFinancialInstitutions
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFinesGovernmentAdministrativeEntities
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFloorCoveringStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFlorists
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFreezerAndLockerMeatProvisioners
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFuelDealersNonAutomotive
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFuneralServicesCrematories
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFurnitureRepairRefinishing
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumFurriersAndFurShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumGeneralServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumGiftCardNoveltyAndSouvenirShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumGlassPaintAndWallpaperStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumGlasswareCrystalStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumGolfCoursesPublic
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumGovernmentServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumGroceryStoresSupermarkets
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumHardwareEquipmentAndSupplies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumHardwareStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumHealthAndBeautySpas
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumHearingAidsSalesAndSupplies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumHeatingPlumbingAC
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumHobbyToyAndGameShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumHomeSupplyWarehouseStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumHospitals
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumHotelsMotelsAndResorts
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumHouseholdApplianceStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumIndustrialSupplies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumInformationRetrievalServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumInsuranceDefault
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumInsuranceUnderwritingPremiums
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumIntraCompanyPurchases
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumLandscapingServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumLaundries
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumLaundryCleaningServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumLegalServicesAttorneys
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumLuggageAndLeatherGoodsStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumLumberBuildingMaterialsStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumManualCashDisburse
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMarinasServiceAndSupplies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMasonryStoneworkAndPlaster
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMassageParlors
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMedicalAndDentalLabs
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMedicalServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMembershipOrganizations
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMensAndBoysClothingAndAccessoriesStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMensWomensClothingStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMetalServiceCenters
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneous
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousApparelAndAccessoryShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousAutoDealers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousBusinessServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousFoodStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralMerchandise
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousPublishingAndPrinting
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousRecreationServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousRepairShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousSpecialtyRetail
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMobileHomeDealers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMotionPictureTheaters
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorFreightCarriersAndTrucking
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorHomesDealers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorVehicleSuppliesAndNewParts
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsAndDealers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsDealers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumNewsDealersAndNewsstands
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumNonFiMoneyOrders
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumNonFiStoredValueCardPurchaseLoad
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumNondurableGoods
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumNurseriesLawnAndGardenSupplyStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumNursingPersonalCare
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumOfficeAndCommercialFurniture
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumOpticiansEyeglasses
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumOptometristsOphthalmologist
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumOrthopedicGoodsProstheticDevices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumOsteopaths
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPackageStoresBeerWineAndLiquor
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPaintsVarnishesAndSupplies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumParkingLotsGarages
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPassengerRailways
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPawnShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPetShopsPetFoodAndSupplies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPetroleumAndPetroleumProducts
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPhotoDeveloping
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPhotographicStudios
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPictureVideoProduction
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPlumbingHeatingEquipmentAndSupplies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPoliticalOrganizations
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPostalServicesGovernmentOnly
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumProfessionalServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumPublicWarehousingAndStorage
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumQuickCopyReproAndBlueprint
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumRailroads
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumRealEstateAgentsAndManagersRentals
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumRecordStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumRecreationalVehicleRentals
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumReligiousGoodsStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumReligiousOrganizations
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumRoofingSidingSheetMetal
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSecretarialSupportServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSecurityBrokersDealers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumServiceStations
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumShoeRepairHatCleaning
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumShoeStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSmallApplianceRepair
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSnowmobileDealers
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSpecialTradeServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSpecialtyCleaning
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSportingGoodsStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSportingRecreationCamps
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSportsAndRidingApparelStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSportsClubsFields
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumStampAndCoinStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumSwimmingPoolsSales
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTUiTravelGermany
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTailorsAlterations
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTaxPaymentsGovernmentAgencies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTaxPreparationServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTaxicabsLimousines
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTelecommunicationServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTelegraphServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTentAndAwningShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTestingLaboratories
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTheatricalTicketAgencies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTimeshares
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTireRetreadingAndRepair
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTollsBridgeFees
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTouristAttractionsAndExhibits
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTowingServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTrailerParksCampgrounds
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTransportationServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTravelAgenciesTourOperators
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTruckStopIteration
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTruckUtilityTrailerRentals
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTypesettingPlateMakingAndRelatedServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumTypewriterStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumUniformsCommercialClothing
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumUsedMerchandiseAndSecondhandStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumUtilities
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumVarietyStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumVeterinaryServices
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumVideoAmusementGameSupplies
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumVideoGameArcades
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumVideoTapeRentalStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumVocationalTradeSchools
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumWatchJewelryRepair
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumWeldingRepair
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumWholesaleClubs
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumWigAndToupeeStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumWiresMoneyOrders
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumWomensAccessoryAndSpecialtyShops
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumWomensReadyToWearStores
  | IssuingCardAuthorizationControlsAllowedCategoriesEnumWreckingAndSalvageYards
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardAuthorizationControlsAllowedCategoriesEnum where
  toJSON e = String $ case e of
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAcRefrigerationRepair -> "ac_refrigeration_repair"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAccountingBookkeepingServices -> "accounting_bookkeeping_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAdvertisingServices -> "advertising_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAgriculturalCooperative -> "agricultural_cooperative"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAirlinesAirCarriers -> "airlines_air_carriers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAirportsFlyingFields -> "airports_flying_fields"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAmbulanceServices -> "ambulance_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAmusementParksCarnivals -> "amusement_parks_carnivals"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAntiqueReproductions -> "antique_reproductions"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAntiqueShops -> "antique_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAquariums -> "aquariums"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumArchitecturalSurveyingServices -> "architectural_surveying_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumArtDealersAndGalleries -> "art_dealers_and_galleries"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumArtistsSupplyAndCraftShops -> "artists_supply_and_craft_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoAndHomeSupplyStores -> "auto_and_home_supply_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoBodyRepairShops -> "auto_body_repair_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoPaintShops -> "auto_paint_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoServiceShops -> "auto_service_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomatedCashDisburse -> "automated_cash_disburse"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomatedFuelDispensers -> "automated_fuel_dispensers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomobileAssociations -> "automobile_associations"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomotivePartsAndAccessoriesStores -> "automotive_parts_and_accessories_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomotiveTireStores -> "automotive_tire_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBailAndBondPayments -> "bail_and_bond_payments"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBakeries -> "bakeries"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBandsOrchestras -> "bands_orchestras"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBarberAndBeautyShops -> "barber_and_beauty_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBettingCasinoGambling -> "betting_casino_gambling"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBicycleShops -> "bicycle_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBilliardPoolEstablishments -> "billiard_pool_establishments"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBoatDealers -> "boat_dealers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBoatRentalsAndLeases -> "boat_rentals_and_leases"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBookStores -> "book_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBooksPeriodicalsAndNewspapers -> "books_periodicals_and_newspapers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBowlingAlleys -> "bowling_alleys"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBusLines -> "bus_lines"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBusinessSecretarialSchools -> "business_secretarial_schools"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumBuyingShoppingServices -> "buying_shopping_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio -> "cable_satellite_and_other_pay_television_and_radio"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCameraAndPhotographicSupplyStores -> "camera_and_photographic_supply_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCandyNutAndConfectioneryStores -> "candy_nut_and_confectionery_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersNewUsed -> "car_and_truck_dealers_new_used"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersUsedOnly -> "car_and_truck_dealers_used_only"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCarRentalAgencies -> "car_rental_agencies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCarWashes -> "car_washes"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCarpentryServices -> "carpentry_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCarpetUpholsteryCleaning -> "carpet_upholstery_cleaning"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCaterers -> "caterers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising -> "charitable_and_social_service_organizations_fundraising"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumChemicalsAndAlliedProducts -> "chemicals_and_allied_products"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumChidrensAndInfantsWearStores -> "chidrens_and_infants_wear_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumChildCareServices -> "child_care_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumChiropodistsPodiatrists -> "chiropodists_podiatrists"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumChiropractors -> "chiropractors"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCigarStoresAndStands -> "cigar_stores_and_stands"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCivicSocialFraternalAssociations -> "civic_social_fraternal_associations"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCleaningAndMaintenance -> "cleaning_and_maintenance"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumClothingRental -> "clothing_rental"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCollegesUniversities -> "colleges_universities"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCommercialEquipment -> "commercial_equipment"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCommercialFootwear -> "commercial_footwear"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCommercialPhotographyArtAndGraphics -> "commercial_photography_art_and_graphics"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCommuterTransportAndFerries -> "commuter_transport_and_ferries"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerNetworkServices -> "computer_network_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerProgramming -> "computer_programming"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerRepair -> "computer_repair"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerSoftwareStores -> "computer_software_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumComputersPeripheralsAndSoftware -> "computers_peripherals_and_software"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumConcreteWorkServices -> "concrete_work_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumConstructionMaterials -> "construction_materials"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumConsultingPublicRelations -> "consulting_public_relations"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCorrespondenceSchools -> "correspondence_schools"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCosmeticStores -> "cosmetic_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCounselingServices -> "counseling_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCountryClubs -> "country_clubs"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCourierServices -> "courier_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCourtCosts -> "court_costs"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCreditReportingAgencies -> "credit_reporting_agencies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumCruiseLines -> "cruise_lines"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDairyProductsStores -> "dairy_products_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDanceHallStudiosSchools -> "dance_hall_studios_schools"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDatingEscortServices -> "dating_escort_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDentistsOrthodontists -> "dentists_orthodontists"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDepartmentStores -> "department_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDetectiveAgencies -> "detective_agencies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDigitalGoodsApplications -> "digital_goods_applications"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingCatalogMerchant -> "direct_marketing_catalog_merchant"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant -> "direct_marketing_combination_catalog_and_retail_merchant"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingInboundTelemarketing -> "direct_marketing_inbound_telemarketing"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingInsuranceServices -> "direct_marketing_insurance_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingOther -> "direct_marketing_other"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingOutboundTelemarketing -> "direct_marketing_outbound_telemarketing"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingSubscription -> "direct_marketing_subscription"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingTravel -> "direct_marketing_travel"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDiscountStores -> "discount_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDoctors -> "doctors"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDoorToDoorSales -> "door_to_door_sales"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores -> "drapery_window_covering_and_upholstery_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDrinkingPlaces -> "drinking_places"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDrugStoresAndPharmacies -> "drug_stores_and_pharmacies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries -> "drugs_drug_proprietaries_and_druggist_sundries"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDryCleaners -> "dry_cleaners"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDurableGoods -> "durable_goods"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumDutyFreeStores -> "duty_free_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumEatingPlacesRestaurants -> "eating_places_restaurants"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumEducationalServices -> "educational_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumElectricRazorStores -> "electric_razor_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumElectricalPartsAndEquipment -> "electrical_parts_and_equipment"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumElectricalServices -> "electrical_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumElectronicsRepairShops -> "electronics_repair_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumElectronicsStores -> "electronics_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumElementarySecondarySchools -> "elementary_secondary_schools"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumEmploymentTempAgencies -> "employment_temp_agencies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumEquipmentRental -> "equipment_rental"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumExterminatingServices -> "exterminating_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFamilyClothingStores -> "family_clothing_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFastFoodRestaurants -> "fast_food_restaurants"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFinancialInstitutions -> "financial_institutions"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFinesGovernmentAdministrativeEntities -> "fines_government_administrative_entities"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores -> "fireplace_fireplace_screens_and_accessories_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFloorCoveringStores -> "floor_covering_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFlorists -> "florists"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers -> "florists_supplies_nursery_stock_and_flowers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFreezerAndLockerMeatProvisioners -> "freezer_and_locker_meat_provisioners"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFuelDealersNonAutomotive -> "fuel_dealers_non_automotive"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFuneralServicesCrematories -> "funeral_services_crematories"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances -> "furniture_home_furnishings_and_equipment_stores_except_appliances"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFurnitureRepairRefinishing -> "furniture_repair_refinishing"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumFurriersAndFurShops -> "furriers_and_fur_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumGeneralServices -> "general_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumGiftCardNoveltyAndSouvenirShops -> "gift_card_novelty_and_souvenir_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumGlassPaintAndWallpaperStores -> "glass_paint_and_wallpaper_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumGlasswareCrystalStores -> "glassware_crystal_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumGolfCoursesPublic -> "golf_courses_public"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumGovernmentServices -> "government_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumGroceryStoresSupermarkets -> "grocery_stores_supermarkets"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumHardwareEquipmentAndSupplies -> "hardware_equipment_and_supplies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumHardwareStores -> "hardware_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumHealthAndBeautySpas -> "health_and_beauty_spas"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumHearingAidsSalesAndSupplies -> "hearing_aids_sales_and_supplies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumHeatingPlumbingAC -> "heating_plumbing_a_c"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumHobbyToyAndGameShops -> "hobby_toy_and_game_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumHomeSupplyWarehouseStores -> "home_supply_warehouse_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumHospitals -> "hospitals"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumHotelsMotelsAndResorts -> "hotels_motels_and_resorts"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumHouseholdApplianceStores -> "household_appliance_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumIndustrialSupplies -> "industrial_supplies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumInformationRetrievalServices -> "information_retrieval_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumInsuranceDefault -> "insurance_default"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumInsuranceUnderwritingPremiums -> "insurance_underwriting_premiums"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumIntraCompanyPurchases -> "intra_company_purchases"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores -> "jewelry_stores_watches_clocks_and_silverware_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumLandscapingServices -> "landscaping_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumLaundries -> "laundries"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumLaundryCleaningServices -> "laundry_cleaning_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumLegalServicesAttorneys -> "legal_services_attorneys"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumLuggageAndLeatherGoodsStores -> "luggage_and_leather_goods_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumLumberBuildingMaterialsStores -> "lumber_building_materials_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumManualCashDisburse -> "manual_cash_disburse"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMarinasServiceAndSupplies -> "marinas_service_and_supplies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMasonryStoneworkAndPlaster -> "masonry_stonework_and_plaster"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMassageParlors -> "massage_parlors"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMedicalAndDentalLabs -> "medical_and_dental_labs"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies -> "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMedicalServices -> "medical_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMembershipOrganizations -> "membership_organizations"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMensAndBoysClothingAndAccessoriesStores -> "mens_and_boys_clothing_and_accessories_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMensWomensClothingStores -> "mens_womens_clothing_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMetalServiceCenters -> "metal_service_centers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneous -> "miscellaneous"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousApparelAndAccessoryShops -> "miscellaneous_apparel_and_accessory_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousAutoDealers -> "miscellaneous_auto_dealers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousBusinessServices -> "miscellaneous_business_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousFoodStores -> "miscellaneous_food_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralMerchandise -> "miscellaneous_general_merchandise"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralServices -> "miscellaneous_general_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores -> "miscellaneous_home_furnishing_specialty_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousPublishingAndPrinting -> "miscellaneous_publishing_and_printing"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousRecreationServices -> "miscellaneous_recreation_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousRepairShops -> "miscellaneous_repair_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousSpecialtyRetail -> "miscellaneous_specialty_retail"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMobileHomeDealers -> "mobile_home_dealers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMotionPictureTheaters -> "motion_picture_theaters"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorFreightCarriersAndTrucking -> "motor_freight_carriers_and_trucking"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorHomesDealers -> "motor_homes_dealers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorVehicleSuppliesAndNewParts -> "motor_vehicle_supplies_and_new_parts"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsAndDealers -> "motorcycle_shops_and_dealers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsDealers -> "motorcycle_shops_dealers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic -> "music_stores_musical_instruments_pianos_and_sheet_music"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumNewsDealersAndNewsstands -> "news_dealers_and_newsstands"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumNonFiMoneyOrders -> "non_fi_money_orders"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumNonFiStoredValueCardPurchaseLoad -> "non_fi_stored_value_card_purchase_load"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumNondurableGoods -> "nondurable_goods"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumNurseriesLawnAndGardenSupplyStores -> "nurseries_lawn_and_garden_supply_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumNursingPersonalCare -> "nursing_personal_care"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumOfficeAndCommercialFurniture -> "office_and_commercial_furniture"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumOpticiansEyeglasses -> "opticians_eyeglasses"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumOptometristsOphthalmologist -> "optometrists_ophthalmologist"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumOrthopedicGoodsProstheticDevices -> "orthopedic_goods_prosthetic_devices"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumOsteopaths -> "osteopaths"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPackageStoresBeerWineAndLiquor -> "package_stores_beer_wine_and_liquor"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPaintsVarnishesAndSupplies -> "paints_varnishes_and_supplies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumParkingLotsGarages -> "parking_lots_garages"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPassengerRailways -> "passenger_railways"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPawnShops -> "pawn_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPetShopsPetFoodAndSupplies -> "pet_shops_pet_food_and_supplies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPetroleumAndPetroleumProducts -> "petroleum_and_petroleum_products"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPhotoDeveloping -> "photo_developing"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies -> "photographic_photocopy_microfilm_equipment_and_supplies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPhotographicStudios -> "photographic_studios"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPictureVideoProduction -> "picture_video_production"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods -> "piece_goods_notions_and_other_dry_goods"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPlumbingHeatingEquipmentAndSupplies -> "plumbing_heating_equipment_and_supplies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPoliticalOrganizations -> "political_organizations"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPostalServicesGovernmentOnly -> "postal_services_government_only"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry -> "precious_stones_and_metals_watches_and_jewelry"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumProfessionalServices -> "professional_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumPublicWarehousingAndStorage -> "public_warehousing_and_storage"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumQuickCopyReproAndBlueprint -> "quick_copy_repro_and_blueprint"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumRailroads -> "railroads"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumRealEstateAgentsAndManagersRentals -> "real_estate_agents_and_managers_rentals"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumRecordStores -> "record_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumRecreationalVehicleRentals -> "recreational_vehicle_rentals"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumReligiousGoodsStores -> "religious_goods_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumReligiousOrganizations -> "religious_organizations"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumRoofingSidingSheetMetal -> "roofing_siding_sheet_metal"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSecretarialSupportServices -> "secretarial_support_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSecurityBrokersDealers -> "security_brokers_dealers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumServiceStations -> "service_stations"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores -> "sewing_needlework_fabric_and_piece_goods_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumShoeRepairHatCleaning -> "shoe_repair_hat_cleaning"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumShoeStores -> "shoe_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSmallApplianceRepair -> "small_appliance_repair"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSnowmobileDealers -> "snowmobile_dealers"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSpecialTradeServices -> "special_trade_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSpecialtyCleaning -> "specialty_cleaning"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSportingGoodsStores -> "sporting_goods_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSportingRecreationCamps -> "sporting_recreation_camps"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSportsAndRidingApparelStores -> "sports_and_riding_apparel_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSportsClubsFields -> "sports_clubs_fields"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumStampAndCoinStores -> "stamp_and_coin_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper -> "stationary_office_supplies_printing_and_writing_paper"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores -> "stationery_stores_office_and_school_supply_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumSwimmingPoolsSales -> "swimming_pools_sales"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTUiTravelGermany -> "t_ui_travel_germany"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTailorsAlterations -> "tailors_alterations"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTaxPaymentsGovernmentAgencies -> "tax_payments_government_agencies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTaxPreparationServices -> "tax_preparation_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTaxicabsLimousines -> "taxicabs_limousines"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales -> "telecommunication_equipment_and_telephone_sales"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTelecommunicationServices -> "telecommunication_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTelegraphServices -> "telegraph_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTentAndAwningShops -> "tent_and_awning_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTestingLaboratories -> "testing_laboratories"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTheatricalTicketAgencies -> "theatrical_ticket_agencies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTimeshares -> "timeshares"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTireRetreadingAndRepair -> "tire_retreading_and_repair"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTollsBridgeFees -> "tolls_bridge_fees"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTouristAttractionsAndExhibits -> "tourist_attractions_and_exhibits"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTowingServices -> "towing_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTrailerParksCampgrounds -> "trailer_parks_campgrounds"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTransportationServices -> "transportation_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTravelAgenciesTourOperators -> "travel_agencies_tour_operators"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTruckStopIteration -> "truck_stop_iteration"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTruckUtilityTrailerRentals -> "truck_utility_trailer_rentals"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTypesettingPlateMakingAndRelatedServices -> "typesetting_plate_making_and_related_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumTypewriterStores -> "typewriter_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments -> "u_s_federal_government_agencies_or_departments"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumUniformsCommercialClothing -> "uniforms_commercial_clothing"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumUsedMerchandiseAndSecondhandStores -> "used_merchandise_and_secondhand_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumUtilities -> "utilities"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumVarietyStores -> "variety_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumVeterinaryServices -> "veterinary_services"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumVideoAmusementGameSupplies -> "video_amusement_game_supplies"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumVideoGameArcades -> "video_game_arcades"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumVideoTapeRentalStores -> "video_tape_rental_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumVocationalTradeSchools -> "vocational_trade_schools"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumWatchJewelryRepair -> "watch_jewelry_repair"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumWeldingRepair -> "welding_repair"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumWholesaleClubs -> "wholesale_clubs"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumWigAndToupeeStores -> "wig_and_toupee_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumWiresMoneyOrders -> "wires_money_orders"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumWomensAccessoryAndSpecialtyShops -> "womens_accessory_and_specialty_shops"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumWomensReadyToWearStores -> "womens_ready_to_wear_stores"
    IssuingCardAuthorizationControlsAllowedCategoriesEnumWreckingAndSalvageYards -> "wrecking_and_salvage_yards"

instance FromJSON IssuingCardAuthorizationControlsAllowedCategoriesEnum where
  parseJSON = withText "IssuingCardAuthorizationControlsAllowedCategoriesEnum" $ \case
    "ac_refrigeration_repair" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAcRefrigerationRepair
    "accounting_bookkeeping_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAccountingBookkeepingServices
    "advertising_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAdvertisingServices
    "agricultural_cooperative" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAgriculturalCooperative
    "airlines_air_carriers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAirlinesAirCarriers
    "airports_flying_fields" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAirportsFlyingFields
    "ambulance_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAmbulanceServices
    "amusement_parks_carnivals" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAmusementParksCarnivals
    "antique_reproductions" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAntiqueReproductions
    "antique_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAntiqueShops
    "aquariums" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAquariums
    "architectural_surveying_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumArchitecturalSurveyingServices
    "art_dealers_and_galleries" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumArtDealersAndGalleries
    "artists_supply_and_craft_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumArtistsSupplyAndCraftShops
    "auto_and_home_supply_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoAndHomeSupplyStores
    "auto_body_repair_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoBodyRepairShops
    "auto_paint_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoPaintShops
    "auto_service_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAutoServiceShops
    "automated_cash_disburse" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomatedCashDisburse
    "automated_fuel_dispensers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomatedFuelDispensers
    "automobile_associations" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomobileAssociations
    "automotive_parts_and_accessories_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomotivePartsAndAccessoriesStores
    "automotive_tire_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumAutomotiveTireStores
    "bail_and_bond_payments" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBailAndBondPayments
    "bakeries" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBakeries
    "bands_orchestras" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBandsOrchestras
    "barber_and_beauty_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBarberAndBeautyShops
    "betting_casino_gambling" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBettingCasinoGambling
    "bicycle_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBicycleShops
    "billiard_pool_establishments" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBilliardPoolEstablishments
    "boat_dealers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBoatDealers
    "boat_rentals_and_leases" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBoatRentalsAndLeases
    "book_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBookStores
    "books_periodicals_and_newspapers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBooksPeriodicalsAndNewspapers
    "bowling_alleys" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBowlingAlleys
    "bus_lines" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBusLines
    "business_secretarial_schools" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBusinessSecretarialSchools
    "buying_shopping_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumBuyingShoppingServices
    "cable_satellite_and_other_pay_television_and_radio" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
    "camera_and_photographic_supply_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCameraAndPhotographicSupplyStores
    "candy_nut_and_confectionery_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCandyNutAndConfectioneryStores
    "car_and_truck_dealers_new_used" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersNewUsed
    "car_and_truck_dealers_used_only" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersUsedOnly
    "car_rental_agencies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCarRentalAgencies
    "car_washes" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCarWashes
    "carpentry_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCarpentryServices
    "carpet_upholstery_cleaning" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCarpetUpholsteryCleaning
    "caterers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCaterers
    "charitable_and_social_service_organizations_fundraising" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
    "chemicals_and_allied_products" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumChemicalsAndAlliedProducts
    "chidrens_and_infants_wear_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumChidrensAndInfantsWearStores
    "child_care_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumChildCareServices
    "chiropodists_podiatrists" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumChiropodistsPodiatrists
    "chiropractors" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumChiropractors
    "cigar_stores_and_stands" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCigarStoresAndStands
    "civic_social_fraternal_associations" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCivicSocialFraternalAssociations
    "cleaning_and_maintenance" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCleaningAndMaintenance
    "clothing_rental" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumClothingRental
    "colleges_universities" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCollegesUniversities
    "commercial_equipment" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCommercialEquipment
    "commercial_footwear" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCommercialFootwear
    "commercial_photography_art_and_graphics" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCommercialPhotographyArtAndGraphics
    "commuter_transport_and_ferries" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCommuterTransportAndFerries
    "computer_network_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerNetworkServices
    "computer_programming" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerProgramming
    "computer_repair" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerRepair
    "computer_software_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumComputerSoftwareStores
    "computers_peripherals_and_software" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumComputersPeripheralsAndSoftware
    "concrete_work_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumConcreteWorkServices
    "construction_materials" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumConstructionMaterials
    "consulting_public_relations" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumConsultingPublicRelations
    "correspondence_schools" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCorrespondenceSchools
    "cosmetic_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCosmeticStores
    "counseling_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCounselingServices
    "country_clubs" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCountryClubs
    "courier_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCourierServices
    "court_costs" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCourtCosts
    "credit_reporting_agencies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCreditReportingAgencies
    "cruise_lines" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumCruiseLines
    "dairy_products_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDairyProductsStores
    "dance_hall_studios_schools" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDanceHallStudiosSchools
    "dating_escort_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDatingEscortServices
    "dentists_orthodontists" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDentistsOrthodontists
    "department_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDepartmentStores
    "detective_agencies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDetectiveAgencies
    "digital_goods_applications" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDigitalGoodsApplications
    "direct_marketing_catalog_merchant" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingCatalogMerchant
    "direct_marketing_combination_catalog_and_retail_merchant" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
    "direct_marketing_inbound_telemarketing" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingInboundTelemarketing
    "direct_marketing_insurance_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingInsuranceServices
    "direct_marketing_other" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingOther
    "direct_marketing_outbound_telemarketing" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingOutboundTelemarketing
    "direct_marketing_subscription" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingSubscription
    "direct_marketing_travel" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDirectMarketingTravel
    "discount_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDiscountStores
    "doctors" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDoctors
    "door_to_door_sales" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDoorToDoorSales
    "drapery_window_covering_and_upholstery_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
    "drinking_places" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDrinkingPlaces
    "drug_stores_and_pharmacies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDrugStoresAndPharmacies
    "drugs_drug_proprietaries_and_druggist_sundries" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
    "dry_cleaners" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDryCleaners
    "durable_goods" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDurableGoods
    "duty_free_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumDutyFreeStores
    "eating_places_restaurants" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumEatingPlacesRestaurants
    "educational_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumEducationalServices
    "electric_razor_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumElectricRazorStores
    "electrical_parts_and_equipment" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumElectricalPartsAndEquipment
    "electrical_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumElectricalServices
    "electronics_repair_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumElectronicsRepairShops
    "electronics_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumElectronicsStores
    "elementary_secondary_schools" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumElementarySecondarySchools
    "employment_temp_agencies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumEmploymentTempAgencies
    "equipment_rental" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumEquipmentRental
    "exterminating_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumExterminatingServices
    "family_clothing_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFamilyClothingStores
    "fast_food_restaurants" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFastFoodRestaurants
    "financial_institutions" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFinancialInstitutions
    "fines_government_administrative_entities" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFinesGovernmentAdministrativeEntities
    "fireplace_fireplace_screens_and_accessories_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
    "floor_covering_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFloorCoveringStores
    "florists" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFlorists
    "florists_supplies_nursery_stock_and_flowers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
    "freezer_and_locker_meat_provisioners" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFreezerAndLockerMeatProvisioners
    "fuel_dealers_non_automotive" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFuelDealersNonAutomotive
    "funeral_services_crematories" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFuneralServicesCrematories
    "furniture_home_furnishings_and_equipment_stores_except_appliances" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
    "furniture_repair_refinishing" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFurnitureRepairRefinishing
    "furriers_and_fur_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumFurriersAndFurShops
    "general_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumGeneralServices
    "gift_card_novelty_and_souvenir_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumGiftCardNoveltyAndSouvenirShops
    "glass_paint_and_wallpaper_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumGlassPaintAndWallpaperStores
    "glassware_crystal_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumGlasswareCrystalStores
    "golf_courses_public" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumGolfCoursesPublic
    "government_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumGovernmentServices
    "grocery_stores_supermarkets" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumGroceryStoresSupermarkets
    "hardware_equipment_and_supplies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumHardwareEquipmentAndSupplies
    "hardware_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumHardwareStores
    "health_and_beauty_spas" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumHealthAndBeautySpas
    "hearing_aids_sales_and_supplies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumHearingAidsSalesAndSupplies
    "heating_plumbing_a_c" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumHeatingPlumbingAC
    "hobby_toy_and_game_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumHobbyToyAndGameShops
    "home_supply_warehouse_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumHomeSupplyWarehouseStores
    "hospitals" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumHospitals
    "hotels_motels_and_resorts" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumHotelsMotelsAndResorts
    "household_appliance_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumHouseholdApplianceStores
    "industrial_supplies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumIndustrialSupplies
    "information_retrieval_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumInformationRetrievalServices
    "insurance_default" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumInsuranceDefault
    "insurance_underwriting_premiums" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumInsuranceUnderwritingPremiums
    "intra_company_purchases" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumIntraCompanyPurchases
    "jewelry_stores_watches_clocks_and_silverware_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
    "landscaping_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumLandscapingServices
    "laundries" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumLaundries
    "laundry_cleaning_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumLaundryCleaningServices
    "legal_services_attorneys" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumLegalServicesAttorneys
    "luggage_and_leather_goods_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumLuggageAndLeatherGoodsStores
    "lumber_building_materials_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumLumberBuildingMaterialsStores
    "manual_cash_disburse" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumManualCashDisburse
    "marinas_service_and_supplies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMarinasServiceAndSupplies
    "masonry_stonework_and_plaster" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMasonryStoneworkAndPlaster
    "massage_parlors" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMassageParlors
    "medical_and_dental_labs" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMedicalAndDentalLabs
    "medical_dental_ophthalmic_and_hospital_equipment_and_supplies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
    "medical_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMedicalServices
    "membership_organizations" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMembershipOrganizations
    "mens_and_boys_clothing_and_accessories_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMensAndBoysClothingAndAccessoriesStores
    "mens_womens_clothing_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMensWomensClothingStores
    "metal_service_centers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMetalServiceCenters
    "miscellaneous" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneous
    "miscellaneous_apparel_and_accessory_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousApparelAndAccessoryShops
    "miscellaneous_auto_dealers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousAutoDealers
    "miscellaneous_business_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousBusinessServices
    "miscellaneous_food_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousFoodStores
    "miscellaneous_general_merchandise" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralMerchandise
    "miscellaneous_general_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralServices
    "miscellaneous_home_furnishing_specialty_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
    "miscellaneous_publishing_and_printing" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousPublishingAndPrinting
    "miscellaneous_recreation_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousRecreationServices
    "miscellaneous_repair_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousRepairShops
    "miscellaneous_specialty_retail" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMiscellaneousSpecialtyRetail
    "mobile_home_dealers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMobileHomeDealers
    "motion_picture_theaters" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMotionPictureTheaters
    "motor_freight_carriers_and_trucking" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorFreightCarriersAndTrucking
    "motor_homes_dealers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorHomesDealers
    "motor_vehicle_supplies_and_new_parts" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorVehicleSuppliesAndNewParts
    "motorcycle_shops_and_dealers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsAndDealers
    "motorcycle_shops_dealers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsDealers
    "music_stores_musical_instruments_pianos_and_sheet_music" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
    "news_dealers_and_newsstands" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumNewsDealersAndNewsstands
    "non_fi_money_orders" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumNonFiMoneyOrders
    "non_fi_stored_value_card_purchase_load" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumNonFiStoredValueCardPurchaseLoad
    "nondurable_goods" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumNondurableGoods
    "nurseries_lawn_and_garden_supply_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumNurseriesLawnAndGardenSupplyStores
    "nursing_personal_care" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumNursingPersonalCare
    "office_and_commercial_furniture" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumOfficeAndCommercialFurniture
    "opticians_eyeglasses" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumOpticiansEyeglasses
    "optometrists_ophthalmologist" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumOptometristsOphthalmologist
    "orthopedic_goods_prosthetic_devices" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumOrthopedicGoodsProstheticDevices
    "osteopaths" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumOsteopaths
    "package_stores_beer_wine_and_liquor" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPackageStoresBeerWineAndLiquor
    "paints_varnishes_and_supplies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPaintsVarnishesAndSupplies
    "parking_lots_garages" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumParkingLotsGarages
    "passenger_railways" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPassengerRailways
    "pawn_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPawnShops
    "pet_shops_pet_food_and_supplies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPetShopsPetFoodAndSupplies
    "petroleum_and_petroleum_products" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPetroleumAndPetroleumProducts
    "photo_developing" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPhotoDeveloping
    "photographic_photocopy_microfilm_equipment_and_supplies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
    "photographic_studios" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPhotographicStudios
    "picture_video_production" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPictureVideoProduction
    "piece_goods_notions_and_other_dry_goods" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
    "plumbing_heating_equipment_and_supplies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPlumbingHeatingEquipmentAndSupplies
    "political_organizations" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPoliticalOrganizations
    "postal_services_government_only" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPostalServicesGovernmentOnly
    "precious_stones_and_metals_watches_and_jewelry" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
    "professional_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumProfessionalServices
    "public_warehousing_and_storage" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumPublicWarehousingAndStorage
    "quick_copy_repro_and_blueprint" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumQuickCopyReproAndBlueprint
    "railroads" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumRailroads
    "real_estate_agents_and_managers_rentals" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumRealEstateAgentsAndManagersRentals
    "record_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumRecordStores
    "recreational_vehicle_rentals" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumRecreationalVehicleRentals
    "religious_goods_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumReligiousGoodsStores
    "religious_organizations" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumReligiousOrganizations
    "roofing_siding_sheet_metal" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumRoofingSidingSheetMetal
    "secretarial_support_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSecretarialSupportServices
    "security_brokers_dealers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSecurityBrokersDealers
    "service_stations" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumServiceStations
    "sewing_needlework_fabric_and_piece_goods_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
    "shoe_repair_hat_cleaning" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumShoeRepairHatCleaning
    "shoe_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumShoeStores
    "small_appliance_repair" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSmallApplianceRepair
    "snowmobile_dealers" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSnowmobileDealers
    "special_trade_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSpecialTradeServices
    "specialty_cleaning" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSpecialtyCleaning
    "sporting_goods_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSportingGoodsStores
    "sporting_recreation_camps" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSportingRecreationCamps
    "sports_and_riding_apparel_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSportsAndRidingApparelStores
    "sports_clubs_fields" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSportsClubsFields
    "stamp_and_coin_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumStampAndCoinStores
    "stationary_office_supplies_printing_and_writing_paper" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
    "stationery_stores_office_and_school_supply_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
    "swimming_pools_sales" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumSwimmingPoolsSales
    "t_ui_travel_germany" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTUiTravelGermany
    "tailors_alterations" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTailorsAlterations
    "tax_payments_government_agencies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTaxPaymentsGovernmentAgencies
    "tax_preparation_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTaxPreparationServices
    "taxicabs_limousines" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTaxicabsLimousines
    "telecommunication_equipment_and_telephone_sales" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
    "telecommunication_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTelecommunicationServices
    "telegraph_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTelegraphServices
    "tent_and_awning_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTentAndAwningShops
    "testing_laboratories" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTestingLaboratories
    "theatrical_ticket_agencies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTheatricalTicketAgencies
    "timeshares" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTimeshares
    "tire_retreading_and_repair" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTireRetreadingAndRepair
    "tolls_bridge_fees" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTollsBridgeFees
    "tourist_attractions_and_exhibits" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTouristAttractionsAndExhibits
    "towing_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTowingServices
    "trailer_parks_campgrounds" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTrailerParksCampgrounds
    "transportation_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTransportationServices
    "travel_agencies_tour_operators" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTravelAgenciesTourOperators
    "truck_stop_iteration" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTruckStopIteration
    "truck_utility_trailer_rentals" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTruckUtilityTrailerRentals
    "typesetting_plate_making_and_related_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTypesettingPlateMakingAndRelatedServices
    "typewriter_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumTypewriterStores
    "u_s_federal_government_agencies_or_departments" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
    "uniforms_commercial_clothing" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumUniformsCommercialClothing
    "used_merchandise_and_secondhand_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumUsedMerchandiseAndSecondhandStores
    "utilities" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumUtilities
    "variety_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumVarietyStores
    "veterinary_services" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumVeterinaryServices
    "video_amusement_game_supplies" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumVideoAmusementGameSupplies
    "video_game_arcades" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumVideoGameArcades
    "video_tape_rental_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumVideoTapeRentalStores
    "vocational_trade_schools" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumVocationalTradeSchools
    "watch_jewelry_repair" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumWatchJewelryRepair
    "welding_repair" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumWeldingRepair
    "wholesale_clubs" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumWholesaleClubs
    "wig_and_toupee_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumWigAndToupeeStores
    "wires_money_orders" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumWiresMoneyOrders
    "womens_accessory_and_specialty_shops" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumWomensAccessoryAndSpecialtyShops
    "womens_ready_to_wear_stores" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumWomensReadyToWearStores
    "wrecking_and_salvage_yards" -> pure IssuingCardAuthorizationControlsAllowedCategoriesEnumWreckingAndSalvageYards
    str -> fail (show str <> " is not a known valid option for IssuingCardAuthorizationControlsAllowedCategoriesEnum")

data IssuingCardAuthorizationControlsBlockedCategoriesEnum
  = IssuingCardAuthorizationControlsBlockedCategoriesEnumAcRefrigerationRepair
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAccountingBookkeepingServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAdvertisingServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAgriculturalCooperative
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAirlinesAirCarriers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAirportsFlyingFields
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAmbulanceServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAmusementParksCarnivals
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAntiqueReproductions
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAntiqueShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAquariums
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumArchitecturalSurveyingServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumArtDealersAndGalleries
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumArtistsSupplyAndCraftShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoAndHomeSupplyStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoBodyRepairShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoPaintShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoServiceShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomatedCashDisburse
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomatedFuelDispensers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomobileAssociations
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomotivePartsAndAccessoriesStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomotiveTireStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBailAndBondPayments
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBakeries
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBandsOrchestras
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBarberAndBeautyShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBettingCasinoGambling
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBicycleShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBilliardPoolEstablishments
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBoatDealers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBoatRentalsAndLeases
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBookStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBooksPeriodicalsAndNewspapers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBowlingAlleys
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBusLines
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBusinessSecretarialSchools
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumBuyingShoppingServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCameraAndPhotographicSupplyStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCandyNutAndConfectioneryStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersNewUsed
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersUsedOnly
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCarRentalAgencies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCarWashes
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCarpentryServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCarpetUpholsteryCleaning
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCaterers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumChemicalsAndAlliedProducts
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumChidrensAndInfantsWearStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumChildCareServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumChiropodistsPodiatrists
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumChiropractors
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCigarStoresAndStands
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCivicSocialFraternalAssociations
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCleaningAndMaintenance
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumClothingRental
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCollegesUniversities
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCommercialEquipment
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCommercialFootwear
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCommercialPhotographyArtAndGraphics
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCommuterTransportAndFerries
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerNetworkServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerProgramming
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerRepair
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerSoftwareStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumComputersPeripheralsAndSoftware
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumConcreteWorkServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumConstructionMaterials
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumConsultingPublicRelations
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCorrespondenceSchools
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCosmeticStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCounselingServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCountryClubs
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCourierServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCourtCosts
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCreditReportingAgencies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumCruiseLines
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDairyProductsStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDanceHallStudiosSchools
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDatingEscortServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDentistsOrthodontists
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDepartmentStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDetectiveAgencies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDigitalGoodsApplications
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingCatalogMerchant
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingInboundTelemarketing
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingInsuranceServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingOther
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingOutboundTelemarketing
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingSubscription
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingTravel
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDiscountStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDoctors
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDoorToDoorSales
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDrinkingPlaces
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDrugStoresAndPharmacies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDryCleaners
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDurableGoods
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumDutyFreeStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumEatingPlacesRestaurants
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumEducationalServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumElectricRazorStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumElectricalPartsAndEquipment
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumElectricalServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumElectronicsRepairShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumElectronicsStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumElementarySecondarySchools
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumEmploymentTempAgencies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumEquipmentRental
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumExterminatingServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFamilyClothingStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFastFoodRestaurants
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFinancialInstitutions
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFinesGovernmentAdministrativeEntities
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFloorCoveringStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFlorists
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFreezerAndLockerMeatProvisioners
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFuelDealersNonAutomotive
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFuneralServicesCrematories
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFurnitureRepairRefinishing
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumFurriersAndFurShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumGeneralServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumGiftCardNoveltyAndSouvenirShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumGlassPaintAndWallpaperStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumGlasswareCrystalStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumGolfCoursesPublic
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumGovernmentServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumGroceryStoresSupermarkets
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumHardwareEquipmentAndSupplies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumHardwareStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumHealthAndBeautySpas
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumHearingAidsSalesAndSupplies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumHeatingPlumbingAC
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumHobbyToyAndGameShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumHomeSupplyWarehouseStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumHospitals
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumHotelsMotelsAndResorts
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumHouseholdApplianceStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumIndustrialSupplies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumInformationRetrievalServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumInsuranceDefault
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumInsuranceUnderwritingPremiums
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumIntraCompanyPurchases
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumLandscapingServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumLaundries
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumLaundryCleaningServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumLegalServicesAttorneys
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumLuggageAndLeatherGoodsStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumLumberBuildingMaterialsStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumManualCashDisburse
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMarinasServiceAndSupplies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMasonryStoneworkAndPlaster
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMassageParlors
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMedicalAndDentalLabs
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMedicalServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMembershipOrganizations
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMensAndBoysClothingAndAccessoriesStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMensWomensClothingStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMetalServiceCenters
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneous
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousApparelAndAccessoryShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousAutoDealers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousBusinessServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousFoodStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralMerchandise
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousPublishingAndPrinting
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousRecreationServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousRepairShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousSpecialtyRetail
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMobileHomeDealers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMotionPictureTheaters
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorFreightCarriersAndTrucking
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorHomesDealers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorVehicleSuppliesAndNewParts
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsAndDealers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsDealers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumNewsDealersAndNewsstands
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumNonFiMoneyOrders
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumNonFiStoredValueCardPurchaseLoad
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumNondurableGoods
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumNurseriesLawnAndGardenSupplyStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumNursingPersonalCare
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumOfficeAndCommercialFurniture
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumOpticiansEyeglasses
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumOptometristsOphthalmologist
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumOrthopedicGoodsProstheticDevices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumOsteopaths
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPackageStoresBeerWineAndLiquor
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPaintsVarnishesAndSupplies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumParkingLotsGarages
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPassengerRailways
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPawnShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPetShopsPetFoodAndSupplies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPetroleumAndPetroleumProducts
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPhotoDeveloping
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPhotographicStudios
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPictureVideoProduction
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPlumbingHeatingEquipmentAndSupplies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPoliticalOrganizations
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPostalServicesGovernmentOnly
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumProfessionalServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumPublicWarehousingAndStorage
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumQuickCopyReproAndBlueprint
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumRailroads
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumRealEstateAgentsAndManagersRentals
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumRecordStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumRecreationalVehicleRentals
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumReligiousGoodsStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumReligiousOrganizations
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumRoofingSidingSheetMetal
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSecretarialSupportServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSecurityBrokersDealers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumServiceStations
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumShoeRepairHatCleaning
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumShoeStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSmallApplianceRepair
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSnowmobileDealers
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSpecialTradeServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSpecialtyCleaning
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSportingGoodsStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSportingRecreationCamps
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSportsAndRidingApparelStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSportsClubsFields
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumStampAndCoinStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumSwimmingPoolsSales
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTUiTravelGermany
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTailorsAlterations
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTaxPaymentsGovernmentAgencies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTaxPreparationServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTaxicabsLimousines
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTelecommunicationServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTelegraphServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTentAndAwningShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTestingLaboratories
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTheatricalTicketAgencies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTimeshares
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTireRetreadingAndRepair
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTollsBridgeFees
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTouristAttractionsAndExhibits
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTowingServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTrailerParksCampgrounds
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTransportationServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTravelAgenciesTourOperators
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTruckStopIteration
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTruckUtilityTrailerRentals
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTypesettingPlateMakingAndRelatedServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumTypewriterStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumUniformsCommercialClothing
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumUsedMerchandiseAndSecondhandStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumUtilities
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumVarietyStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumVeterinaryServices
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumVideoAmusementGameSupplies
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumVideoGameArcades
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumVideoTapeRentalStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumVocationalTradeSchools
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumWatchJewelryRepair
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumWeldingRepair
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumWholesaleClubs
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumWigAndToupeeStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumWiresMoneyOrders
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumWomensAccessoryAndSpecialtyShops
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumWomensReadyToWearStores
  | IssuingCardAuthorizationControlsBlockedCategoriesEnumWreckingAndSalvageYards
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardAuthorizationControlsBlockedCategoriesEnum where
  toJSON e = String $ case e of
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAcRefrigerationRepair -> "ac_refrigeration_repair"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAccountingBookkeepingServices -> "accounting_bookkeeping_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAdvertisingServices -> "advertising_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAgriculturalCooperative -> "agricultural_cooperative"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAirlinesAirCarriers -> "airlines_air_carriers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAirportsFlyingFields -> "airports_flying_fields"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAmbulanceServices -> "ambulance_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAmusementParksCarnivals -> "amusement_parks_carnivals"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAntiqueReproductions -> "antique_reproductions"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAntiqueShops -> "antique_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAquariums -> "aquariums"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumArchitecturalSurveyingServices -> "architectural_surveying_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumArtDealersAndGalleries -> "art_dealers_and_galleries"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumArtistsSupplyAndCraftShops -> "artists_supply_and_craft_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoAndHomeSupplyStores -> "auto_and_home_supply_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoBodyRepairShops -> "auto_body_repair_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoPaintShops -> "auto_paint_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoServiceShops -> "auto_service_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomatedCashDisburse -> "automated_cash_disburse"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomatedFuelDispensers -> "automated_fuel_dispensers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomobileAssociations -> "automobile_associations"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomotivePartsAndAccessoriesStores -> "automotive_parts_and_accessories_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomotiveTireStores -> "automotive_tire_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBailAndBondPayments -> "bail_and_bond_payments"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBakeries -> "bakeries"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBandsOrchestras -> "bands_orchestras"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBarberAndBeautyShops -> "barber_and_beauty_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBettingCasinoGambling -> "betting_casino_gambling"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBicycleShops -> "bicycle_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBilliardPoolEstablishments -> "billiard_pool_establishments"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBoatDealers -> "boat_dealers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBoatRentalsAndLeases -> "boat_rentals_and_leases"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBookStores -> "book_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBooksPeriodicalsAndNewspapers -> "books_periodicals_and_newspapers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBowlingAlleys -> "bowling_alleys"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBusLines -> "bus_lines"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBusinessSecretarialSchools -> "business_secretarial_schools"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumBuyingShoppingServices -> "buying_shopping_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio -> "cable_satellite_and_other_pay_television_and_radio"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCameraAndPhotographicSupplyStores -> "camera_and_photographic_supply_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCandyNutAndConfectioneryStores -> "candy_nut_and_confectionery_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersNewUsed -> "car_and_truck_dealers_new_used"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersUsedOnly -> "car_and_truck_dealers_used_only"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCarRentalAgencies -> "car_rental_agencies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCarWashes -> "car_washes"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCarpentryServices -> "carpentry_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCarpetUpholsteryCleaning -> "carpet_upholstery_cleaning"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCaterers -> "caterers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising -> "charitable_and_social_service_organizations_fundraising"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumChemicalsAndAlliedProducts -> "chemicals_and_allied_products"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumChidrensAndInfantsWearStores -> "chidrens_and_infants_wear_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumChildCareServices -> "child_care_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumChiropodistsPodiatrists -> "chiropodists_podiatrists"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumChiropractors -> "chiropractors"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCigarStoresAndStands -> "cigar_stores_and_stands"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCivicSocialFraternalAssociations -> "civic_social_fraternal_associations"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCleaningAndMaintenance -> "cleaning_and_maintenance"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumClothingRental -> "clothing_rental"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCollegesUniversities -> "colleges_universities"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCommercialEquipment -> "commercial_equipment"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCommercialFootwear -> "commercial_footwear"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCommercialPhotographyArtAndGraphics -> "commercial_photography_art_and_graphics"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCommuterTransportAndFerries -> "commuter_transport_and_ferries"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerNetworkServices -> "computer_network_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerProgramming -> "computer_programming"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerRepair -> "computer_repair"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerSoftwareStores -> "computer_software_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumComputersPeripheralsAndSoftware -> "computers_peripherals_and_software"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumConcreteWorkServices -> "concrete_work_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumConstructionMaterials -> "construction_materials"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumConsultingPublicRelations -> "consulting_public_relations"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCorrespondenceSchools -> "correspondence_schools"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCosmeticStores -> "cosmetic_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCounselingServices -> "counseling_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCountryClubs -> "country_clubs"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCourierServices -> "courier_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCourtCosts -> "court_costs"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCreditReportingAgencies -> "credit_reporting_agencies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumCruiseLines -> "cruise_lines"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDairyProductsStores -> "dairy_products_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDanceHallStudiosSchools -> "dance_hall_studios_schools"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDatingEscortServices -> "dating_escort_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDentistsOrthodontists -> "dentists_orthodontists"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDepartmentStores -> "department_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDetectiveAgencies -> "detective_agencies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDigitalGoodsApplications -> "digital_goods_applications"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingCatalogMerchant -> "direct_marketing_catalog_merchant"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant -> "direct_marketing_combination_catalog_and_retail_merchant"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingInboundTelemarketing -> "direct_marketing_inbound_telemarketing"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingInsuranceServices -> "direct_marketing_insurance_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingOther -> "direct_marketing_other"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingOutboundTelemarketing -> "direct_marketing_outbound_telemarketing"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingSubscription -> "direct_marketing_subscription"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingTravel -> "direct_marketing_travel"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDiscountStores -> "discount_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDoctors -> "doctors"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDoorToDoorSales -> "door_to_door_sales"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores -> "drapery_window_covering_and_upholstery_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDrinkingPlaces -> "drinking_places"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDrugStoresAndPharmacies -> "drug_stores_and_pharmacies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries -> "drugs_drug_proprietaries_and_druggist_sundries"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDryCleaners -> "dry_cleaners"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDurableGoods -> "durable_goods"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumDutyFreeStores -> "duty_free_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumEatingPlacesRestaurants -> "eating_places_restaurants"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumEducationalServices -> "educational_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumElectricRazorStores -> "electric_razor_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumElectricalPartsAndEquipment -> "electrical_parts_and_equipment"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumElectricalServices -> "electrical_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumElectronicsRepairShops -> "electronics_repair_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumElectronicsStores -> "electronics_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumElementarySecondarySchools -> "elementary_secondary_schools"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumEmploymentTempAgencies -> "employment_temp_agencies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumEquipmentRental -> "equipment_rental"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumExterminatingServices -> "exterminating_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFamilyClothingStores -> "family_clothing_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFastFoodRestaurants -> "fast_food_restaurants"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFinancialInstitutions -> "financial_institutions"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFinesGovernmentAdministrativeEntities -> "fines_government_administrative_entities"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores -> "fireplace_fireplace_screens_and_accessories_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFloorCoveringStores -> "floor_covering_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFlorists -> "florists"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers -> "florists_supplies_nursery_stock_and_flowers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFreezerAndLockerMeatProvisioners -> "freezer_and_locker_meat_provisioners"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFuelDealersNonAutomotive -> "fuel_dealers_non_automotive"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFuneralServicesCrematories -> "funeral_services_crematories"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances -> "furniture_home_furnishings_and_equipment_stores_except_appliances"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFurnitureRepairRefinishing -> "furniture_repair_refinishing"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumFurriersAndFurShops -> "furriers_and_fur_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumGeneralServices -> "general_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumGiftCardNoveltyAndSouvenirShops -> "gift_card_novelty_and_souvenir_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumGlassPaintAndWallpaperStores -> "glass_paint_and_wallpaper_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumGlasswareCrystalStores -> "glassware_crystal_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumGolfCoursesPublic -> "golf_courses_public"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumGovernmentServices -> "government_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumGroceryStoresSupermarkets -> "grocery_stores_supermarkets"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumHardwareEquipmentAndSupplies -> "hardware_equipment_and_supplies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumHardwareStores -> "hardware_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumHealthAndBeautySpas -> "health_and_beauty_spas"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumHearingAidsSalesAndSupplies -> "hearing_aids_sales_and_supplies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumHeatingPlumbingAC -> "heating_plumbing_a_c"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumHobbyToyAndGameShops -> "hobby_toy_and_game_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumHomeSupplyWarehouseStores -> "home_supply_warehouse_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumHospitals -> "hospitals"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumHotelsMotelsAndResorts -> "hotels_motels_and_resorts"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumHouseholdApplianceStores -> "household_appliance_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumIndustrialSupplies -> "industrial_supplies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumInformationRetrievalServices -> "information_retrieval_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumInsuranceDefault -> "insurance_default"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumInsuranceUnderwritingPremiums -> "insurance_underwriting_premiums"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumIntraCompanyPurchases -> "intra_company_purchases"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores -> "jewelry_stores_watches_clocks_and_silverware_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumLandscapingServices -> "landscaping_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumLaundries -> "laundries"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumLaundryCleaningServices -> "laundry_cleaning_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumLegalServicesAttorneys -> "legal_services_attorneys"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumLuggageAndLeatherGoodsStores -> "luggage_and_leather_goods_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumLumberBuildingMaterialsStores -> "lumber_building_materials_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumManualCashDisburse -> "manual_cash_disburse"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMarinasServiceAndSupplies -> "marinas_service_and_supplies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMasonryStoneworkAndPlaster -> "masonry_stonework_and_plaster"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMassageParlors -> "massage_parlors"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMedicalAndDentalLabs -> "medical_and_dental_labs"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies -> "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMedicalServices -> "medical_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMembershipOrganizations -> "membership_organizations"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMensAndBoysClothingAndAccessoriesStores -> "mens_and_boys_clothing_and_accessories_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMensWomensClothingStores -> "mens_womens_clothing_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMetalServiceCenters -> "metal_service_centers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneous -> "miscellaneous"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousApparelAndAccessoryShops -> "miscellaneous_apparel_and_accessory_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousAutoDealers -> "miscellaneous_auto_dealers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousBusinessServices -> "miscellaneous_business_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousFoodStores -> "miscellaneous_food_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralMerchandise -> "miscellaneous_general_merchandise"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralServices -> "miscellaneous_general_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores -> "miscellaneous_home_furnishing_specialty_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousPublishingAndPrinting -> "miscellaneous_publishing_and_printing"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousRecreationServices -> "miscellaneous_recreation_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousRepairShops -> "miscellaneous_repair_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousSpecialtyRetail -> "miscellaneous_specialty_retail"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMobileHomeDealers -> "mobile_home_dealers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMotionPictureTheaters -> "motion_picture_theaters"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorFreightCarriersAndTrucking -> "motor_freight_carriers_and_trucking"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorHomesDealers -> "motor_homes_dealers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorVehicleSuppliesAndNewParts -> "motor_vehicle_supplies_and_new_parts"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsAndDealers -> "motorcycle_shops_and_dealers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsDealers -> "motorcycle_shops_dealers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic -> "music_stores_musical_instruments_pianos_and_sheet_music"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumNewsDealersAndNewsstands -> "news_dealers_and_newsstands"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumNonFiMoneyOrders -> "non_fi_money_orders"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumNonFiStoredValueCardPurchaseLoad -> "non_fi_stored_value_card_purchase_load"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumNondurableGoods -> "nondurable_goods"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumNurseriesLawnAndGardenSupplyStores -> "nurseries_lawn_and_garden_supply_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumNursingPersonalCare -> "nursing_personal_care"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumOfficeAndCommercialFurniture -> "office_and_commercial_furniture"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumOpticiansEyeglasses -> "opticians_eyeglasses"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumOptometristsOphthalmologist -> "optometrists_ophthalmologist"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumOrthopedicGoodsProstheticDevices -> "orthopedic_goods_prosthetic_devices"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumOsteopaths -> "osteopaths"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPackageStoresBeerWineAndLiquor -> "package_stores_beer_wine_and_liquor"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPaintsVarnishesAndSupplies -> "paints_varnishes_and_supplies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumParkingLotsGarages -> "parking_lots_garages"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPassengerRailways -> "passenger_railways"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPawnShops -> "pawn_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPetShopsPetFoodAndSupplies -> "pet_shops_pet_food_and_supplies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPetroleumAndPetroleumProducts -> "petroleum_and_petroleum_products"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPhotoDeveloping -> "photo_developing"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies -> "photographic_photocopy_microfilm_equipment_and_supplies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPhotographicStudios -> "photographic_studios"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPictureVideoProduction -> "picture_video_production"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods -> "piece_goods_notions_and_other_dry_goods"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPlumbingHeatingEquipmentAndSupplies -> "plumbing_heating_equipment_and_supplies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPoliticalOrganizations -> "political_organizations"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPostalServicesGovernmentOnly -> "postal_services_government_only"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry -> "precious_stones_and_metals_watches_and_jewelry"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumProfessionalServices -> "professional_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumPublicWarehousingAndStorage -> "public_warehousing_and_storage"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumQuickCopyReproAndBlueprint -> "quick_copy_repro_and_blueprint"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumRailroads -> "railroads"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumRealEstateAgentsAndManagersRentals -> "real_estate_agents_and_managers_rentals"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumRecordStores -> "record_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumRecreationalVehicleRentals -> "recreational_vehicle_rentals"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumReligiousGoodsStores -> "religious_goods_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumReligiousOrganizations -> "religious_organizations"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumRoofingSidingSheetMetal -> "roofing_siding_sheet_metal"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSecretarialSupportServices -> "secretarial_support_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSecurityBrokersDealers -> "security_brokers_dealers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumServiceStations -> "service_stations"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores -> "sewing_needlework_fabric_and_piece_goods_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumShoeRepairHatCleaning -> "shoe_repair_hat_cleaning"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumShoeStores -> "shoe_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSmallApplianceRepair -> "small_appliance_repair"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSnowmobileDealers -> "snowmobile_dealers"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSpecialTradeServices -> "special_trade_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSpecialtyCleaning -> "specialty_cleaning"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSportingGoodsStores -> "sporting_goods_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSportingRecreationCamps -> "sporting_recreation_camps"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSportsAndRidingApparelStores -> "sports_and_riding_apparel_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSportsClubsFields -> "sports_clubs_fields"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumStampAndCoinStores -> "stamp_and_coin_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper -> "stationary_office_supplies_printing_and_writing_paper"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores -> "stationery_stores_office_and_school_supply_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumSwimmingPoolsSales -> "swimming_pools_sales"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTUiTravelGermany -> "t_ui_travel_germany"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTailorsAlterations -> "tailors_alterations"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTaxPaymentsGovernmentAgencies -> "tax_payments_government_agencies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTaxPreparationServices -> "tax_preparation_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTaxicabsLimousines -> "taxicabs_limousines"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales -> "telecommunication_equipment_and_telephone_sales"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTelecommunicationServices -> "telecommunication_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTelegraphServices -> "telegraph_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTentAndAwningShops -> "tent_and_awning_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTestingLaboratories -> "testing_laboratories"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTheatricalTicketAgencies -> "theatrical_ticket_agencies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTimeshares -> "timeshares"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTireRetreadingAndRepair -> "tire_retreading_and_repair"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTollsBridgeFees -> "tolls_bridge_fees"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTouristAttractionsAndExhibits -> "tourist_attractions_and_exhibits"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTowingServices -> "towing_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTrailerParksCampgrounds -> "trailer_parks_campgrounds"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTransportationServices -> "transportation_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTravelAgenciesTourOperators -> "travel_agencies_tour_operators"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTruckStopIteration -> "truck_stop_iteration"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTruckUtilityTrailerRentals -> "truck_utility_trailer_rentals"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTypesettingPlateMakingAndRelatedServices -> "typesetting_plate_making_and_related_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumTypewriterStores -> "typewriter_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments -> "u_s_federal_government_agencies_or_departments"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumUniformsCommercialClothing -> "uniforms_commercial_clothing"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumUsedMerchandiseAndSecondhandStores -> "used_merchandise_and_secondhand_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumUtilities -> "utilities"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumVarietyStores -> "variety_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumVeterinaryServices -> "veterinary_services"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumVideoAmusementGameSupplies -> "video_amusement_game_supplies"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumVideoGameArcades -> "video_game_arcades"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumVideoTapeRentalStores -> "video_tape_rental_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumVocationalTradeSchools -> "vocational_trade_schools"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumWatchJewelryRepair -> "watch_jewelry_repair"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumWeldingRepair -> "welding_repair"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumWholesaleClubs -> "wholesale_clubs"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumWigAndToupeeStores -> "wig_and_toupee_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumWiresMoneyOrders -> "wires_money_orders"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumWomensAccessoryAndSpecialtyShops -> "womens_accessory_and_specialty_shops"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumWomensReadyToWearStores -> "womens_ready_to_wear_stores"
    IssuingCardAuthorizationControlsBlockedCategoriesEnumWreckingAndSalvageYards -> "wrecking_and_salvage_yards"

instance FromJSON IssuingCardAuthorizationControlsBlockedCategoriesEnum where
  parseJSON = withText "IssuingCardAuthorizationControlsBlockedCategoriesEnum" $ \case
    "ac_refrigeration_repair" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAcRefrigerationRepair
    "accounting_bookkeeping_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAccountingBookkeepingServices
    "advertising_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAdvertisingServices
    "agricultural_cooperative" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAgriculturalCooperative
    "airlines_air_carriers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAirlinesAirCarriers
    "airports_flying_fields" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAirportsFlyingFields
    "ambulance_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAmbulanceServices
    "amusement_parks_carnivals" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAmusementParksCarnivals
    "antique_reproductions" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAntiqueReproductions
    "antique_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAntiqueShops
    "aquariums" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAquariums
    "architectural_surveying_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumArchitecturalSurveyingServices
    "art_dealers_and_galleries" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumArtDealersAndGalleries
    "artists_supply_and_craft_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumArtistsSupplyAndCraftShops
    "auto_and_home_supply_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoAndHomeSupplyStores
    "auto_body_repair_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoBodyRepairShops
    "auto_paint_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoPaintShops
    "auto_service_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAutoServiceShops
    "automated_cash_disburse" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomatedCashDisburse
    "automated_fuel_dispensers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomatedFuelDispensers
    "automobile_associations" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomobileAssociations
    "automotive_parts_and_accessories_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomotivePartsAndAccessoriesStores
    "automotive_tire_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumAutomotiveTireStores
    "bail_and_bond_payments" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBailAndBondPayments
    "bakeries" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBakeries
    "bands_orchestras" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBandsOrchestras
    "barber_and_beauty_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBarberAndBeautyShops
    "betting_casino_gambling" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBettingCasinoGambling
    "bicycle_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBicycleShops
    "billiard_pool_establishments" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBilliardPoolEstablishments
    "boat_dealers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBoatDealers
    "boat_rentals_and_leases" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBoatRentalsAndLeases
    "book_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBookStores
    "books_periodicals_and_newspapers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBooksPeriodicalsAndNewspapers
    "bowling_alleys" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBowlingAlleys
    "bus_lines" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBusLines
    "business_secretarial_schools" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBusinessSecretarialSchools
    "buying_shopping_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumBuyingShoppingServices
    "cable_satellite_and_other_pay_television_and_radio" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
    "camera_and_photographic_supply_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCameraAndPhotographicSupplyStores
    "candy_nut_and_confectionery_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCandyNutAndConfectioneryStores
    "car_and_truck_dealers_new_used" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersNewUsed
    "car_and_truck_dealers_used_only" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersUsedOnly
    "car_rental_agencies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCarRentalAgencies
    "car_washes" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCarWashes
    "carpentry_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCarpentryServices
    "carpet_upholstery_cleaning" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCarpetUpholsteryCleaning
    "caterers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCaterers
    "charitable_and_social_service_organizations_fundraising" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
    "chemicals_and_allied_products" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumChemicalsAndAlliedProducts
    "chidrens_and_infants_wear_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumChidrensAndInfantsWearStores
    "child_care_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumChildCareServices
    "chiropodists_podiatrists" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumChiropodistsPodiatrists
    "chiropractors" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumChiropractors
    "cigar_stores_and_stands" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCigarStoresAndStands
    "civic_social_fraternal_associations" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCivicSocialFraternalAssociations
    "cleaning_and_maintenance" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCleaningAndMaintenance
    "clothing_rental" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumClothingRental
    "colleges_universities" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCollegesUniversities
    "commercial_equipment" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCommercialEquipment
    "commercial_footwear" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCommercialFootwear
    "commercial_photography_art_and_graphics" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCommercialPhotographyArtAndGraphics
    "commuter_transport_and_ferries" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCommuterTransportAndFerries
    "computer_network_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerNetworkServices
    "computer_programming" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerProgramming
    "computer_repair" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerRepair
    "computer_software_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumComputerSoftwareStores
    "computers_peripherals_and_software" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumComputersPeripheralsAndSoftware
    "concrete_work_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumConcreteWorkServices
    "construction_materials" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumConstructionMaterials
    "consulting_public_relations" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumConsultingPublicRelations
    "correspondence_schools" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCorrespondenceSchools
    "cosmetic_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCosmeticStores
    "counseling_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCounselingServices
    "country_clubs" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCountryClubs
    "courier_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCourierServices
    "court_costs" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCourtCosts
    "credit_reporting_agencies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCreditReportingAgencies
    "cruise_lines" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumCruiseLines
    "dairy_products_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDairyProductsStores
    "dance_hall_studios_schools" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDanceHallStudiosSchools
    "dating_escort_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDatingEscortServices
    "dentists_orthodontists" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDentistsOrthodontists
    "department_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDepartmentStores
    "detective_agencies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDetectiveAgencies
    "digital_goods_applications" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDigitalGoodsApplications
    "direct_marketing_catalog_merchant" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingCatalogMerchant
    "direct_marketing_combination_catalog_and_retail_merchant" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
    "direct_marketing_inbound_telemarketing" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingInboundTelemarketing
    "direct_marketing_insurance_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingInsuranceServices
    "direct_marketing_other" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingOther
    "direct_marketing_outbound_telemarketing" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingOutboundTelemarketing
    "direct_marketing_subscription" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingSubscription
    "direct_marketing_travel" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDirectMarketingTravel
    "discount_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDiscountStores
    "doctors" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDoctors
    "door_to_door_sales" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDoorToDoorSales
    "drapery_window_covering_and_upholstery_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
    "drinking_places" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDrinkingPlaces
    "drug_stores_and_pharmacies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDrugStoresAndPharmacies
    "drugs_drug_proprietaries_and_druggist_sundries" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
    "dry_cleaners" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDryCleaners
    "durable_goods" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDurableGoods
    "duty_free_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumDutyFreeStores
    "eating_places_restaurants" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumEatingPlacesRestaurants
    "educational_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumEducationalServices
    "electric_razor_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumElectricRazorStores
    "electrical_parts_and_equipment" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumElectricalPartsAndEquipment
    "electrical_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumElectricalServices
    "electronics_repair_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumElectronicsRepairShops
    "electronics_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumElectronicsStores
    "elementary_secondary_schools" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumElementarySecondarySchools
    "employment_temp_agencies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumEmploymentTempAgencies
    "equipment_rental" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumEquipmentRental
    "exterminating_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumExterminatingServices
    "family_clothing_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFamilyClothingStores
    "fast_food_restaurants" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFastFoodRestaurants
    "financial_institutions" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFinancialInstitutions
    "fines_government_administrative_entities" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFinesGovernmentAdministrativeEntities
    "fireplace_fireplace_screens_and_accessories_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
    "floor_covering_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFloorCoveringStores
    "florists" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFlorists
    "florists_supplies_nursery_stock_and_flowers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
    "freezer_and_locker_meat_provisioners" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFreezerAndLockerMeatProvisioners
    "fuel_dealers_non_automotive" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFuelDealersNonAutomotive
    "funeral_services_crematories" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFuneralServicesCrematories
    "furniture_home_furnishings_and_equipment_stores_except_appliances" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
    "furniture_repair_refinishing" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFurnitureRepairRefinishing
    "furriers_and_fur_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumFurriersAndFurShops
    "general_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumGeneralServices
    "gift_card_novelty_and_souvenir_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumGiftCardNoveltyAndSouvenirShops
    "glass_paint_and_wallpaper_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumGlassPaintAndWallpaperStores
    "glassware_crystal_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumGlasswareCrystalStores
    "golf_courses_public" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumGolfCoursesPublic
    "government_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumGovernmentServices
    "grocery_stores_supermarkets" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumGroceryStoresSupermarkets
    "hardware_equipment_and_supplies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumHardwareEquipmentAndSupplies
    "hardware_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumHardwareStores
    "health_and_beauty_spas" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumHealthAndBeautySpas
    "hearing_aids_sales_and_supplies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumHearingAidsSalesAndSupplies
    "heating_plumbing_a_c" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumHeatingPlumbingAC
    "hobby_toy_and_game_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumHobbyToyAndGameShops
    "home_supply_warehouse_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumHomeSupplyWarehouseStores
    "hospitals" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumHospitals
    "hotels_motels_and_resorts" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumHotelsMotelsAndResorts
    "household_appliance_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumHouseholdApplianceStores
    "industrial_supplies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumIndustrialSupplies
    "information_retrieval_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumInformationRetrievalServices
    "insurance_default" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumInsuranceDefault
    "insurance_underwriting_premiums" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumInsuranceUnderwritingPremiums
    "intra_company_purchases" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumIntraCompanyPurchases
    "jewelry_stores_watches_clocks_and_silverware_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
    "landscaping_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumLandscapingServices
    "laundries" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumLaundries
    "laundry_cleaning_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumLaundryCleaningServices
    "legal_services_attorneys" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumLegalServicesAttorneys
    "luggage_and_leather_goods_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumLuggageAndLeatherGoodsStores
    "lumber_building_materials_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumLumberBuildingMaterialsStores
    "manual_cash_disburse" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumManualCashDisburse
    "marinas_service_and_supplies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMarinasServiceAndSupplies
    "masonry_stonework_and_plaster" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMasonryStoneworkAndPlaster
    "massage_parlors" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMassageParlors
    "medical_and_dental_labs" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMedicalAndDentalLabs
    "medical_dental_ophthalmic_and_hospital_equipment_and_supplies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
    "medical_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMedicalServices
    "membership_organizations" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMembershipOrganizations
    "mens_and_boys_clothing_and_accessories_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMensAndBoysClothingAndAccessoriesStores
    "mens_womens_clothing_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMensWomensClothingStores
    "metal_service_centers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMetalServiceCenters
    "miscellaneous" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneous
    "miscellaneous_apparel_and_accessory_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousApparelAndAccessoryShops
    "miscellaneous_auto_dealers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousAutoDealers
    "miscellaneous_business_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousBusinessServices
    "miscellaneous_food_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousFoodStores
    "miscellaneous_general_merchandise" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralMerchandise
    "miscellaneous_general_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralServices
    "miscellaneous_home_furnishing_specialty_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
    "miscellaneous_publishing_and_printing" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousPublishingAndPrinting
    "miscellaneous_recreation_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousRecreationServices
    "miscellaneous_repair_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousRepairShops
    "miscellaneous_specialty_retail" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMiscellaneousSpecialtyRetail
    "mobile_home_dealers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMobileHomeDealers
    "motion_picture_theaters" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMotionPictureTheaters
    "motor_freight_carriers_and_trucking" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorFreightCarriersAndTrucking
    "motor_homes_dealers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorHomesDealers
    "motor_vehicle_supplies_and_new_parts" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorVehicleSuppliesAndNewParts
    "motorcycle_shops_and_dealers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsAndDealers
    "motorcycle_shops_dealers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsDealers
    "music_stores_musical_instruments_pianos_and_sheet_music" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
    "news_dealers_and_newsstands" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumNewsDealersAndNewsstands
    "non_fi_money_orders" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumNonFiMoneyOrders
    "non_fi_stored_value_card_purchase_load" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumNonFiStoredValueCardPurchaseLoad
    "nondurable_goods" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumNondurableGoods
    "nurseries_lawn_and_garden_supply_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumNurseriesLawnAndGardenSupplyStores
    "nursing_personal_care" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumNursingPersonalCare
    "office_and_commercial_furniture" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumOfficeAndCommercialFurniture
    "opticians_eyeglasses" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumOpticiansEyeglasses
    "optometrists_ophthalmologist" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumOptometristsOphthalmologist
    "orthopedic_goods_prosthetic_devices" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumOrthopedicGoodsProstheticDevices
    "osteopaths" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumOsteopaths
    "package_stores_beer_wine_and_liquor" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPackageStoresBeerWineAndLiquor
    "paints_varnishes_and_supplies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPaintsVarnishesAndSupplies
    "parking_lots_garages" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumParkingLotsGarages
    "passenger_railways" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPassengerRailways
    "pawn_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPawnShops
    "pet_shops_pet_food_and_supplies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPetShopsPetFoodAndSupplies
    "petroleum_and_petroleum_products" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPetroleumAndPetroleumProducts
    "photo_developing" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPhotoDeveloping
    "photographic_photocopy_microfilm_equipment_and_supplies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
    "photographic_studios" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPhotographicStudios
    "picture_video_production" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPictureVideoProduction
    "piece_goods_notions_and_other_dry_goods" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
    "plumbing_heating_equipment_and_supplies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPlumbingHeatingEquipmentAndSupplies
    "political_organizations" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPoliticalOrganizations
    "postal_services_government_only" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPostalServicesGovernmentOnly
    "precious_stones_and_metals_watches_and_jewelry" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
    "professional_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumProfessionalServices
    "public_warehousing_and_storage" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumPublicWarehousingAndStorage
    "quick_copy_repro_and_blueprint" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumQuickCopyReproAndBlueprint
    "railroads" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumRailroads
    "real_estate_agents_and_managers_rentals" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumRealEstateAgentsAndManagersRentals
    "record_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumRecordStores
    "recreational_vehicle_rentals" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumRecreationalVehicleRentals
    "religious_goods_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumReligiousGoodsStores
    "religious_organizations" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumReligiousOrganizations
    "roofing_siding_sheet_metal" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumRoofingSidingSheetMetal
    "secretarial_support_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSecretarialSupportServices
    "security_brokers_dealers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSecurityBrokersDealers
    "service_stations" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumServiceStations
    "sewing_needlework_fabric_and_piece_goods_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
    "shoe_repair_hat_cleaning" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumShoeRepairHatCleaning
    "shoe_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumShoeStores
    "small_appliance_repair" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSmallApplianceRepair
    "snowmobile_dealers" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSnowmobileDealers
    "special_trade_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSpecialTradeServices
    "specialty_cleaning" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSpecialtyCleaning
    "sporting_goods_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSportingGoodsStores
    "sporting_recreation_camps" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSportingRecreationCamps
    "sports_and_riding_apparel_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSportsAndRidingApparelStores
    "sports_clubs_fields" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSportsClubsFields
    "stamp_and_coin_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumStampAndCoinStores
    "stationary_office_supplies_printing_and_writing_paper" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
    "stationery_stores_office_and_school_supply_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
    "swimming_pools_sales" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumSwimmingPoolsSales
    "t_ui_travel_germany" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTUiTravelGermany
    "tailors_alterations" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTailorsAlterations
    "tax_payments_government_agencies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTaxPaymentsGovernmentAgencies
    "tax_preparation_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTaxPreparationServices
    "taxicabs_limousines" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTaxicabsLimousines
    "telecommunication_equipment_and_telephone_sales" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
    "telecommunication_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTelecommunicationServices
    "telegraph_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTelegraphServices
    "tent_and_awning_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTentAndAwningShops
    "testing_laboratories" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTestingLaboratories
    "theatrical_ticket_agencies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTheatricalTicketAgencies
    "timeshares" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTimeshares
    "tire_retreading_and_repair" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTireRetreadingAndRepair
    "tolls_bridge_fees" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTollsBridgeFees
    "tourist_attractions_and_exhibits" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTouristAttractionsAndExhibits
    "towing_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTowingServices
    "trailer_parks_campgrounds" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTrailerParksCampgrounds
    "transportation_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTransportationServices
    "travel_agencies_tour_operators" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTravelAgenciesTourOperators
    "truck_stop_iteration" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTruckStopIteration
    "truck_utility_trailer_rentals" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTruckUtilityTrailerRentals
    "typesetting_plate_making_and_related_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTypesettingPlateMakingAndRelatedServices
    "typewriter_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumTypewriterStores
    "u_s_federal_government_agencies_or_departments" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
    "uniforms_commercial_clothing" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumUniformsCommercialClothing
    "used_merchandise_and_secondhand_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumUsedMerchandiseAndSecondhandStores
    "utilities" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumUtilities
    "variety_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumVarietyStores
    "veterinary_services" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumVeterinaryServices
    "video_amusement_game_supplies" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumVideoAmusementGameSupplies
    "video_game_arcades" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumVideoGameArcades
    "video_tape_rental_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumVideoTapeRentalStores
    "vocational_trade_schools" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumVocationalTradeSchools
    "watch_jewelry_repair" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumWatchJewelryRepair
    "welding_repair" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumWeldingRepair
    "wholesale_clubs" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumWholesaleClubs
    "wig_and_toupee_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumWigAndToupeeStores
    "wires_money_orders" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumWiresMoneyOrders
    "womens_accessory_and_specialty_shops" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumWomensAccessoryAndSpecialtyShops
    "womens_ready_to_wear_stores" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumWomensReadyToWearStores
    "wrecking_and_salvage_yards" -> pure IssuingCardAuthorizationControlsBlockedCategoriesEnumWreckingAndSalvageYards
    str -> fail (show str <> " is not a known valid option for IssuingCardAuthorizationControlsBlockedCategoriesEnum")

data IssuingCardDetailsObjectEnum
  = IssuingCardDetailsObjectEnumIssuingCardDetails
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardDetailsObjectEnum where
  toJSON e = String $ case e of
    IssuingCardDetailsObjectEnumIssuingCardDetails -> "issuing.card_details"

instance FromJSON IssuingCardDetailsObjectEnum where
  parseJSON = withText "IssuingCardDetailsObjectEnum" $ \case
    "issuing.card_details" -> pure IssuingCardDetailsObjectEnumIssuingCardDetails
    str -> fail (show str <> " is not a known valid option for IssuingCardDetailsObjectEnum")

data IssuingCardObjectEnum
  = IssuingCardObjectEnumIssuingCard
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardObjectEnum where
  toJSON e = String $ case e of
    IssuingCardObjectEnumIssuingCard -> "issuing.card"

instance FromJSON IssuingCardObjectEnum where
  parseJSON = withText "IssuingCardObjectEnum" $ \case
    "issuing.card" -> pure IssuingCardObjectEnumIssuingCard
    str -> fail (show str <> " is not a known valid option for IssuingCardObjectEnum")

data IssuingCardPinObjectEnum
  = IssuingCardPinObjectEnumIssuingCardPin
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardPinObjectEnum where
  toJSON e = String $ case e of
    IssuingCardPinObjectEnumIssuingCardPin -> "issuing.card_pin"

instance FromJSON IssuingCardPinObjectEnum where
  parseJSON = withText "IssuingCardPinObjectEnum" $ \case
    "issuing.card_pin" -> pure IssuingCardPinObjectEnumIssuingCardPin
    str -> fail (show str <> " is not a known valid option for IssuingCardPinObjectEnum")

data IssuingCardPinStatusEnum
  = IssuingCardPinStatusEnumBlocked
  | IssuingCardPinStatusEnumActive
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardPinStatusEnum where
  toJSON e = String $ case e of
    IssuingCardPinStatusEnumBlocked -> "blocked"
    IssuingCardPinStatusEnumActive -> "active"

instance FromJSON IssuingCardPinStatusEnum where
  parseJSON = withText "IssuingCardPinStatusEnum" $ \case
    "blocked" -> pure IssuingCardPinStatusEnumBlocked
    "active" -> pure IssuingCardPinStatusEnumActive
    str -> fail (show str <> " is not a known valid option for IssuingCardPinStatusEnum")

data IssuingCardReplacementReasonEnum
  = IssuingCardReplacementReasonEnumDamage
  | IssuingCardReplacementReasonEnumExpiration
  | IssuingCardReplacementReasonEnumLoss
  | IssuingCardReplacementReasonEnumTheft
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardReplacementReasonEnum where
  toJSON e = String $ case e of
    IssuingCardReplacementReasonEnumDamage -> "damage"
    IssuingCardReplacementReasonEnumExpiration -> "expiration"
    IssuingCardReplacementReasonEnumLoss -> "loss"
    IssuingCardReplacementReasonEnumTheft -> "theft"

instance FromJSON IssuingCardReplacementReasonEnum where
  parseJSON = withText "IssuingCardReplacementReasonEnum" $ \case
    "damage" -> pure IssuingCardReplacementReasonEnumDamage
    "expiration" -> pure IssuingCardReplacementReasonEnumExpiration
    "loss" -> pure IssuingCardReplacementReasonEnumLoss
    "theft" -> pure IssuingCardReplacementReasonEnumTheft
    str -> fail (show str <> " is not a known valid option for IssuingCardReplacementReasonEnum")

data IssuingCardShippingStatusEnum
  = IssuingCardShippingStatusEnumPending
  | IssuingCardShippingStatusEnumShipped
  | IssuingCardShippingStatusEnumDelivered
  | IssuingCardShippingStatusEnumReturned
  | IssuingCardShippingStatusEnumFailure
  | IssuingCardShippingStatusEnumCanceled
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardShippingStatusEnum where
  toJSON e = String $ case e of
    IssuingCardShippingStatusEnumPending -> "pending"
    IssuingCardShippingStatusEnumShipped -> "shipped"
    IssuingCardShippingStatusEnumDelivered -> "delivered"
    IssuingCardShippingStatusEnumReturned -> "returned"
    IssuingCardShippingStatusEnumFailure -> "failure"
    IssuingCardShippingStatusEnumCanceled -> "canceled"

instance FromJSON IssuingCardShippingStatusEnum where
  parseJSON = withText "IssuingCardShippingStatusEnum" $ \case
    "pending" -> pure IssuingCardShippingStatusEnumPending
    "shipped" -> pure IssuingCardShippingStatusEnumShipped
    "delivered" -> pure IssuingCardShippingStatusEnumDelivered
    "returned" -> pure IssuingCardShippingStatusEnumReturned
    "failure" -> pure IssuingCardShippingStatusEnumFailure
    "canceled" -> pure IssuingCardShippingStatusEnumCanceled
    str -> fail (show str <> " is not a known valid option for IssuingCardShippingStatusEnum")

data IssuingCardShippingTypeEnum
  = IssuingCardShippingTypeEnumBulk
  | IssuingCardShippingTypeEnumIndividual
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardShippingTypeEnum where
  toJSON e = String $ case e of
    IssuingCardShippingTypeEnumBulk -> "bulk"
    IssuingCardShippingTypeEnumIndividual -> "individual"

instance FromJSON IssuingCardShippingTypeEnum where
  parseJSON = withText "IssuingCardShippingTypeEnum" $ \case
    "bulk" -> pure IssuingCardShippingTypeEnumBulk
    "individual" -> pure IssuingCardShippingTypeEnumIndividual
    str -> fail (show str <> " is not a known valid option for IssuingCardShippingTypeEnum")

data IssuingCardSpendingLimitCategoriesEnum
  = IssuingCardSpendingLimitCategoriesEnumAcRefrigerationRepair
  | IssuingCardSpendingLimitCategoriesEnumAccountingBookkeepingServices
  | IssuingCardSpendingLimitCategoriesEnumAdvertisingServices
  | IssuingCardSpendingLimitCategoriesEnumAgriculturalCooperative
  | IssuingCardSpendingLimitCategoriesEnumAirlinesAirCarriers
  | IssuingCardSpendingLimitCategoriesEnumAirportsFlyingFields
  | IssuingCardSpendingLimitCategoriesEnumAmbulanceServices
  | IssuingCardSpendingLimitCategoriesEnumAmusementParksCarnivals
  | IssuingCardSpendingLimitCategoriesEnumAntiqueReproductions
  | IssuingCardSpendingLimitCategoriesEnumAntiqueShops
  | IssuingCardSpendingLimitCategoriesEnumAquariums
  | IssuingCardSpendingLimitCategoriesEnumArchitecturalSurveyingServices
  | IssuingCardSpendingLimitCategoriesEnumArtDealersAndGalleries
  | IssuingCardSpendingLimitCategoriesEnumArtistsSupplyAndCraftShops
  | IssuingCardSpendingLimitCategoriesEnumAutoAndHomeSupplyStores
  | IssuingCardSpendingLimitCategoriesEnumAutoBodyRepairShops
  | IssuingCardSpendingLimitCategoriesEnumAutoPaintShops
  | IssuingCardSpendingLimitCategoriesEnumAutoServiceShops
  | IssuingCardSpendingLimitCategoriesEnumAutomatedCashDisburse
  | IssuingCardSpendingLimitCategoriesEnumAutomatedFuelDispensers
  | IssuingCardSpendingLimitCategoriesEnumAutomobileAssociations
  | IssuingCardSpendingLimitCategoriesEnumAutomotivePartsAndAccessoriesStores
  | IssuingCardSpendingLimitCategoriesEnumAutomotiveTireStores
  | IssuingCardSpendingLimitCategoriesEnumBailAndBondPayments
  | IssuingCardSpendingLimitCategoriesEnumBakeries
  | IssuingCardSpendingLimitCategoriesEnumBandsOrchestras
  | IssuingCardSpendingLimitCategoriesEnumBarberAndBeautyShops
  | IssuingCardSpendingLimitCategoriesEnumBettingCasinoGambling
  | IssuingCardSpendingLimitCategoriesEnumBicycleShops
  | IssuingCardSpendingLimitCategoriesEnumBilliardPoolEstablishments
  | IssuingCardSpendingLimitCategoriesEnumBoatDealers
  | IssuingCardSpendingLimitCategoriesEnumBoatRentalsAndLeases
  | IssuingCardSpendingLimitCategoriesEnumBookStores
  | IssuingCardSpendingLimitCategoriesEnumBooksPeriodicalsAndNewspapers
  | IssuingCardSpendingLimitCategoriesEnumBowlingAlleys
  | IssuingCardSpendingLimitCategoriesEnumBusLines
  | IssuingCardSpendingLimitCategoriesEnumBusinessSecretarialSchools
  | IssuingCardSpendingLimitCategoriesEnumBuyingShoppingServices
  | IssuingCardSpendingLimitCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
  | IssuingCardSpendingLimitCategoriesEnumCameraAndPhotographicSupplyStores
  | IssuingCardSpendingLimitCategoriesEnumCandyNutAndConfectioneryStores
  | IssuingCardSpendingLimitCategoriesEnumCarAndTruckDealersNewUsed
  | IssuingCardSpendingLimitCategoriesEnumCarAndTruckDealersUsedOnly
  | IssuingCardSpendingLimitCategoriesEnumCarRentalAgencies
  | IssuingCardSpendingLimitCategoriesEnumCarWashes
  | IssuingCardSpendingLimitCategoriesEnumCarpentryServices
  | IssuingCardSpendingLimitCategoriesEnumCarpetUpholsteryCleaning
  | IssuingCardSpendingLimitCategoriesEnumCaterers
  | IssuingCardSpendingLimitCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
  | IssuingCardSpendingLimitCategoriesEnumChemicalsAndAlliedProducts
  | IssuingCardSpendingLimitCategoriesEnumChidrensAndInfantsWearStores
  | IssuingCardSpendingLimitCategoriesEnumChildCareServices
  | IssuingCardSpendingLimitCategoriesEnumChiropodistsPodiatrists
  | IssuingCardSpendingLimitCategoriesEnumChiropractors
  | IssuingCardSpendingLimitCategoriesEnumCigarStoresAndStands
  | IssuingCardSpendingLimitCategoriesEnumCivicSocialFraternalAssociations
  | IssuingCardSpendingLimitCategoriesEnumCleaningAndMaintenance
  | IssuingCardSpendingLimitCategoriesEnumClothingRental
  | IssuingCardSpendingLimitCategoriesEnumCollegesUniversities
  | IssuingCardSpendingLimitCategoriesEnumCommercialEquipment
  | IssuingCardSpendingLimitCategoriesEnumCommercialFootwear
  | IssuingCardSpendingLimitCategoriesEnumCommercialPhotographyArtAndGraphics
  | IssuingCardSpendingLimitCategoriesEnumCommuterTransportAndFerries
  | IssuingCardSpendingLimitCategoriesEnumComputerNetworkServices
  | IssuingCardSpendingLimitCategoriesEnumComputerProgramming
  | IssuingCardSpendingLimitCategoriesEnumComputerRepair
  | IssuingCardSpendingLimitCategoriesEnumComputerSoftwareStores
  | IssuingCardSpendingLimitCategoriesEnumComputersPeripheralsAndSoftware
  | IssuingCardSpendingLimitCategoriesEnumConcreteWorkServices
  | IssuingCardSpendingLimitCategoriesEnumConstructionMaterials
  | IssuingCardSpendingLimitCategoriesEnumConsultingPublicRelations
  | IssuingCardSpendingLimitCategoriesEnumCorrespondenceSchools
  | IssuingCardSpendingLimitCategoriesEnumCosmeticStores
  | IssuingCardSpendingLimitCategoriesEnumCounselingServices
  | IssuingCardSpendingLimitCategoriesEnumCountryClubs
  | IssuingCardSpendingLimitCategoriesEnumCourierServices
  | IssuingCardSpendingLimitCategoriesEnumCourtCosts
  | IssuingCardSpendingLimitCategoriesEnumCreditReportingAgencies
  | IssuingCardSpendingLimitCategoriesEnumCruiseLines
  | IssuingCardSpendingLimitCategoriesEnumDairyProductsStores
  | IssuingCardSpendingLimitCategoriesEnumDanceHallStudiosSchools
  | IssuingCardSpendingLimitCategoriesEnumDatingEscortServices
  | IssuingCardSpendingLimitCategoriesEnumDentistsOrthodontists
  | IssuingCardSpendingLimitCategoriesEnumDepartmentStores
  | IssuingCardSpendingLimitCategoriesEnumDetectiveAgencies
  | IssuingCardSpendingLimitCategoriesEnumDigitalGoodsApplications
  | IssuingCardSpendingLimitCategoriesEnumDirectMarketingCatalogMerchant
  | IssuingCardSpendingLimitCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
  | IssuingCardSpendingLimitCategoriesEnumDirectMarketingInboundTelemarketing
  | IssuingCardSpendingLimitCategoriesEnumDirectMarketingInsuranceServices
  | IssuingCardSpendingLimitCategoriesEnumDirectMarketingOther
  | IssuingCardSpendingLimitCategoriesEnumDirectMarketingOutboundTelemarketing
  | IssuingCardSpendingLimitCategoriesEnumDirectMarketingSubscription
  | IssuingCardSpendingLimitCategoriesEnumDirectMarketingTravel
  | IssuingCardSpendingLimitCategoriesEnumDiscountStores
  | IssuingCardSpendingLimitCategoriesEnumDoctors
  | IssuingCardSpendingLimitCategoriesEnumDoorToDoorSales
  | IssuingCardSpendingLimitCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
  | IssuingCardSpendingLimitCategoriesEnumDrinkingPlaces
  | IssuingCardSpendingLimitCategoriesEnumDrugStoresAndPharmacies
  | IssuingCardSpendingLimitCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
  | IssuingCardSpendingLimitCategoriesEnumDryCleaners
  | IssuingCardSpendingLimitCategoriesEnumDurableGoods
  | IssuingCardSpendingLimitCategoriesEnumDutyFreeStores
  | IssuingCardSpendingLimitCategoriesEnumEatingPlacesRestaurants
  | IssuingCardSpendingLimitCategoriesEnumEducationalServices
  | IssuingCardSpendingLimitCategoriesEnumElectricRazorStores
  | IssuingCardSpendingLimitCategoriesEnumElectricalPartsAndEquipment
  | IssuingCardSpendingLimitCategoriesEnumElectricalServices
  | IssuingCardSpendingLimitCategoriesEnumElectronicsRepairShops
  | IssuingCardSpendingLimitCategoriesEnumElectronicsStores
  | IssuingCardSpendingLimitCategoriesEnumElementarySecondarySchools
  | IssuingCardSpendingLimitCategoriesEnumEmploymentTempAgencies
  | IssuingCardSpendingLimitCategoriesEnumEquipmentRental
  | IssuingCardSpendingLimitCategoriesEnumExterminatingServices
  | IssuingCardSpendingLimitCategoriesEnumFamilyClothingStores
  | IssuingCardSpendingLimitCategoriesEnumFastFoodRestaurants
  | IssuingCardSpendingLimitCategoriesEnumFinancialInstitutions
  | IssuingCardSpendingLimitCategoriesEnumFinesGovernmentAdministrativeEntities
  | IssuingCardSpendingLimitCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
  | IssuingCardSpendingLimitCategoriesEnumFloorCoveringStores
  | IssuingCardSpendingLimitCategoriesEnumFlorists
  | IssuingCardSpendingLimitCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
  | IssuingCardSpendingLimitCategoriesEnumFreezerAndLockerMeatProvisioners
  | IssuingCardSpendingLimitCategoriesEnumFuelDealersNonAutomotive
  | IssuingCardSpendingLimitCategoriesEnumFuneralServicesCrematories
  | IssuingCardSpendingLimitCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
  | IssuingCardSpendingLimitCategoriesEnumFurnitureRepairRefinishing
  | IssuingCardSpendingLimitCategoriesEnumFurriersAndFurShops
  | IssuingCardSpendingLimitCategoriesEnumGeneralServices
  | IssuingCardSpendingLimitCategoriesEnumGiftCardNoveltyAndSouvenirShops
  | IssuingCardSpendingLimitCategoriesEnumGlassPaintAndWallpaperStores
  | IssuingCardSpendingLimitCategoriesEnumGlasswareCrystalStores
  | IssuingCardSpendingLimitCategoriesEnumGolfCoursesPublic
  | IssuingCardSpendingLimitCategoriesEnumGovernmentServices
  | IssuingCardSpendingLimitCategoriesEnumGroceryStoresSupermarkets
  | IssuingCardSpendingLimitCategoriesEnumHardwareEquipmentAndSupplies
  | IssuingCardSpendingLimitCategoriesEnumHardwareStores
  | IssuingCardSpendingLimitCategoriesEnumHealthAndBeautySpas
  | IssuingCardSpendingLimitCategoriesEnumHearingAidsSalesAndSupplies
  | IssuingCardSpendingLimitCategoriesEnumHeatingPlumbingAC
  | IssuingCardSpendingLimitCategoriesEnumHobbyToyAndGameShops
  | IssuingCardSpendingLimitCategoriesEnumHomeSupplyWarehouseStores
  | IssuingCardSpendingLimitCategoriesEnumHospitals
  | IssuingCardSpendingLimitCategoriesEnumHotelsMotelsAndResorts
  | IssuingCardSpendingLimitCategoriesEnumHouseholdApplianceStores
  | IssuingCardSpendingLimitCategoriesEnumIndustrialSupplies
  | IssuingCardSpendingLimitCategoriesEnumInformationRetrievalServices
  | IssuingCardSpendingLimitCategoriesEnumInsuranceDefault
  | IssuingCardSpendingLimitCategoriesEnumInsuranceUnderwritingPremiums
  | IssuingCardSpendingLimitCategoriesEnumIntraCompanyPurchases
  | IssuingCardSpendingLimitCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
  | IssuingCardSpendingLimitCategoriesEnumLandscapingServices
  | IssuingCardSpendingLimitCategoriesEnumLaundries
  | IssuingCardSpendingLimitCategoriesEnumLaundryCleaningServices
  | IssuingCardSpendingLimitCategoriesEnumLegalServicesAttorneys
  | IssuingCardSpendingLimitCategoriesEnumLuggageAndLeatherGoodsStores
  | IssuingCardSpendingLimitCategoriesEnumLumberBuildingMaterialsStores
  | IssuingCardSpendingLimitCategoriesEnumManualCashDisburse
  | IssuingCardSpendingLimitCategoriesEnumMarinasServiceAndSupplies
  | IssuingCardSpendingLimitCategoriesEnumMasonryStoneworkAndPlaster
  | IssuingCardSpendingLimitCategoriesEnumMassageParlors
  | IssuingCardSpendingLimitCategoriesEnumMedicalAndDentalLabs
  | IssuingCardSpendingLimitCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
  | IssuingCardSpendingLimitCategoriesEnumMedicalServices
  | IssuingCardSpendingLimitCategoriesEnumMembershipOrganizations
  | IssuingCardSpendingLimitCategoriesEnumMensAndBoysClothingAndAccessoriesStores
  | IssuingCardSpendingLimitCategoriesEnumMensWomensClothingStores
  | IssuingCardSpendingLimitCategoriesEnumMetalServiceCenters
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneous
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousApparelAndAccessoryShops
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousAutoDealers
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousBusinessServices
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousFoodStores
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousGeneralMerchandise
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousGeneralServices
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousPublishingAndPrinting
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousRecreationServices
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousRepairShops
  | IssuingCardSpendingLimitCategoriesEnumMiscellaneousSpecialtyRetail
  | IssuingCardSpendingLimitCategoriesEnumMobileHomeDealers
  | IssuingCardSpendingLimitCategoriesEnumMotionPictureTheaters
  | IssuingCardSpendingLimitCategoriesEnumMotorFreightCarriersAndTrucking
  | IssuingCardSpendingLimitCategoriesEnumMotorHomesDealers
  | IssuingCardSpendingLimitCategoriesEnumMotorVehicleSuppliesAndNewParts
  | IssuingCardSpendingLimitCategoriesEnumMotorcycleShopsAndDealers
  | IssuingCardSpendingLimitCategoriesEnumMotorcycleShopsDealers
  | IssuingCardSpendingLimitCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
  | IssuingCardSpendingLimitCategoriesEnumNewsDealersAndNewsstands
  | IssuingCardSpendingLimitCategoriesEnumNonFiMoneyOrders
  | IssuingCardSpendingLimitCategoriesEnumNonFiStoredValueCardPurchaseLoad
  | IssuingCardSpendingLimitCategoriesEnumNondurableGoods
  | IssuingCardSpendingLimitCategoriesEnumNurseriesLawnAndGardenSupplyStores
  | IssuingCardSpendingLimitCategoriesEnumNursingPersonalCare
  | IssuingCardSpendingLimitCategoriesEnumOfficeAndCommercialFurniture
  | IssuingCardSpendingLimitCategoriesEnumOpticiansEyeglasses
  | IssuingCardSpendingLimitCategoriesEnumOptometristsOphthalmologist
  | IssuingCardSpendingLimitCategoriesEnumOrthopedicGoodsProstheticDevices
  | IssuingCardSpendingLimitCategoriesEnumOsteopaths
  | IssuingCardSpendingLimitCategoriesEnumPackageStoresBeerWineAndLiquor
  | IssuingCardSpendingLimitCategoriesEnumPaintsVarnishesAndSupplies
  | IssuingCardSpendingLimitCategoriesEnumParkingLotsGarages
  | IssuingCardSpendingLimitCategoriesEnumPassengerRailways
  | IssuingCardSpendingLimitCategoriesEnumPawnShops
  | IssuingCardSpendingLimitCategoriesEnumPetShopsPetFoodAndSupplies
  | IssuingCardSpendingLimitCategoriesEnumPetroleumAndPetroleumProducts
  | IssuingCardSpendingLimitCategoriesEnumPhotoDeveloping
  | IssuingCardSpendingLimitCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
  | IssuingCardSpendingLimitCategoriesEnumPhotographicStudios
  | IssuingCardSpendingLimitCategoriesEnumPictureVideoProduction
  | IssuingCardSpendingLimitCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
  | IssuingCardSpendingLimitCategoriesEnumPlumbingHeatingEquipmentAndSupplies
  | IssuingCardSpendingLimitCategoriesEnumPoliticalOrganizations
  | IssuingCardSpendingLimitCategoriesEnumPostalServicesGovernmentOnly
  | IssuingCardSpendingLimitCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
  | IssuingCardSpendingLimitCategoriesEnumProfessionalServices
  | IssuingCardSpendingLimitCategoriesEnumPublicWarehousingAndStorage
  | IssuingCardSpendingLimitCategoriesEnumQuickCopyReproAndBlueprint
  | IssuingCardSpendingLimitCategoriesEnumRailroads
  | IssuingCardSpendingLimitCategoriesEnumRealEstateAgentsAndManagersRentals
  | IssuingCardSpendingLimitCategoriesEnumRecordStores
  | IssuingCardSpendingLimitCategoriesEnumRecreationalVehicleRentals
  | IssuingCardSpendingLimitCategoriesEnumReligiousGoodsStores
  | IssuingCardSpendingLimitCategoriesEnumReligiousOrganizations
  | IssuingCardSpendingLimitCategoriesEnumRoofingSidingSheetMetal
  | IssuingCardSpendingLimitCategoriesEnumSecretarialSupportServices
  | IssuingCardSpendingLimitCategoriesEnumSecurityBrokersDealers
  | IssuingCardSpendingLimitCategoriesEnumServiceStations
  | IssuingCardSpendingLimitCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
  | IssuingCardSpendingLimitCategoriesEnumShoeRepairHatCleaning
  | IssuingCardSpendingLimitCategoriesEnumShoeStores
  | IssuingCardSpendingLimitCategoriesEnumSmallApplianceRepair
  | IssuingCardSpendingLimitCategoriesEnumSnowmobileDealers
  | IssuingCardSpendingLimitCategoriesEnumSpecialTradeServices
  | IssuingCardSpendingLimitCategoriesEnumSpecialtyCleaning
  | IssuingCardSpendingLimitCategoriesEnumSportingGoodsStores
  | IssuingCardSpendingLimitCategoriesEnumSportingRecreationCamps
  | IssuingCardSpendingLimitCategoriesEnumSportsAndRidingApparelStores
  | IssuingCardSpendingLimitCategoriesEnumSportsClubsFields
  | IssuingCardSpendingLimitCategoriesEnumStampAndCoinStores
  | IssuingCardSpendingLimitCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
  | IssuingCardSpendingLimitCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
  | IssuingCardSpendingLimitCategoriesEnumSwimmingPoolsSales
  | IssuingCardSpendingLimitCategoriesEnumTUiTravelGermany
  | IssuingCardSpendingLimitCategoriesEnumTailorsAlterations
  | IssuingCardSpendingLimitCategoriesEnumTaxPaymentsGovernmentAgencies
  | IssuingCardSpendingLimitCategoriesEnumTaxPreparationServices
  | IssuingCardSpendingLimitCategoriesEnumTaxicabsLimousines
  | IssuingCardSpendingLimitCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
  | IssuingCardSpendingLimitCategoriesEnumTelecommunicationServices
  | IssuingCardSpendingLimitCategoriesEnumTelegraphServices
  | IssuingCardSpendingLimitCategoriesEnumTentAndAwningShops
  | IssuingCardSpendingLimitCategoriesEnumTestingLaboratories
  | IssuingCardSpendingLimitCategoriesEnumTheatricalTicketAgencies
  | IssuingCardSpendingLimitCategoriesEnumTimeshares
  | IssuingCardSpendingLimitCategoriesEnumTireRetreadingAndRepair
  | IssuingCardSpendingLimitCategoriesEnumTollsBridgeFees
  | IssuingCardSpendingLimitCategoriesEnumTouristAttractionsAndExhibits
  | IssuingCardSpendingLimitCategoriesEnumTowingServices
  | IssuingCardSpendingLimitCategoriesEnumTrailerParksCampgrounds
  | IssuingCardSpendingLimitCategoriesEnumTransportationServices
  | IssuingCardSpendingLimitCategoriesEnumTravelAgenciesTourOperators
  | IssuingCardSpendingLimitCategoriesEnumTruckStopIteration
  | IssuingCardSpendingLimitCategoriesEnumTruckUtilityTrailerRentals
  | IssuingCardSpendingLimitCategoriesEnumTypesettingPlateMakingAndRelatedServices
  | IssuingCardSpendingLimitCategoriesEnumTypewriterStores
  | IssuingCardSpendingLimitCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
  | IssuingCardSpendingLimitCategoriesEnumUniformsCommercialClothing
  | IssuingCardSpendingLimitCategoriesEnumUsedMerchandiseAndSecondhandStores
  | IssuingCardSpendingLimitCategoriesEnumUtilities
  | IssuingCardSpendingLimitCategoriesEnumVarietyStores
  | IssuingCardSpendingLimitCategoriesEnumVeterinaryServices
  | IssuingCardSpendingLimitCategoriesEnumVideoAmusementGameSupplies
  | IssuingCardSpendingLimitCategoriesEnumVideoGameArcades
  | IssuingCardSpendingLimitCategoriesEnumVideoTapeRentalStores
  | IssuingCardSpendingLimitCategoriesEnumVocationalTradeSchools
  | IssuingCardSpendingLimitCategoriesEnumWatchJewelryRepair
  | IssuingCardSpendingLimitCategoriesEnumWeldingRepair
  | IssuingCardSpendingLimitCategoriesEnumWholesaleClubs
  | IssuingCardSpendingLimitCategoriesEnumWigAndToupeeStores
  | IssuingCardSpendingLimitCategoriesEnumWiresMoneyOrders
  | IssuingCardSpendingLimitCategoriesEnumWomensAccessoryAndSpecialtyShops
  | IssuingCardSpendingLimitCategoriesEnumWomensReadyToWearStores
  | IssuingCardSpendingLimitCategoriesEnumWreckingAndSalvageYards
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardSpendingLimitCategoriesEnum where
  toJSON e = String $ case e of
    IssuingCardSpendingLimitCategoriesEnumAcRefrigerationRepair -> "ac_refrigeration_repair"
    IssuingCardSpendingLimitCategoriesEnumAccountingBookkeepingServices -> "accounting_bookkeeping_services"
    IssuingCardSpendingLimitCategoriesEnumAdvertisingServices -> "advertising_services"
    IssuingCardSpendingLimitCategoriesEnumAgriculturalCooperative -> "agricultural_cooperative"
    IssuingCardSpendingLimitCategoriesEnumAirlinesAirCarriers -> "airlines_air_carriers"
    IssuingCardSpendingLimitCategoriesEnumAirportsFlyingFields -> "airports_flying_fields"
    IssuingCardSpendingLimitCategoriesEnumAmbulanceServices -> "ambulance_services"
    IssuingCardSpendingLimitCategoriesEnumAmusementParksCarnivals -> "amusement_parks_carnivals"
    IssuingCardSpendingLimitCategoriesEnumAntiqueReproductions -> "antique_reproductions"
    IssuingCardSpendingLimitCategoriesEnumAntiqueShops -> "antique_shops"
    IssuingCardSpendingLimitCategoriesEnumAquariums -> "aquariums"
    IssuingCardSpendingLimitCategoriesEnumArchitecturalSurveyingServices -> "architectural_surveying_services"
    IssuingCardSpendingLimitCategoriesEnumArtDealersAndGalleries -> "art_dealers_and_galleries"
    IssuingCardSpendingLimitCategoriesEnumArtistsSupplyAndCraftShops -> "artists_supply_and_craft_shops"
    IssuingCardSpendingLimitCategoriesEnumAutoAndHomeSupplyStores -> "auto_and_home_supply_stores"
    IssuingCardSpendingLimitCategoriesEnumAutoBodyRepairShops -> "auto_body_repair_shops"
    IssuingCardSpendingLimitCategoriesEnumAutoPaintShops -> "auto_paint_shops"
    IssuingCardSpendingLimitCategoriesEnumAutoServiceShops -> "auto_service_shops"
    IssuingCardSpendingLimitCategoriesEnumAutomatedCashDisburse -> "automated_cash_disburse"
    IssuingCardSpendingLimitCategoriesEnumAutomatedFuelDispensers -> "automated_fuel_dispensers"
    IssuingCardSpendingLimitCategoriesEnumAutomobileAssociations -> "automobile_associations"
    IssuingCardSpendingLimitCategoriesEnumAutomotivePartsAndAccessoriesStores -> "automotive_parts_and_accessories_stores"
    IssuingCardSpendingLimitCategoriesEnumAutomotiveTireStores -> "automotive_tire_stores"
    IssuingCardSpendingLimitCategoriesEnumBailAndBondPayments -> "bail_and_bond_payments"
    IssuingCardSpendingLimitCategoriesEnumBakeries -> "bakeries"
    IssuingCardSpendingLimitCategoriesEnumBandsOrchestras -> "bands_orchestras"
    IssuingCardSpendingLimitCategoriesEnumBarberAndBeautyShops -> "barber_and_beauty_shops"
    IssuingCardSpendingLimitCategoriesEnumBettingCasinoGambling -> "betting_casino_gambling"
    IssuingCardSpendingLimitCategoriesEnumBicycleShops -> "bicycle_shops"
    IssuingCardSpendingLimitCategoriesEnumBilliardPoolEstablishments -> "billiard_pool_establishments"
    IssuingCardSpendingLimitCategoriesEnumBoatDealers -> "boat_dealers"
    IssuingCardSpendingLimitCategoriesEnumBoatRentalsAndLeases -> "boat_rentals_and_leases"
    IssuingCardSpendingLimitCategoriesEnumBookStores -> "book_stores"
    IssuingCardSpendingLimitCategoriesEnumBooksPeriodicalsAndNewspapers -> "books_periodicals_and_newspapers"
    IssuingCardSpendingLimitCategoriesEnumBowlingAlleys -> "bowling_alleys"
    IssuingCardSpendingLimitCategoriesEnumBusLines -> "bus_lines"
    IssuingCardSpendingLimitCategoriesEnumBusinessSecretarialSchools -> "business_secretarial_schools"
    IssuingCardSpendingLimitCategoriesEnumBuyingShoppingServices -> "buying_shopping_services"
    IssuingCardSpendingLimitCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio -> "cable_satellite_and_other_pay_television_and_radio"
    IssuingCardSpendingLimitCategoriesEnumCameraAndPhotographicSupplyStores -> "camera_and_photographic_supply_stores"
    IssuingCardSpendingLimitCategoriesEnumCandyNutAndConfectioneryStores -> "candy_nut_and_confectionery_stores"
    IssuingCardSpendingLimitCategoriesEnumCarAndTruckDealersNewUsed -> "car_and_truck_dealers_new_used"
    IssuingCardSpendingLimitCategoriesEnumCarAndTruckDealersUsedOnly -> "car_and_truck_dealers_used_only"
    IssuingCardSpendingLimitCategoriesEnumCarRentalAgencies -> "car_rental_agencies"
    IssuingCardSpendingLimitCategoriesEnumCarWashes -> "car_washes"
    IssuingCardSpendingLimitCategoriesEnumCarpentryServices -> "carpentry_services"
    IssuingCardSpendingLimitCategoriesEnumCarpetUpholsteryCleaning -> "carpet_upholstery_cleaning"
    IssuingCardSpendingLimitCategoriesEnumCaterers -> "caterers"
    IssuingCardSpendingLimitCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising -> "charitable_and_social_service_organizations_fundraising"
    IssuingCardSpendingLimitCategoriesEnumChemicalsAndAlliedProducts -> "chemicals_and_allied_products"
    IssuingCardSpendingLimitCategoriesEnumChidrensAndInfantsWearStores -> "chidrens_and_infants_wear_stores"
    IssuingCardSpendingLimitCategoriesEnumChildCareServices -> "child_care_services"
    IssuingCardSpendingLimitCategoriesEnumChiropodistsPodiatrists -> "chiropodists_podiatrists"
    IssuingCardSpendingLimitCategoriesEnumChiropractors -> "chiropractors"
    IssuingCardSpendingLimitCategoriesEnumCigarStoresAndStands -> "cigar_stores_and_stands"
    IssuingCardSpendingLimitCategoriesEnumCivicSocialFraternalAssociations -> "civic_social_fraternal_associations"
    IssuingCardSpendingLimitCategoriesEnumCleaningAndMaintenance -> "cleaning_and_maintenance"
    IssuingCardSpendingLimitCategoriesEnumClothingRental -> "clothing_rental"
    IssuingCardSpendingLimitCategoriesEnumCollegesUniversities -> "colleges_universities"
    IssuingCardSpendingLimitCategoriesEnumCommercialEquipment -> "commercial_equipment"
    IssuingCardSpendingLimitCategoriesEnumCommercialFootwear -> "commercial_footwear"
    IssuingCardSpendingLimitCategoriesEnumCommercialPhotographyArtAndGraphics -> "commercial_photography_art_and_graphics"
    IssuingCardSpendingLimitCategoriesEnumCommuterTransportAndFerries -> "commuter_transport_and_ferries"
    IssuingCardSpendingLimitCategoriesEnumComputerNetworkServices -> "computer_network_services"
    IssuingCardSpendingLimitCategoriesEnumComputerProgramming -> "computer_programming"
    IssuingCardSpendingLimitCategoriesEnumComputerRepair -> "computer_repair"
    IssuingCardSpendingLimitCategoriesEnumComputerSoftwareStores -> "computer_software_stores"
    IssuingCardSpendingLimitCategoriesEnumComputersPeripheralsAndSoftware -> "computers_peripherals_and_software"
    IssuingCardSpendingLimitCategoriesEnumConcreteWorkServices -> "concrete_work_services"
    IssuingCardSpendingLimitCategoriesEnumConstructionMaterials -> "construction_materials"
    IssuingCardSpendingLimitCategoriesEnumConsultingPublicRelations -> "consulting_public_relations"
    IssuingCardSpendingLimitCategoriesEnumCorrespondenceSchools -> "correspondence_schools"
    IssuingCardSpendingLimitCategoriesEnumCosmeticStores -> "cosmetic_stores"
    IssuingCardSpendingLimitCategoriesEnumCounselingServices -> "counseling_services"
    IssuingCardSpendingLimitCategoriesEnumCountryClubs -> "country_clubs"
    IssuingCardSpendingLimitCategoriesEnumCourierServices -> "courier_services"
    IssuingCardSpendingLimitCategoriesEnumCourtCosts -> "court_costs"
    IssuingCardSpendingLimitCategoriesEnumCreditReportingAgencies -> "credit_reporting_agencies"
    IssuingCardSpendingLimitCategoriesEnumCruiseLines -> "cruise_lines"
    IssuingCardSpendingLimitCategoriesEnumDairyProductsStores -> "dairy_products_stores"
    IssuingCardSpendingLimitCategoriesEnumDanceHallStudiosSchools -> "dance_hall_studios_schools"
    IssuingCardSpendingLimitCategoriesEnumDatingEscortServices -> "dating_escort_services"
    IssuingCardSpendingLimitCategoriesEnumDentistsOrthodontists -> "dentists_orthodontists"
    IssuingCardSpendingLimitCategoriesEnumDepartmentStores -> "department_stores"
    IssuingCardSpendingLimitCategoriesEnumDetectiveAgencies -> "detective_agencies"
    IssuingCardSpendingLimitCategoriesEnumDigitalGoodsApplications -> "digital_goods_applications"
    IssuingCardSpendingLimitCategoriesEnumDirectMarketingCatalogMerchant -> "direct_marketing_catalog_merchant"
    IssuingCardSpendingLimitCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant -> "direct_marketing_combination_catalog_and_retail_merchant"
    IssuingCardSpendingLimitCategoriesEnumDirectMarketingInboundTelemarketing -> "direct_marketing_inbound_telemarketing"
    IssuingCardSpendingLimitCategoriesEnumDirectMarketingInsuranceServices -> "direct_marketing_insurance_services"
    IssuingCardSpendingLimitCategoriesEnumDirectMarketingOther -> "direct_marketing_other"
    IssuingCardSpendingLimitCategoriesEnumDirectMarketingOutboundTelemarketing -> "direct_marketing_outbound_telemarketing"
    IssuingCardSpendingLimitCategoriesEnumDirectMarketingSubscription -> "direct_marketing_subscription"
    IssuingCardSpendingLimitCategoriesEnumDirectMarketingTravel -> "direct_marketing_travel"
    IssuingCardSpendingLimitCategoriesEnumDiscountStores -> "discount_stores"
    IssuingCardSpendingLimitCategoriesEnumDoctors -> "doctors"
    IssuingCardSpendingLimitCategoriesEnumDoorToDoorSales -> "door_to_door_sales"
    IssuingCardSpendingLimitCategoriesEnumDraperyWindowCoveringAndUpholsteryStores -> "drapery_window_covering_and_upholstery_stores"
    IssuingCardSpendingLimitCategoriesEnumDrinkingPlaces -> "drinking_places"
    IssuingCardSpendingLimitCategoriesEnumDrugStoresAndPharmacies -> "drug_stores_and_pharmacies"
    IssuingCardSpendingLimitCategoriesEnumDrugsDrugProprietariesAndDruggistSundries -> "drugs_drug_proprietaries_and_druggist_sundries"
    IssuingCardSpendingLimitCategoriesEnumDryCleaners -> "dry_cleaners"
    IssuingCardSpendingLimitCategoriesEnumDurableGoods -> "durable_goods"
    IssuingCardSpendingLimitCategoriesEnumDutyFreeStores -> "duty_free_stores"
    IssuingCardSpendingLimitCategoriesEnumEatingPlacesRestaurants -> "eating_places_restaurants"
    IssuingCardSpendingLimitCategoriesEnumEducationalServices -> "educational_services"
    IssuingCardSpendingLimitCategoriesEnumElectricRazorStores -> "electric_razor_stores"
    IssuingCardSpendingLimitCategoriesEnumElectricalPartsAndEquipment -> "electrical_parts_and_equipment"
    IssuingCardSpendingLimitCategoriesEnumElectricalServices -> "electrical_services"
    IssuingCardSpendingLimitCategoriesEnumElectronicsRepairShops -> "electronics_repair_shops"
    IssuingCardSpendingLimitCategoriesEnumElectronicsStores -> "electronics_stores"
    IssuingCardSpendingLimitCategoriesEnumElementarySecondarySchools -> "elementary_secondary_schools"
    IssuingCardSpendingLimitCategoriesEnumEmploymentTempAgencies -> "employment_temp_agencies"
    IssuingCardSpendingLimitCategoriesEnumEquipmentRental -> "equipment_rental"
    IssuingCardSpendingLimitCategoriesEnumExterminatingServices -> "exterminating_services"
    IssuingCardSpendingLimitCategoriesEnumFamilyClothingStores -> "family_clothing_stores"
    IssuingCardSpendingLimitCategoriesEnumFastFoodRestaurants -> "fast_food_restaurants"
    IssuingCardSpendingLimitCategoriesEnumFinancialInstitutions -> "financial_institutions"
    IssuingCardSpendingLimitCategoriesEnumFinesGovernmentAdministrativeEntities -> "fines_government_administrative_entities"
    IssuingCardSpendingLimitCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores -> "fireplace_fireplace_screens_and_accessories_stores"
    IssuingCardSpendingLimitCategoriesEnumFloorCoveringStores -> "floor_covering_stores"
    IssuingCardSpendingLimitCategoriesEnumFlorists -> "florists"
    IssuingCardSpendingLimitCategoriesEnumFloristsSuppliesNurseryStockAndFlowers -> "florists_supplies_nursery_stock_and_flowers"
    IssuingCardSpendingLimitCategoriesEnumFreezerAndLockerMeatProvisioners -> "freezer_and_locker_meat_provisioners"
    IssuingCardSpendingLimitCategoriesEnumFuelDealersNonAutomotive -> "fuel_dealers_non_automotive"
    IssuingCardSpendingLimitCategoriesEnumFuneralServicesCrematories -> "funeral_services_crematories"
    IssuingCardSpendingLimitCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances -> "furniture_home_furnishings_and_equipment_stores_except_appliances"
    IssuingCardSpendingLimitCategoriesEnumFurnitureRepairRefinishing -> "furniture_repair_refinishing"
    IssuingCardSpendingLimitCategoriesEnumFurriersAndFurShops -> "furriers_and_fur_shops"
    IssuingCardSpendingLimitCategoriesEnumGeneralServices -> "general_services"
    IssuingCardSpendingLimitCategoriesEnumGiftCardNoveltyAndSouvenirShops -> "gift_card_novelty_and_souvenir_shops"
    IssuingCardSpendingLimitCategoriesEnumGlassPaintAndWallpaperStores -> "glass_paint_and_wallpaper_stores"
    IssuingCardSpendingLimitCategoriesEnumGlasswareCrystalStores -> "glassware_crystal_stores"
    IssuingCardSpendingLimitCategoriesEnumGolfCoursesPublic -> "golf_courses_public"
    IssuingCardSpendingLimitCategoriesEnumGovernmentServices -> "government_services"
    IssuingCardSpendingLimitCategoriesEnumGroceryStoresSupermarkets -> "grocery_stores_supermarkets"
    IssuingCardSpendingLimitCategoriesEnumHardwareEquipmentAndSupplies -> "hardware_equipment_and_supplies"
    IssuingCardSpendingLimitCategoriesEnumHardwareStores -> "hardware_stores"
    IssuingCardSpendingLimitCategoriesEnumHealthAndBeautySpas -> "health_and_beauty_spas"
    IssuingCardSpendingLimitCategoriesEnumHearingAidsSalesAndSupplies -> "hearing_aids_sales_and_supplies"
    IssuingCardSpendingLimitCategoriesEnumHeatingPlumbingAC -> "heating_plumbing_a_c"
    IssuingCardSpendingLimitCategoriesEnumHobbyToyAndGameShops -> "hobby_toy_and_game_shops"
    IssuingCardSpendingLimitCategoriesEnumHomeSupplyWarehouseStores -> "home_supply_warehouse_stores"
    IssuingCardSpendingLimitCategoriesEnumHospitals -> "hospitals"
    IssuingCardSpendingLimitCategoriesEnumHotelsMotelsAndResorts -> "hotels_motels_and_resorts"
    IssuingCardSpendingLimitCategoriesEnumHouseholdApplianceStores -> "household_appliance_stores"
    IssuingCardSpendingLimitCategoriesEnumIndustrialSupplies -> "industrial_supplies"
    IssuingCardSpendingLimitCategoriesEnumInformationRetrievalServices -> "information_retrieval_services"
    IssuingCardSpendingLimitCategoriesEnumInsuranceDefault -> "insurance_default"
    IssuingCardSpendingLimitCategoriesEnumInsuranceUnderwritingPremiums -> "insurance_underwriting_premiums"
    IssuingCardSpendingLimitCategoriesEnumIntraCompanyPurchases -> "intra_company_purchases"
    IssuingCardSpendingLimitCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores -> "jewelry_stores_watches_clocks_and_silverware_stores"
    IssuingCardSpendingLimitCategoriesEnumLandscapingServices -> "landscaping_services"
    IssuingCardSpendingLimitCategoriesEnumLaundries -> "laundries"
    IssuingCardSpendingLimitCategoriesEnumLaundryCleaningServices -> "laundry_cleaning_services"
    IssuingCardSpendingLimitCategoriesEnumLegalServicesAttorneys -> "legal_services_attorneys"
    IssuingCardSpendingLimitCategoriesEnumLuggageAndLeatherGoodsStores -> "luggage_and_leather_goods_stores"
    IssuingCardSpendingLimitCategoriesEnumLumberBuildingMaterialsStores -> "lumber_building_materials_stores"
    IssuingCardSpendingLimitCategoriesEnumManualCashDisburse -> "manual_cash_disburse"
    IssuingCardSpendingLimitCategoriesEnumMarinasServiceAndSupplies -> "marinas_service_and_supplies"
    IssuingCardSpendingLimitCategoriesEnumMasonryStoneworkAndPlaster -> "masonry_stonework_and_plaster"
    IssuingCardSpendingLimitCategoriesEnumMassageParlors -> "massage_parlors"
    IssuingCardSpendingLimitCategoriesEnumMedicalAndDentalLabs -> "medical_and_dental_labs"
    IssuingCardSpendingLimitCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies -> "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
    IssuingCardSpendingLimitCategoriesEnumMedicalServices -> "medical_services"
    IssuingCardSpendingLimitCategoriesEnumMembershipOrganizations -> "membership_organizations"
    IssuingCardSpendingLimitCategoriesEnumMensAndBoysClothingAndAccessoriesStores -> "mens_and_boys_clothing_and_accessories_stores"
    IssuingCardSpendingLimitCategoriesEnumMensWomensClothingStores -> "mens_womens_clothing_stores"
    IssuingCardSpendingLimitCategoriesEnumMetalServiceCenters -> "metal_service_centers"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneous -> "miscellaneous"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousApparelAndAccessoryShops -> "miscellaneous_apparel_and_accessory_shops"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousAutoDealers -> "miscellaneous_auto_dealers"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousBusinessServices -> "miscellaneous_business_services"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousFoodStores -> "miscellaneous_food_stores"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousGeneralMerchandise -> "miscellaneous_general_merchandise"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousGeneralServices -> "miscellaneous_general_services"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores -> "miscellaneous_home_furnishing_specialty_stores"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousPublishingAndPrinting -> "miscellaneous_publishing_and_printing"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousRecreationServices -> "miscellaneous_recreation_services"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousRepairShops -> "miscellaneous_repair_shops"
    IssuingCardSpendingLimitCategoriesEnumMiscellaneousSpecialtyRetail -> "miscellaneous_specialty_retail"
    IssuingCardSpendingLimitCategoriesEnumMobileHomeDealers -> "mobile_home_dealers"
    IssuingCardSpendingLimitCategoriesEnumMotionPictureTheaters -> "motion_picture_theaters"
    IssuingCardSpendingLimitCategoriesEnumMotorFreightCarriersAndTrucking -> "motor_freight_carriers_and_trucking"
    IssuingCardSpendingLimitCategoriesEnumMotorHomesDealers -> "motor_homes_dealers"
    IssuingCardSpendingLimitCategoriesEnumMotorVehicleSuppliesAndNewParts -> "motor_vehicle_supplies_and_new_parts"
    IssuingCardSpendingLimitCategoriesEnumMotorcycleShopsAndDealers -> "motorcycle_shops_and_dealers"
    IssuingCardSpendingLimitCategoriesEnumMotorcycleShopsDealers -> "motorcycle_shops_dealers"
    IssuingCardSpendingLimitCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic -> "music_stores_musical_instruments_pianos_and_sheet_music"
    IssuingCardSpendingLimitCategoriesEnumNewsDealersAndNewsstands -> "news_dealers_and_newsstands"
    IssuingCardSpendingLimitCategoriesEnumNonFiMoneyOrders -> "non_fi_money_orders"
    IssuingCardSpendingLimitCategoriesEnumNonFiStoredValueCardPurchaseLoad -> "non_fi_stored_value_card_purchase_load"
    IssuingCardSpendingLimitCategoriesEnumNondurableGoods -> "nondurable_goods"
    IssuingCardSpendingLimitCategoriesEnumNurseriesLawnAndGardenSupplyStores -> "nurseries_lawn_and_garden_supply_stores"
    IssuingCardSpendingLimitCategoriesEnumNursingPersonalCare -> "nursing_personal_care"
    IssuingCardSpendingLimitCategoriesEnumOfficeAndCommercialFurniture -> "office_and_commercial_furniture"
    IssuingCardSpendingLimitCategoriesEnumOpticiansEyeglasses -> "opticians_eyeglasses"
    IssuingCardSpendingLimitCategoriesEnumOptometristsOphthalmologist -> "optometrists_ophthalmologist"
    IssuingCardSpendingLimitCategoriesEnumOrthopedicGoodsProstheticDevices -> "orthopedic_goods_prosthetic_devices"
    IssuingCardSpendingLimitCategoriesEnumOsteopaths -> "osteopaths"
    IssuingCardSpendingLimitCategoriesEnumPackageStoresBeerWineAndLiquor -> "package_stores_beer_wine_and_liquor"
    IssuingCardSpendingLimitCategoriesEnumPaintsVarnishesAndSupplies -> "paints_varnishes_and_supplies"
    IssuingCardSpendingLimitCategoriesEnumParkingLotsGarages -> "parking_lots_garages"
    IssuingCardSpendingLimitCategoriesEnumPassengerRailways -> "passenger_railways"
    IssuingCardSpendingLimitCategoriesEnumPawnShops -> "pawn_shops"
    IssuingCardSpendingLimitCategoriesEnumPetShopsPetFoodAndSupplies -> "pet_shops_pet_food_and_supplies"
    IssuingCardSpendingLimitCategoriesEnumPetroleumAndPetroleumProducts -> "petroleum_and_petroleum_products"
    IssuingCardSpendingLimitCategoriesEnumPhotoDeveloping -> "photo_developing"
    IssuingCardSpendingLimitCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies -> "photographic_photocopy_microfilm_equipment_and_supplies"
    IssuingCardSpendingLimitCategoriesEnumPhotographicStudios -> "photographic_studios"
    IssuingCardSpendingLimitCategoriesEnumPictureVideoProduction -> "picture_video_production"
    IssuingCardSpendingLimitCategoriesEnumPieceGoodsNotionsAndOtherDryGoods -> "piece_goods_notions_and_other_dry_goods"
    IssuingCardSpendingLimitCategoriesEnumPlumbingHeatingEquipmentAndSupplies -> "plumbing_heating_equipment_and_supplies"
    IssuingCardSpendingLimitCategoriesEnumPoliticalOrganizations -> "political_organizations"
    IssuingCardSpendingLimitCategoriesEnumPostalServicesGovernmentOnly -> "postal_services_government_only"
    IssuingCardSpendingLimitCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry -> "precious_stones_and_metals_watches_and_jewelry"
    IssuingCardSpendingLimitCategoriesEnumProfessionalServices -> "professional_services"
    IssuingCardSpendingLimitCategoriesEnumPublicWarehousingAndStorage -> "public_warehousing_and_storage"
    IssuingCardSpendingLimitCategoriesEnumQuickCopyReproAndBlueprint -> "quick_copy_repro_and_blueprint"
    IssuingCardSpendingLimitCategoriesEnumRailroads -> "railroads"
    IssuingCardSpendingLimitCategoriesEnumRealEstateAgentsAndManagersRentals -> "real_estate_agents_and_managers_rentals"
    IssuingCardSpendingLimitCategoriesEnumRecordStores -> "record_stores"
    IssuingCardSpendingLimitCategoriesEnumRecreationalVehicleRentals -> "recreational_vehicle_rentals"
    IssuingCardSpendingLimitCategoriesEnumReligiousGoodsStores -> "religious_goods_stores"
    IssuingCardSpendingLimitCategoriesEnumReligiousOrganizations -> "religious_organizations"
    IssuingCardSpendingLimitCategoriesEnumRoofingSidingSheetMetal -> "roofing_siding_sheet_metal"
    IssuingCardSpendingLimitCategoriesEnumSecretarialSupportServices -> "secretarial_support_services"
    IssuingCardSpendingLimitCategoriesEnumSecurityBrokersDealers -> "security_brokers_dealers"
    IssuingCardSpendingLimitCategoriesEnumServiceStations -> "service_stations"
    IssuingCardSpendingLimitCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores -> "sewing_needlework_fabric_and_piece_goods_stores"
    IssuingCardSpendingLimitCategoriesEnumShoeRepairHatCleaning -> "shoe_repair_hat_cleaning"
    IssuingCardSpendingLimitCategoriesEnumShoeStores -> "shoe_stores"
    IssuingCardSpendingLimitCategoriesEnumSmallApplianceRepair -> "small_appliance_repair"
    IssuingCardSpendingLimitCategoriesEnumSnowmobileDealers -> "snowmobile_dealers"
    IssuingCardSpendingLimitCategoriesEnumSpecialTradeServices -> "special_trade_services"
    IssuingCardSpendingLimitCategoriesEnumSpecialtyCleaning -> "specialty_cleaning"
    IssuingCardSpendingLimitCategoriesEnumSportingGoodsStores -> "sporting_goods_stores"
    IssuingCardSpendingLimitCategoriesEnumSportingRecreationCamps -> "sporting_recreation_camps"
    IssuingCardSpendingLimitCategoriesEnumSportsAndRidingApparelStores -> "sports_and_riding_apparel_stores"
    IssuingCardSpendingLimitCategoriesEnumSportsClubsFields -> "sports_clubs_fields"
    IssuingCardSpendingLimitCategoriesEnumStampAndCoinStores -> "stamp_and_coin_stores"
    IssuingCardSpendingLimitCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper -> "stationary_office_supplies_printing_and_writing_paper"
    IssuingCardSpendingLimitCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores -> "stationery_stores_office_and_school_supply_stores"
    IssuingCardSpendingLimitCategoriesEnumSwimmingPoolsSales -> "swimming_pools_sales"
    IssuingCardSpendingLimitCategoriesEnumTUiTravelGermany -> "t_ui_travel_germany"
    IssuingCardSpendingLimitCategoriesEnumTailorsAlterations -> "tailors_alterations"
    IssuingCardSpendingLimitCategoriesEnumTaxPaymentsGovernmentAgencies -> "tax_payments_government_agencies"
    IssuingCardSpendingLimitCategoriesEnumTaxPreparationServices -> "tax_preparation_services"
    IssuingCardSpendingLimitCategoriesEnumTaxicabsLimousines -> "taxicabs_limousines"
    IssuingCardSpendingLimitCategoriesEnumTelecommunicationEquipmentAndTelephoneSales -> "telecommunication_equipment_and_telephone_sales"
    IssuingCardSpendingLimitCategoriesEnumTelecommunicationServices -> "telecommunication_services"
    IssuingCardSpendingLimitCategoriesEnumTelegraphServices -> "telegraph_services"
    IssuingCardSpendingLimitCategoriesEnumTentAndAwningShops -> "tent_and_awning_shops"
    IssuingCardSpendingLimitCategoriesEnumTestingLaboratories -> "testing_laboratories"
    IssuingCardSpendingLimitCategoriesEnumTheatricalTicketAgencies -> "theatrical_ticket_agencies"
    IssuingCardSpendingLimitCategoriesEnumTimeshares -> "timeshares"
    IssuingCardSpendingLimitCategoriesEnumTireRetreadingAndRepair -> "tire_retreading_and_repair"
    IssuingCardSpendingLimitCategoriesEnumTollsBridgeFees -> "tolls_bridge_fees"
    IssuingCardSpendingLimitCategoriesEnumTouristAttractionsAndExhibits -> "tourist_attractions_and_exhibits"
    IssuingCardSpendingLimitCategoriesEnumTowingServices -> "towing_services"
    IssuingCardSpendingLimitCategoriesEnumTrailerParksCampgrounds -> "trailer_parks_campgrounds"
    IssuingCardSpendingLimitCategoriesEnumTransportationServices -> "transportation_services"
    IssuingCardSpendingLimitCategoriesEnumTravelAgenciesTourOperators -> "travel_agencies_tour_operators"
    IssuingCardSpendingLimitCategoriesEnumTruckStopIteration -> "truck_stop_iteration"
    IssuingCardSpendingLimitCategoriesEnumTruckUtilityTrailerRentals -> "truck_utility_trailer_rentals"
    IssuingCardSpendingLimitCategoriesEnumTypesettingPlateMakingAndRelatedServices -> "typesetting_plate_making_and_related_services"
    IssuingCardSpendingLimitCategoriesEnumTypewriterStores -> "typewriter_stores"
    IssuingCardSpendingLimitCategoriesEnumUSFederalGovernmentAgenciesOrDepartments -> "u_s_federal_government_agencies_or_departments"
    IssuingCardSpendingLimitCategoriesEnumUniformsCommercialClothing -> "uniforms_commercial_clothing"
    IssuingCardSpendingLimitCategoriesEnumUsedMerchandiseAndSecondhandStores -> "used_merchandise_and_secondhand_stores"
    IssuingCardSpendingLimitCategoriesEnumUtilities -> "utilities"
    IssuingCardSpendingLimitCategoriesEnumVarietyStores -> "variety_stores"
    IssuingCardSpendingLimitCategoriesEnumVeterinaryServices -> "veterinary_services"
    IssuingCardSpendingLimitCategoriesEnumVideoAmusementGameSupplies -> "video_amusement_game_supplies"
    IssuingCardSpendingLimitCategoriesEnumVideoGameArcades -> "video_game_arcades"
    IssuingCardSpendingLimitCategoriesEnumVideoTapeRentalStores -> "video_tape_rental_stores"
    IssuingCardSpendingLimitCategoriesEnumVocationalTradeSchools -> "vocational_trade_schools"
    IssuingCardSpendingLimitCategoriesEnumWatchJewelryRepair -> "watch_jewelry_repair"
    IssuingCardSpendingLimitCategoriesEnumWeldingRepair -> "welding_repair"
    IssuingCardSpendingLimitCategoriesEnumWholesaleClubs -> "wholesale_clubs"
    IssuingCardSpendingLimitCategoriesEnumWigAndToupeeStores -> "wig_and_toupee_stores"
    IssuingCardSpendingLimitCategoriesEnumWiresMoneyOrders -> "wires_money_orders"
    IssuingCardSpendingLimitCategoriesEnumWomensAccessoryAndSpecialtyShops -> "womens_accessory_and_specialty_shops"
    IssuingCardSpendingLimitCategoriesEnumWomensReadyToWearStores -> "womens_ready_to_wear_stores"
    IssuingCardSpendingLimitCategoriesEnumWreckingAndSalvageYards -> "wrecking_and_salvage_yards"

instance FromJSON IssuingCardSpendingLimitCategoriesEnum where
  parseJSON = withText "IssuingCardSpendingLimitCategoriesEnum" $ \case
    "ac_refrigeration_repair" -> pure IssuingCardSpendingLimitCategoriesEnumAcRefrigerationRepair
    "accounting_bookkeeping_services" -> pure IssuingCardSpendingLimitCategoriesEnumAccountingBookkeepingServices
    "advertising_services" -> pure IssuingCardSpendingLimitCategoriesEnumAdvertisingServices
    "agricultural_cooperative" -> pure IssuingCardSpendingLimitCategoriesEnumAgriculturalCooperative
    "airlines_air_carriers" -> pure IssuingCardSpendingLimitCategoriesEnumAirlinesAirCarriers
    "airports_flying_fields" -> pure IssuingCardSpendingLimitCategoriesEnumAirportsFlyingFields
    "ambulance_services" -> pure IssuingCardSpendingLimitCategoriesEnumAmbulanceServices
    "amusement_parks_carnivals" -> pure IssuingCardSpendingLimitCategoriesEnumAmusementParksCarnivals
    "antique_reproductions" -> pure IssuingCardSpendingLimitCategoriesEnumAntiqueReproductions
    "antique_shops" -> pure IssuingCardSpendingLimitCategoriesEnumAntiqueShops
    "aquariums" -> pure IssuingCardSpendingLimitCategoriesEnumAquariums
    "architectural_surveying_services" -> pure IssuingCardSpendingLimitCategoriesEnumArchitecturalSurveyingServices
    "art_dealers_and_galleries" -> pure IssuingCardSpendingLimitCategoriesEnumArtDealersAndGalleries
    "artists_supply_and_craft_shops" -> pure IssuingCardSpendingLimitCategoriesEnumArtistsSupplyAndCraftShops
    "auto_and_home_supply_stores" -> pure IssuingCardSpendingLimitCategoriesEnumAutoAndHomeSupplyStores
    "auto_body_repair_shops" -> pure IssuingCardSpendingLimitCategoriesEnumAutoBodyRepairShops
    "auto_paint_shops" -> pure IssuingCardSpendingLimitCategoriesEnumAutoPaintShops
    "auto_service_shops" -> pure IssuingCardSpendingLimitCategoriesEnumAutoServiceShops
    "automated_cash_disburse" -> pure IssuingCardSpendingLimitCategoriesEnumAutomatedCashDisburse
    "automated_fuel_dispensers" -> pure IssuingCardSpendingLimitCategoriesEnumAutomatedFuelDispensers
    "automobile_associations" -> pure IssuingCardSpendingLimitCategoriesEnumAutomobileAssociations
    "automotive_parts_and_accessories_stores" -> pure IssuingCardSpendingLimitCategoriesEnumAutomotivePartsAndAccessoriesStores
    "automotive_tire_stores" -> pure IssuingCardSpendingLimitCategoriesEnumAutomotiveTireStores
    "bail_and_bond_payments" -> pure IssuingCardSpendingLimitCategoriesEnumBailAndBondPayments
    "bakeries" -> pure IssuingCardSpendingLimitCategoriesEnumBakeries
    "bands_orchestras" -> pure IssuingCardSpendingLimitCategoriesEnumBandsOrchestras
    "barber_and_beauty_shops" -> pure IssuingCardSpendingLimitCategoriesEnumBarberAndBeautyShops
    "betting_casino_gambling" -> pure IssuingCardSpendingLimitCategoriesEnumBettingCasinoGambling
    "bicycle_shops" -> pure IssuingCardSpendingLimitCategoriesEnumBicycleShops
    "billiard_pool_establishments" -> pure IssuingCardSpendingLimitCategoriesEnumBilliardPoolEstablishments
    "boat_dealers" -> pure IssuingCardSpendingLimitCategoriesEnumBoatDealers
    "boat_rentals_and_leases" -> pure IssuingCardSpendingLimitCategoriesEnumBoatRentalsAndLeases
    "book_stores" -> pure IssuingCardSpendingLimitCategoriesEnumBookStores
    "books_periodicals_and_newspapers" -> pure IssuingCardSpendingLimitCategoriesEnumBooksPeriodicalsAndNewspapers
    "bowling_alleys" -> pure IssuingCardSpendingLimitCategoriesEnumBowlingAlleys
    "bus_lines" -> pure IssuingCardSpendingLimitCategoriesEnumBusLines
    "business_secretarial_schools" -> pure IssuingCardSpendingLimitCategoriesEnumBusinessSecretarialSchools
    "buying_shopping_services" -> pure IssuingCardSpendingLimitCategoriesEnumBuyingShoppingServices
    "cable_satellite_and_other_pay_television_and_radio" -> pure IssuingCardSpendingLimitCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
    "camera_and_photographic_supply_stores" -> pure IssuingCardSpendingLimitCategoriesEnumCameraAndPhotographicSupplyStores
    "candy_nut_and_confectionery_stores" -> pure IssuingCardSpendingLimitCategoriesEnumCandyNutAndConfectioneryStores
    "car_and_truck_dealers_new_used" -> pure IssuingCardSpendingLimitCategoriesEnumCarAndTruckDealersNewUsed
    "car_and_truck_dealers_used_only" -> pure IssuingCardSpendingLimitCategoriesEnumCarAndTruckDealersUsedOnly
    "car_rental_agencies" -> pure IssuingCardSpendingLimitCategoriesEnumCarRentalAgencies
    "car_washes" -> pure IssuingCardSpendingLimitCategoriesEnumCarWashes
    "carpentry_services" -> pure IssuingCardSpendingLimitCategoriesEnumCarpentryServices
    "carpet_upholstery_cleaning" -> pure IssuingCardSpendingLimitCategoriesEnumCarpetUpholsteryCleaning
    "caterers" -> pure IssuingCardSpendingLimitCategoriesEnumCaterers
    "charitable_and_social_service_organizations_fundraising" -> pure IssuingCardSpendingLimitCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
    "chemicals_and_allied_products" -> pure IssuingCardSpendingLimitCategoriesEnumChemicalsAndAlliedProducts
    "chidrens_and_infants_wear_stores" -> pure IssuingCardSpendingLimitCategoriesEnumChidrensAndInfantsWearStores
    "child_care_services" -> pure IssuingCardSpendingLimitCategoriesEnumChildCareServices
    "chiropodists_podiatrists" -> pure IssuingCardSpendingLimitCategoriesEnumChiropodistsPodiatrists
    "chiropractors" -> pure IssuingCardSpendingLimitCategoriesEnumChiropractors
    "cigar_stores_and_stands" -> pure IssuingCardSpendingLimitCategoriesEnumCigarStoresAndStands
    "civic_social_fraternal_associations" -> pure IssuingCardSpendingLimitCategoriesEnumCivicSocialFraternalAssociations
    "cleaning_and_maintenance" -> pure IssuingCardSpendingLimitCategoriesEnumCleaningAndMaintenance
    "clothing_rental" -> pure IssuingCardSpendingLimitCategoriesEnumClothingRental
    "colleges_universities" -> pure IssuingCardSpendingLimitCategoriesEnumCollegesUniversities
    "commercial_equipment" -> pure IssuingCardSpendingLimitCategoriesEnumCommercialEquipment
    "commercial_footwear" -> pure IssuingCardSpendingLimitCategoriesEnumCommercialFootwear
    "commercial_photography_art_and_graphics" -> pure IssuingCardSpendingLimitCategoriesEnumCommercialPhotographyArtAndGraphics
    "commuter_transport_and_ferries" -> pure IssuingCardSpendingLimitCategoriesEnumCommuterTransportAndFerries
    "computer_network_services" -> pure IssuingCardSpendingLimitCategoriesEnumComputerNetworkServices
    "computer_programming" -> pure IssuingCardSpendingLimitCategoriesEnumComputerProgramming
    "computer_repair" -> pure IssuingCardSpendingLimitCategoriesEnumComputerRepair
    "computer_software_stores" -> pure IssuingCardSpendingLimitCategoriesEnumComputerSoftwareStores
    "computers_peripherals_and_software" -> pure IssuingCardSpendingLimitCategoriesEnumComputersPeripheralsAndSoftware
    "concrete_work_services" -> pure IssuingCardSpendingLimitCategoriesEnumConcreteWorkServices
    "construction_materials" -> pure IssuingCardSpendingLimitCategoriesEnumConstructionMaterials
    "consulting_public_relations" -> pure IssuingCardSpendingLimitCategoriesEnumConsultingPublicRelations
    "correspondence_schools" -> pure IssuingCardSpendingLimitCategoriesEnumCorrespondenceSchools
    "cosmetic_stores" -> pure IssuingCardSpendingLimitCategoriesEnumCosmeticStores
    "counseling_services" -> pure IssuingCardSpendingLimitCategoriesEnumCounselingServices
    "country_clubs" -> pure IssuingCardSpendingLimitCategoriesEnumCountryClubs
    "courier_services" -> pure IssuingCardSpendingLimitCategoriesEnumCourierServices
    "court_costs" -> pure IssuingCardSpendingLimitCategoriesEnumCourtCosts
    "credit_reporting_agencies" -> pure IssuingCardSpendingLimitCategoriesEnumCreditReportingAgencies
    "cruise_lines" -> pure IssuingCardSpendingLimitCategoriesEnumCruiseLines
    "dairy_products_stores" -> pure IssuingCardSpendingLimitCategoriesEnumDairyProductsStores
    "dance_hall_studios_schools" -> pure IssuingCardSpendingLimitCategoriesEnumDanceHallStudiosSchools
    "dating_escort_services" -> pure IssuingCardSpendingLimitCategoriesEnumDatingEscortServices
    "dentists_orthodontists" -> pure IssuingCardSpendingLimitCategoriesEnumDentistsOrthodontists
    "department_stores" -> pure IssuingCardSpendingLimitCategoriesEnumDepartmentStores
    "detective_agencies" -> pure IssuingCardSpendingLimitCategoriesEnumDetectiveAgencies
    "digital_goods_applications" -> pure IssuingCardSpendingLimitCategoriesEnumDigitalGoodsApplications
    "direct_marketing_catalog_merchant" -> pure IssuingCardSpendingLimitCategoriesEnumDirectMarketingCatalogMerchant
    "direct_marketing_combination_catalog_and_retail_merchant" -> pure IssuingCardSpendingLimitCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
    "direct_marketing_inbound_telemarketing" -> pure IssuingCardSpendingLimitCategoriesEnumDirectMarketingInboundTelemarketing
    "direct_marketing_insurance_services" -> pure IssuingCardSpendingLimitCategoriesEnumDirectMarketingInsuranceServices
    "direct_marketing_other" -> pure IssuingCardSpendingLimitCategoriesEnumDirectMarketingOther
    "direct_marketing_outbound_telemarketing" -> pure IssuingCardSpendingLimitCategoriesEnumDirectMarketingOutboundTelemarketing
    "direct_marketing_subscription" -> pure IssuingCardSpendingLimitCategoriesEnumDirectMarketingSubscription
    "direct_marketing_travel" -> pure IssuingCardSpendingLimitCategoriesEnumDirectMarketingTravel
    "discount_stores" -> pure IssuingCardSpendingLimitCategoriesEnumDiscountStores
    "doctors" -> pure IssuingCardSpendingLimitCategoriesEnumDoctors
    "door_to_door_sales" -> pure IssuingCardSpendingLimitCategoriesEnumDoorToDoorSales
    "drapery_window_covering_and_upholstery_stores" -> pure IssuingCardSpendingLimitCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
    "drinking_places" -> pure IssuingCardSpendingLimitCategoriesEnumDrinkingPlaces
    "drug_stores_and_pharmacies" -> pure IssuingCardSpendingLimitCategoriesEnumDrugStoresAndPharmacies
    "drugs_drug_proprietaries_and_druggist_sundries" -> pure IssuingCardSpendingLimitCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
    "dry_cleaners" -> pure IssuingCardSpendingLimitCategoriesEnumDryCleaners
    "durable_goods" -> pure IssuingCardSpendingLimitCategoriesEnumDurableGoods
    "duty_free_stores" -> pure IssuingCardSpendingLimitCategoriesEnumDutyFreeStores
    "eating_places_restaurants" -> pure IssuingCardSpendingLimitCategoriesEnumEatingPlacesRestaurants
    "educational_services" -> pure IssuingCardSpendingLimitCategoriesEnumEducationalServices
    "electric_razor_stores" -> pure IssuingCardSpendingLimitCategoriesEnumElectricRazorStores
    "electrical_parts_and_equipment" -> pure IssuingCardSpendingLimitCategoriesEnumElectricalPartsAndEquipment
    "electrical_services" -> pure IssuingCardSpendingLimitCategoriesEnumElectricalServices
    "electronics_repair_shops" -> pure IssuingCardSpendingLimitCategoriesEnumElectronicsRepairShops
    "electronics_stores" -> pure IssuingCardSpendingLimitCategoriesEnumElectronicsStores
    "elementary_secondary_schools" -> pure IssuingCardSpendingLimitCategoriesEnumElementarySecondarySchools
    "employment_temp_agencies" -> pure IssuingCardSpendingLimitCategoriesEnumEmploymentTempAgencies
    "equipment_rental" -> pure IssuingCardSpendingLimitCategoriesEnumEquipmentRental
    "exterminating_services" -> pure IssuingCardSpendingLimitCategoriesEnumExterminatingServices
    "family_clothing_stores" -> pure IssuingCardSpendingLimitCategoriesEnumFamilyClothingStores
    "fast_food_restaurants" -> pure IssuingCardSpendingLimitCategoriesEnumFastFoodRestaurants
    "financial_institutions" -> pure IssuingCardSpendingLimitCategoriesEnumFinancialInstitutions
    "fines_government_administrative_entities" -> pure IssuingCardSpendingLimitCategoriesEnumFinesGovernmentAdministrativeEntities
    "fireplace_fireplace_screens_and_accessories_stores" -> pure IssuingCardSpendingLimitCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
    "floor_covering_stores" -> pure IssuingCardSpendingLimitCategoriesEnumFloorCoveringStores
    "florists" -> pure IssuingCardSpendingLimitCategoriesEnumFlorists
    "florists_supplies_nursery_stock_and_flowers" -> pure IssuingCardSpendingLimitCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
    "freezer_and_locker_meat_provisioners" -> pure IssuingCardSpendingLimitCategoriesEnumFreezerAndLockerMeatProvisioners
    "fuel_dealers_non_automotive" -> pure IssuingCardSpendingLimitCategoriesEnumFuelDealersNonAutomotive
    "funeral_services_crematories" -> pure IssuingCardSpendingLimitCategoriesEnumFuneralServicesCrematories
    "furniture_home_furnishings_and_equipment_stores_except_appliances" -> pure IssuingCardSpendingLimitCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
    "furniture_repair_refinishing" -> pure IssuingCardSpendingLimitCategoriesEnumFurnitureRepairRefinishing
    "furriers_and_fur_shops" -> pure IssuingCardSpendingLimitCategoriesEnumFurriersAndFurShops
    "general_services" -> pure IssuingCardSpendingLimitCategoriesEnumGeneralServices
    "gift_card_novelty_and_souvenir_shops" -> pure IssuingCardSpendingLimitCategoriesEnumGiftCardNoveltyAndSouvenirShops
    "glass_paint_and_wallpaper_stores" -> pure IssuingCardSpendingLimitCategoriesEnumGlassPaintAndWallpaperStores
    "glassware_crystal_stores" -> pure IssuingCardSpendingLimitCategoriesEnumGlasswareCrystalStores
    "golf_courses_public" -> pure IssuingCardSpendingLimitCategoriesEnumGolfCoursesPublic
    "government_services" -> pure IssuingCardSpendingLimitCategoriesEnumGovernmentServices
    "grocery_stores_supermarkets" -> pure IssuingCardSpendingLimitCategoriesEnumGroceryStoresSupermarkets
    "hardware_equipment_and_supplies" -> pure IssuingCardSpendingLimitCategoriesEnumHardwareEquipmentAndSupplies
    "hardware_stores" -> pure IssuingCardSpendingLimitCategoriesEnumHardwareStores
    "health_and_beauty_spas" -> pure IssuingCardSpendingLimitCategoriesEnumHealthAndBeautySpas
    "hearing_aids_sales_and_supplies" -> pure IssuingCardSpendingLimitCategoriesEnumHearingAidsSalesAndSupplies
    "heating_plumbing_a_c" -> pure IssuingCardSpendingLimitCategoriesEnumHeatingPlumbingAC
    "hobby_toy_and_game_shops" -> pure IssuingCardSpendingLimitCategoriesEnumHobbyToyAndGameShops
    "home_supply_warehouse_stores" -> pure IssuingCardSpendingLimitCategoriesEnumHomeSupplyWarehouseStores
    "hospitals" -> pure IssuingCardSpendingLimitCategoriesEnumHospitals
    "hotels_motels_and_resorts" -> pure IssuingCardSpendingLimitCategoriesEnumHotelsMotelsAndResorts
    "household_appliance_stores" -> pure IssuingCardSpendingLimitCategoriesEnumHouseholdApplianceStores
    "industrial_supplies" -> pure IssuingCardSpendingLimitCategoriesEnumIndustrialSupplies
    "information_retrieval_services" -> pure IssuingCardSpendingLimitCategoriesEnumInformationRetrievalServices
    "insurance_default" -> pure IssuingCardSpendingLimitCategoriesEnumInsuranceDefault
    "insurance_underwriting_premiums" -> pure IssuingCardSpendingLimitCategoriesEnumInsuranceUnderwritingPremiums
    "intra_company_purchases" -> pure IssuingCardSpendingLimitCategoriesEnumIntraCompanyPurchases
    "jewelry_stores_watches_clocks_and_silverware_stores" -> pure IssuingCardSpendingLimitCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
    "landscaping_services" -> pure IssuingCardSpendingLimitCategoriesEnumLandscapingServices
    "laundries" -> pure IssuingCardSpendingLimitCategoriesEnumLaundries
    "laundry_cleaning_services" -> pure IssuingCardSpendingLimitCategoriesEnumLaundryCleaningServices
    "legal_services_attorneys" -> pure IssuingCardSpendingLimitCategoriesEnumLegalServicesAttorneys
    "luggage_and_leather_goods_stores" -> pure IssuingCardSpendingLimitCategoriesEnumLuggageAndLeatherGoodsStores
    "lumber_building_materials_stores" -> pure IssuingCardSpendingLimitCategoriesEnumLumberBuildingMaterialsStores
    "manual_cash_disburse" -> pure IssuingCardSpendingLimitCategoriesEnumManualCashDisburse
    "marinas_service_and_supplies" -> pure IssuingCardSpendingLimitCategoriesEnumMarinasServiceAndSupplies
    "masonry_stonework_and_plaster" -> pure IssuingCardSpendingLimitCategoriesEnumMasonryStoneworkAndPlaster
    "massage_parlors" -> pure IssuingCardSpendingLimitCategoriesEnumMassageParlors
    "medical_and_dental_labs" -> pure IssuingCardSpendingLimitCategoriesEnumMedicalAndDentalLabs
    "medical_dental_ophthalmic_and_hospital_equipment_and_supplies" -> pure IssuingCardSpendingLimitCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
    "medical_services" -> pure IssuingCardSpendingLimitCategoriesEnumMedicalServices
    "membership_organizations" -> pure IssuingCardSpendingLimitCategoriesEnumMembershipOrganizations
    "mens_and_boys_clothing_and_accessories_stores" -> pure IssuingCardSpendingLimitCategoriesEnumMensAndBoysClothingAndAccessoriesStores
    "mens_womens_clothing_stores" -> pure IssuingCardSpendingLimitCategoriesEnumMensWomensClothingStores
    "metal_service_centers" -> pure IssuingCardSpendingLimitCategoriesEnumMetalServiceCenters
    "miscellaneous" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneous
    "miscellaneous_apparel_and_accessory_shops" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousApparelAndAccessoryShops
    "miscellaneous_auto_dealers" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousAutoDealers
    "miscellaneous_business_services" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousBusinessServices
    "miscellaneous_food_stores" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousFoodStores
    "miscellaneous_general_merchandise" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousGeneralMerchandise
    "miscellaneous_general_services" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousGeneralServices
    "miscellaneous_home_furnishing_specialty_stores" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
    "miscellaneous_publishing_and_printing" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousPublishingAndPrinting
    "miscellaneous_recreation_services" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousRecreationServices
    "miscellaneous_repair_shops" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousRepairShops
    "miscellaneous_specialty_retail" -> pure IssuingCardSpendingLimitCategoriesEnumMiscellaneousSpecialtyRetail
    "mobile_home_dealers" -> pure IssuingCardSpendingLimitCategoriesEnumMobileHomeDealers
    "motion_picture_theaters" -> pure IssuingCardSpendingLimitCategoriesEnumMotionPictureTheaters
    "motor_freight_carriers_and_trucking" -> pure IssuingCardSpendingLimitCategoriesEnumMotorFreightCarriersAndTrucking
    "motor_homes_dealers" -> pure IssuingCardSpendingLimitCategoriesEnumMotorHomesDealers
    "motor_vehicle_supplies_and_new_parts" -> pure IssuingCardSpendingLimitCategoriesEnumMotorVehicleSuppliesAndNewParts
    "motorcycle_shops_and_dealers" -> pure IssuingCardSpendingLimitCategoriesEnumMotorcycleShopsAndDealers
    "motorcycle_shops_dealers" -> pure IssuingCardSpendingLimitCategoriesEnumMotorcycleShopsDealers
    "music_stores_musical_instruments_pianos_and_sheet_music" -> pure IssuingCardSpendingLimitCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
    "news_dealers_and_newsstands" -> pure IssuingCardSpendingLimitCategoriesEnumNewsDealersAndNewsstands
    "non_fi_money_orders" -> pure IssuingCardSpendingLimitCategoriesEnumNonFiMoneyOrders
    "non_fi_stored_value_card_purchase_load" -> pure IssuingCardSpendingLimitCategoriesEnumNonFiStoredValueCardPurchaseLoad
    "nondurable_goods" -> pure IssuingCardSpendingLimitCategoriesEnumNondurableGoods
    "nurseries_lawn_and_garden_supply_stores" -> pure IssuingCardSpendingLimitCategoriesEnumNurseriesLawnAndGardenSupplyStores
    "nursing_personal_care" -> pure IssuingCardSpendingLimitCategoriesEnumNursingPersonalCare
    "office_and_commercial_furniture" -> pure IssuingCardSpendingLimitCategoriesEnumOfficeAndCommercialFurniture
    "opticians_eyeglasses" -> pure IssuingCardSpendingLimitCategoriesEnumOpticiansEyeglasses
    "optometrists_ophthalmologist" -> pure IssuingCardSpendingLimitCategoriesEnumOptometristsOphthalmologist
    "orthopedic_goods_prosthetic_devices" -> pure IssuingCardSpendingLimitCategoriesEnumOrthopedicGoodsProstheticDevices
    "osteopaths" -> pure IssuingCardSpendingLimitCategoriesEnumOsteopaths
    "package_stores_beer_wine_and_liquor" -> pure IssuingCardSpendingLimitCategoriesEnumPackageStoresBeerWineAndLiquor
    "paints_varnishes_and_supplies" -> pure IssuingCardSpendingLimitCategoriesEnumPaintsVarnishesAndSupplies
    "parking_lots_garages" -> pure IssuingCardSpendingLimitCategoriesEnumParkingLotsGarages
    "passenger_railways" -> pure IssuingCardSpendingLimitCategoriesEnumPassengerRailways
    "pawn_shops" -> pure IssuingCardSpendingLimitCategoriesEnumPawnShops
    "pet_shops_pet_food_and_supplies" -> pure IssuingCardSpendingLimitCategoriesEnumPetShopsPetFoodAndSupplies
    "petroleum_and_petroleum_products" -> pure IssuingCardSpendingLimitCategoriesEnumPetroleumAndPetroleumProducts
    "photo_developing" -> pure IssuingCardSpendingLimitCategoriesEnumPhotoDeveloping
    "photographic_photocopy_microfilm_equipment_and_supplies" -> pure IssuingCardSpendingLimitCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
    "photographic_studios" -> pure IssuingCardSpendingLimitCategoriesEnumPhotographicStudios
    "picture_video_production" -> pure IssuingCardSpendingLimitCategoriesEnumPictureVideoProduction
    "piece_goods_notions_and_other_dry_goods" -> pure IssuingCardSpendingLimitCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
    "plumbing_heating_equipment_and_supplies" -> pure IssuingCardSpendingLimitCategoriesEnumPlumbingHeatingEquipmentAndSupplies
    "political_organizations" -> pure IssuingCardSpendingLimitCategoriesEnumPoliticalOrganizations
    "postal_services_government_only" -> pure IssuingCardSpendingLimitCategoriesEnumPostalServicesGovernmentOnly
    "precious_stones_and_metals_watches_and_jewelry" -> pure IssuingCardSpendingLimitCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
    "professional_services" -> pure IssuingCardSpendingLimitCategoriesEnumProfessionalServices
    "public_warehousing_and_storage" -> pure IssuingCardSpendingLimitCategoriesEnumPublicWarehousingAndStorage
    "quick_copy_repro_and_blueprint" -> pure IssuingCardSpendingLimitCategoriesEnumQuickCopyReproAndBlueprint
    "railroads" -> pure IssuingCardSpendingLimitCategoriesEnumRailroads
    "real_estate_agents_and_managers_rentals" -> pure IssuingCardSpendingLimitCategoriesEnumRealEstateAgentsAndManagersRentals
    "record_stores" -> pure IssuingCardSpendingLimitCategoriesEnumRecordStores
    "recreational_vehicle_rentals" -> pure IssuingCardSpendingLimitCategoriesEnumRecreationalVehicleRentals
    "religious_goods_stores" -> pure IssuingCardSpendingLimitCategoriesEnumReligiousGoodsStores
    "religious_organizations" -> pure IssuingCardSpendingLimitCategoriesEnumReligiousOrganizations
    "roofing_siding_sheet_metal" -> pure IssuingCardSpendingLimitCategoriesEnumRoofingSidingSheetMetal
    "secretarial_support_services" -> pure IssuingCardSpendingLimitCategoriesEnumSecretarialSupportServices
    "security_brokers_dealers" -> pure IssuingCardSpendingLimitCategoriesEnumSecurityBrokersDealers
    "service_stations" -> pure IssuingCardSpendingLimitCategoriesEnumServiceStations
    "sewing_needlework_fabric_and_piece_goods_stores" -> pure IssuingCardSpendingLimitCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
    "shoe_repair_hat_cleaning" -> pure IssuingCardSpendingLimitCategoriesEnumShoeRepairHatCleaning
    "shoe_stores" -> pure IssuingCardSpendingLimitCategoriesEnumShoeStores
    "small_appliance_repair" -> pure IssuingCardSpendingLimitCategoriesEnumSmallApplianceRepair
    "snowmobile_dealers" -> pure IssuingCardSpendingLimitCategoriesEnumSnowmobileDealers
    "special_trade_services" -> pure IssuingCardSpendingLimitCategoriesEnumSpecialTradeServices
    "specialty_cleaning" -> pure IssuingCardSpendingLimitCategoriesEnumSpecialtyCleaning
    "sporting_goods_stores" -> pure IssuingCardSpendingLimitCategoriesEnumSportingGoodsStores
    "sporting_recreation_camps" -> pure IssuingCardSpendingLimitCategoriesEnumSportingRecreationCamps
    "sports_and_riding_apparel_stores" -> pure IssuingCardSpendingLimitCategoriesEnumSportsAndRidingApparelStores
    "sports_clubs_fields" -> pure IssuingCardSpendingLimitCategoriesEnumSportsClubsFields
    "stamp_and_coin_stores" -> pure IssuingCardSpendingLimitCategoriesEnumStampAndCoinStores
    "stationary_office_supplies_printing_and_writing_paper" -> pure IssuingCardSpendingLimitCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
    "stationery_stores_office_and_school_supply_stores" -> pure IssuingCardSpendingLimitCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
    "swimming_pools_sales" -> pure IssuingCardSpendingLimitCategoriesEnumSwimmingPoolsSales
    "t_ui_travel_germany" -> pure IssuingCardSpendingLimitCategoriesEnumTUiTravelGermany
    "tailors_alterations" -> pure IssuingCardSpendingLimitCategoriesEnumTailorsAlterations
    "tax_payments_government_agencies" -> pure IssuingCardSpendingLimitCategoriesEnumTaxPaymentsGovernmentAgencies
    "tax_preparation_services" -> pure IssuingCardSpendingLimitCategoriesEnumTaxPreparationServices
    "taxicabs_limousines" -> pure IssuingCardSpendingLimitCategoriesEnumTaxicabsLimousines
    "telecommunication_equipment_and_telephone_sales" -> pure IssuingCardSpendingLimitCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
    "telecommunication_services" -> pure IssuingCardSpendingLimitCategoriesEnumTelecommunicationServices
    "telegraph_services" -> pure IssuingCardSpendingLimitCategoriesEnumTelegraphServices
    "tent_and_awning_shops" -> pure IssuingCardSpendingLimitCategoriesEnumTentAndAwningShops
    "testing_laboratories" -> pure IssuingCardSpendingLimitCategoriesEnumTestingLaboratories
    "theatrical_ticket_agencies" -> pure IssuingCardSpendingLimitCategoriesEnumTheatricalTicketAgencies
    "timeshares" -> pure IssuingCardSpendingLimitCategoriesEnumTimeshares
    "tire_retreading_and_repair" -> pure IssuingCardSpendingLimitCategoriesEnumTireRetreadingAndRepair
    "tolls_bridge_fees" -> pure IssuingCardSpendingLimitCategoriesEnumTollsBridgeFees
    "tourist_attractions_and_exhibits" -> pure IssuingCardSpendingLimitCategoriesEnumTouristAttractionsAndExhibits
    "towing_services" -> pure IssuingCardSpendingLimitCategoriesEnumTowingServices
    "trailer_parks_campgrounds" -> pure IssuingCardSpendingLimitCategoriesEnumTrailerParksCampgrounds
    "transportation_services" -> pure IssuingCardSpendingLimitCategoriesEnumTransportationServices
    "travel_agencies_tour_operators" -> pure IssuingCardSpendingLimitCategoriesEnumTravelAgenciesTourOperators
    "truck_stop_iteration" -> pure IssuingCardSpendingLimitCategoriesEnumTruckStopIteration
    "truck_utility_trailer_rentals" -> pure IssuingCardSpendingLimitCategoriesEnumTruckUtilityTrailerRentals
    "typesetting_plate_making_and_related_services" -> pure IssuingCardSpendingLimitCategoriesEnumTypesettingPlateMakingAndRelatedServices
    "typewriter_stores" -> pure IssuingCardSpendingLimitCategoriesEnumTypewriterStores
    "u_s_federal_government_agencies_or_departments" -> pure IssuingCardSpendingLimitCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
    "uniforms_commercial_clothing" -> pure IssuingCardSpendingLimitCategoriesEnumUniformsCommercialClothing
    "used_merchandise_and_secondhand_stores" -> pure IssuingCardSpendingLimitCategoriesEnumUsedMerchandiseAndSecondhandStores
    "utilities" -> pure IssuingCardSpendingLimitCategoriesEnumUtilities
    "variety_stores" -> pure IssuingCardSpendingLimitCategoriesEnumVarietyStores
    "veterinary_services" -> pure IssuingCardSpendingLimitCategoriesEnumVeterinaryServices
    "video_amusement_game_supplies" -> pure IssuingCardSpendingLimitCategoriesEnumVideoAmusementGameSupplies
    "video_game_arcades" -> pure IssuingCardSpendingLimitCategoriesEnumVideoGameArcades
    "video_tape_rental_stores" -> pure IssuingCardSpendingLimitCategoriesEnumVideoTapeRentalStores
    "vocational_trade_schools" -> pure IssuingCardSpendingLimitCategoriesEnumVocationalTradeSchools
    "watch_jewelry_repair" -> pure IssuingCardSpendingLimitCategoriesEnumWatchJewelryRepair
    "welding_repair" -> pure IssuingCardSpendingLimitCategoriesEnumWeldingRepair
    "wholesale_clubs" -> pure IssuingCardSpendingLimitCategoriesEnumWholesaleClubs
    "wig_and_toupee_stores" -> pure IssuingCardSpendingLimitCategoriesEnumWigAndToupeeStores
    "wires_money_orders" -> pure IssuingCardSpendingLimitCategoriesEnumWiresMoneyOrders
    "womens_accessory_and_specialty_shops" -> pure IssuingCardSpendingLimitCategoriesEnumWomensAccessoryAndSpecialtyShops
    "womens_ready_to_wear_stores" -> pure IssuingCardSpendingLimitCategoriesEnumWomensReadyToWearStores
    "wrecking_and_salvage_yards" -> pure IssuingCardSpendingLimitCategoriesEnumWreckingAndSalvageYards
    str -> fail (show str <> " is not a known valid option for IssuingCardSpendingLimitCategoriesEnum")

data IssuingCardSpendingLimitIntervalEnum
  = IssuingCardSpendingLimitIntervalEnumAllTime
  | IssuingCardSpendingLimitIntervalEnumDaily
  | IssuingCardSpendingLimitIntervalEnumMonthly
  | IssuingCardSpendingLimitIntervalEnumPerAuthorization
  | IssuingCardSpendingLimitIntervalEnumWeekly
  | IssuingCardSpendingLimitIntervalEnumYearly
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardSpendingLimitIntervalEnum where
  toJSON e = String $ case e of
    IssuingCardSpendingLimitIntervalEnumAllTime -> "all_time"
    IssuingCardSpendingLimitIntervalEnumDaily -> "daily"
    IssuingCardSpendingLimitIntervalEnumMonthly -> "monthly"
    IssuingCardSpendingLimitIntervalEnumPerAuthorization -> "per_authorization"
    IssuingCardSpendingLimitIntervalEnumWeekly -> "weekly"
    IssuingCardSpendingLimitIntervalEnumYearly -> "yearly"

instance FromJSON IssuingCardSpendingLimitIntervalEnum where
  parseJSON = withText "IssuingCardSpendingLimitIntervalEnum" $ \case
    "all_time" -> pure IssuingCardSpendingLimitIntervalEnumAllTime
    "daily" -> pure IssuingCardSpendingLimitIntervalEnumDaily
    "monthly" -> pure IssuingCardSpendingLimitIntervalEnumMonthly
    "per_authorization" -> pure IssuingCardSpendingLimitIntervalEnumPerAuthorization
    "weekly" -> pure IssuingCardSpendingLimitIntervalEnumWeekly
    "yearly" -> pure IssuingCardSpendingLimitIntervalEnumYearly
    str -> fail (show str <> " is not a known valid option for IssuingCardSpendingLimitIntervalEnum")

data IssuingCardStatusEnum
  = IssuingCardStatusEnumActive
  | IssuingCardStatusEnumCanceled
  | IssuingCardStatusEnumInactive
  | IssuingCardStatusEnumLost
  | IssuingCardStatusEnumPending
  | IssuingCardStatusEnumStolen
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardStatusEnum where
  toJSON e = String $ case e of
    IssuingCardStatusEnumActive -> "active"
    IssuingCardStatusEnumCanceled -> "canceled"
    IssuingCardStatusEnumInactive -> "inactive"
    IssuingCardStatusEnumLost -> "lost"
    IssuingCardStatusEnumPending -> "pending"
    IssuingCardStatusEnumStolen -> "stolen"

instance FromJSON IssuingCardStatusEnum where
  parseJSON = withText "IssuingCardStatusEnum" $ \case
    "active" -> pure IssuingCardStatusEnumActive
    "canceled" -> pure IssuingCardStatusEnumCanceled
    "inactive" -> pure IssuingCardStatusEnumInactive
    "lost" -> pure IssuingCardStatusEnumLost
    "pending" -> pure IssuingCardStatusEnumPending
    "stolen" -> pure IssuingCardStatusEnumStolen
    str -> fail (show str <> " is not a known valid option for IssuingCardStatusEnum")

data IssuingCardTypeEnum
  = IssuingCardTypeEnumVirtual
  | IssuingCardTypeEnumPhysical
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardTypeEnum where
  toJSON e = String $ case e of
    IssuingCardTypeEnumVirtual -> "virtual"
    IssuingCardTypeEnumPhysical -> "physical"

instance FromJSON IssuingCardTypeEnum where
  parseJSON = withText "IssuingCardTypeEnum" $ \case
    "virtual" -> pure IssuingCardTypeEnumVirtual
    "physical" -> pure IssuingCardTypeEnumPhysical
    str -> fail (show str <> " is not a known valid option for IssuingCardTypeEnum")

data IssuingCardholderAuthorizationControlsAllowedCategoriesEnum
  = IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAcRefrigerationRepair
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAccountingBookkeepingServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAdvertisingServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAgriculturalCooperative
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAirlinesAirCarriers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAirportsFlyingFields
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAmbulanceServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAmusementParksCarnivals
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAntiqueReproductions
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAntiqueShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAquariums
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumArchitecturalSurveyingServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumArtDealersAndGalleries
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumArtistsSupplyAndCraftShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoAndHomeSupplyStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoBodyRepairShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoPaintShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoServiceShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomatedCashDisburse
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomatedFuelDispensers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomobileAssociations
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomotivePartsAndAccessoriesStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomotiveTireStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBailAndBondPayments
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBakeries
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBandsOrchestras
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBarberAndBeautyShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBettingCasinoGambling
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBicycleShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBilliardPoolEstablishments
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBoatDealers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBoatRentalsAndLeases
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBookStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBooksPeriodicalsAndNewspapers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBowlingAlleys
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBusLines
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBusinessSecretarialSchools
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBuyingShoppingServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCameraAndPhotographicSupplyStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCandyNutAndConfectioneryStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersNewUsed
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersUsedOnly
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarRentalAgencies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarWashes
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarpentryServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarpetUpholsteryCleaning
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCaterers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChemicalsAndAlliedProducts
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChidrensAndInfantsWearStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChildCareServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChiropodistsPodiatrists
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChiropractors
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCigarStoresAndStands
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCivicSocialFraternalAssociations
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCleaningAndMaintenance
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumClothingRental
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCollegesUniversities
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommercialEquipment
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommercialFootwear
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommercialPhotographyArtAndGraphics
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommuterTransportAndFerries
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerNetworkServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerProgramming
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerRepair
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerSoftwareStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputersPeripheralsAndSoftware
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumConcreteWorkServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumConstructionMaterials
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumConsultingPublicRelations
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCorrespondenceSchools
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCosmeticStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCounselingServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCountryClubs
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCourierServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCourtCosts
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCreditReportingAgencies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCruiseLines
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDairyProductsStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDanceHallStudiosSchools
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDatingEscortServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDentistsOrthodontists
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDepartmentStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDetectiveAgencies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDigitalGoodsApplications
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingCatalogMerchant
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingInboundTelemarketing
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingInsuranceServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingOther
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingOutboundTelemarketing
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingSubscription
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingTravel
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDiscountStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDoctors
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDoorToDoorSales
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDrinkingPlaces
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDrugStoresAndPharmacies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDryCleaners
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDurableGoods
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDutyFreeStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEatingPlacesRestaurants
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEducationalServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectricRazorStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectricalPartsAndEquipment
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectricalServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectronicsRepairShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectronicsStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElementarySecondarySchools
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEmploymentTempAgencies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEquipmentRental
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumExterminatingServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFamilyClothingStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFastFoodRestaurants
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFinancialInstitutions
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFinesGovernmentAdministrativeEntities
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFloorCoveringStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFlorists
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFreezerAndLockerMeatProvisioners
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFuelDealersNonAutomotive
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFuneralServicesCrematories
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFurnitureRepairRefinishing
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFurriersAndFurShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGeneralServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGiftCardNoveltyAndSouvenirShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGlassPaintAndWallpaperStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGlasswareCrystalStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGolfCoursesPublic
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGovernmentServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGroceryStoresSupermarkets
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHardwareEquipmentAndSupplies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHardwareStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHealthAndBeautySpas
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHearingAidsSalesAndSupplies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHeatingPlumbingAC
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHobbyToyAndGameShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHomeSupplyWarehouseStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHospitals
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHotelsMotelsAndResorts
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHouseholdApplianceStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumIndustrialSupplies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumInformationRetrievalServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumInsuranceDefault
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumInsuranceUnderwritingPremiums
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumIntraCompanyPurchases
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLandscapingServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLaundries
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLaundryCleaningServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLegalServicesAttorneys
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLuggageAndLeatherGoodsStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLumberBuildingMaterialsStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumManualCashDisburse
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMarinasServiceAndSupplies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMasonryStoneworkAndPlaster
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMassageParlors
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMedicalAndDentalLabs
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMedicalServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMembershipOrganizations
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMensAndBoysClothingAndAccessoriesStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMensWomensClothingStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMetalServiceCenters
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneous
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousApparelAndAccessoryShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousAutoDealers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousBusinessServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousFoodStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralMerchandise
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousPublishingAndPrinting
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousRecreationServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousRepairShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousSpecialtyRetail
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMobileHomeDealers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotionPictureTheaters
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorFreightCarriersAndTrucking
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorHomesDealers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorVehicleSuppliesAndNewParts
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsAndDealers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsDealers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNewsDealersAndNewsstands
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNonFiMoneyOrders
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNonFiStoredValueCardPurchaseLoad
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNondurableGoods
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNurseriesLawnAndGardenSupplyStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNursingPersonalCare
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOfficeAndCommercialFurniture
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOpticiansEyeglasses
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOptometristsOphthalmologist
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOrthopedicGoodsProstheticDevices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOsteopaths
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPackageStoresBeerWineAndLiquor
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPaintsVarnishesAndSupplies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumParkingLotsGarages
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPassengerRailways
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPawnShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPetShopsPetFoodAndSupplies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPetroleumAndPetroleumProducts
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPhotoDeveloping
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPhotographicStudios
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPictureVideoProduction
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPlumbingHeatingEquipmentAndSupplies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPoliticalOrganizations
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPostalServicesGovernmentOnly
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumProfessionalServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPublicWarehousingAndStorage
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumQuickCopyReproAndBlueprint
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRailroads
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRealEstateAgentsAndManagersRentals
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRecordStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRecreationalVehicleRentals
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumReligiousGoodsStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumReligiousOrganizations
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRoofingSidingSheetMetal
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSecretarialSupportServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSecurityBrokersDealers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumServiceStations
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumShoeRepairHatCleaning
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumShoeStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSmallApplianceRepair
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSnowmobileDealers
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSpecialTradeServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSpecialtyCleaning
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportingGoodsStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportingRecreationCamps
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportsAndRidingApparelStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportsClubsFields
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumStampAndCoinStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSwimmingPoolsSales
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTUiTravelGermany
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTailorsAlterations
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTaxPaymentsGovernmentAgencies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTaxPreparationServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTaxicabsLimousines
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTelecommunicationServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTelegraphServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTentAndAwningShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTestingLaboratories
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTheatricalTicketAgencies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTimeshares
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTireRetreadingAndRepair
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTollsBridgeFees
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTouristAttractionsAndExhibits
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTowingServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTrailerParksCampgrounds
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTransportationServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTravelAgenciesTourOperators
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTruckStopIteration
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTruckUtilityTrailerRentals
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTypesettingPlateMakingAndRelatedServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTypewriterStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUniformsCommercialClothing
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUsedMerchandiseAndSecondhandStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUtilities
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVarietyStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVeterinaryServices
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVideoAmusementGameSupplies
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVideoGameArcades
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVideoTapeRentalStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVocationalTradeSchools
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWatchJewelryRepair
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWeldingRepair
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWholesaleClubs
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWigAndToupeeStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWiresMoneyOrders
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWomensAccessoryAndSpecialtyShops
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWomensReadyToWearStores
  | IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWreckingAndSalvageYards
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardholderAuthorizationControlsAllowedCategoriesEnum where
  toJSON e = String $ case e of
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAcRefrigerationRepair -> "ac_refrigeration_repair"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAccountingBookkeepingServices -> "accounting_bookkeeping_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAdvertisingServices -> "advertising_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAgriculturalCooperative -> "agricultural_cooperative"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAirlinesAirCarriers -> "airlines_air_carriers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAirportsFlyingFields -> "airports_flying_fields"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAmbulanceServices -> "ambulance_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAmusementParksCarnivals -> "amusement_parks_carnivals"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAntiqueReproductions -> "antique_reproductions"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAntiqueShops -> "antique_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAquariums -> "aquariums"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumArchitecturalSurveyingServices -> "architectural_surveying_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumArtDealersAndGalleries -> "art_dealers_and_galleries"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumArtistsSupplyAndCraftShops -> "artists_supply_and_craft_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoAndHomeSupplyStores -> "auto_and_home_supply_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoBodyRepairShops -> "auto_body_repair_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoPaintShops -> "auto_paint_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoServiceShops -> "auto_service_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomatedCashDisburse -> "automated_cash_disburse"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomatedFuelDispensers -> "automated_fuel_dispensers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomobileAssociations -> "automobile_associations"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomotivePartsAndAccessoriesStores -> "automotive_parts_and_accessories_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomotiveTireStores -> "automotive_tire_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBailAndBondPayments -> "bail_and_bond_payments"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBakeries -> "bakeries"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBandsOrchestras -> "bands_orchestras"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBarberAndBeautyShops -> "barber_and_beauty_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBettingCasinoGambling -> "betting_casino_gambling"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBicycleShops -> "bicycle_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBilliardPoolEstablishments -> "billiard_pool_establishments"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBoatDealers -> "boat_dealers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBoatRentalsAndLeases -> "boat_rentals_and_leases"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBookStores -> "book_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBooksPeriodicalsAndNewspapers -> "books_periodicals_and_newspapers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBowlingAlleys -> "bowling_alleys"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBusLines -> "bus_lines"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBusinessSecretarialSchools -> "business_secretarial_schools"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBuyingShoppingServices -> "buying_shopping_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio -> "cable_satellite_and_other_pay_television_and_radio"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCameraAndPhotographicSupplyStores -> "camera_and_photographic_supply_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCandyNutAndConfectioneryStores -> "candy_nut_and_confectionery_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersNewUsed -> "car_and_truck_dealers_new_used"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersUsedOnly -> "car_and_truck_dealers_used_only"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarRentalAgencies -> "car_rental_agencies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarWashes -> "car_washes"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarpentryServices -> "carpentry_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarpetUpholsteryCleaning -> "carpet_upholstery_cleaning"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCaterers -> "caterers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising -> "charitable_and_social_service_organizations_fundraising"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChemicalsAndAlliedProducts -> "chemicals_and_allied_products"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChidrensAndInfantsWearStores -> "chidrens_and_infants_wear_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChildCareServices -> "child_care_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChiropodistsPodiatrists -> "chiropodists_podiatrists"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChiropractors -> "chiropractors"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCigarStoresAndStands -> "cigar_stores_and_stands"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCivicSocialFraternalAssociations -> "civic_social_fraternal_associations"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCleaningAndMaintenance -> "cleaning_and_maintenance"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumClothingRental -> "clothing_rental"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCollegesUniversities -> "colleges_universities"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommercialEquipment -> "commercial_equipment"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommercialFootwear -> "commercial_footwear"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommercialPhotographyArtAndGraphics -> "commercial_photography_art_and_graphics"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommuterTransportAndFerries -> "commuter_transport_and_ferries"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerNetworkServices -> "computer_network_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerProgramming -> "computer_programming"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerRepair -> "computer_repair"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerSoftwareStores -> "computer_software_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputersPeripheralsAndSoftware -> "computers_peripherals_and_software"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumConcreteWorkServices -> "concrete_work_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumConstructionMaterials -> "construction_materials"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumConsultingPublicRelations -> "consulting_public_relations"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCorrespondenceSchools -> "correspondence_schools"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCosmeticStores -> "cosmetic_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCounselingServices -> "counseling_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCountryClubs -> "country_clubs"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCourierServices -> "courier_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCourtCosts -> "court_costs"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCreditReportingAgencies -> "credit_reporting_agencies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCruiseLines -> "cruise_lines"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDairyProductsStores -> "dairy_products_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDanceHallStudiosSchools -> "dance_hall_studios_schools"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDatingEscortServices -> "dating_escort_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDentistsOrthodontists -> "dentists_orthodontists"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDepartmentStores -> "department_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDetectiveAgencies -> "detective_agencies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDigitalGoodsApplications -> "digital_goods_applications"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingCatalogMerchant -> "direct_marketing_catalog_merchant"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant -> "direct_marketing_combination_catalog_and_retail_merchant"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingInboundTelemarketing -> "direct_marketing_inbound_telemarketing"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingInsuranceServices -> "direct_marketing_insurance_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingOther -> "direct_marketing_other"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingOutboundTelemarketing -> "direct_marketing_outbound_telemarketing"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingSubscription -> "direct_marketing_subscription"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingTravel -> "direct_marketing_travel"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDiscountStores -> "discount_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDoctors -> "doctors"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDoorToDoorSales -> "door_to_door_sales"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores -> "drapery_window_covering_and_upholstery_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDrinkingPlaces -> "drinking_places"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDrugStoresAndPharmacies -> "drug_stores_and_pharmacies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries -> "drugs_drug_proprietaries_and_druggist_sundries"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDryCleaners -> "dry_cleaners"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDurableGoods -> "durable_goods"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDutyFreeStores -> "duty_free_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEatingPlacesRestaurants -> "eating_places_restaurants"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEducationalServices -> "educational_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectricRazorStores -> "electric_razor_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectricalPartsAndEquipment -> "electrical_parts_and_equipment"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectricalServices -> "electrical_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectronicsRepairShops -> "electronics_repair_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectronicsStores -> "electronics_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElementarySecondarySchools -> "elementary_secondary_schools"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEmploymentTempAgencies -> "employment_temp_agencies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEquipmentRental -> "equipment_rental"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumExterminatingServices -> "exterminating_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFamilyClothingStores -> "family_clothing_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFastFoodRestaurants -> "fast_food_restaurants"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFinancialInstitutions -> "financial_institutions"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFinesGovernmentAdministrativeEntities -> "fines_government_administrative_entities"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores -> "fireplace_fireplace_screens_and_accessories_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFloorCoveringStores -> "floor_covering_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFlorists -> "florists"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers -> "florists_supplies_nursery_stock_and_flowers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFreezerAndLockerMeatProvisioners -> "freezer_and_locker_meat_provisioners"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFuelDealersNonAutomotive -> "fuel_dealers_non_automotive"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFuneralServicesCrematories -> "funeral_services_crematories"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances -> "furniture_home_furnishings_and_equipment_stores_except_appliances"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFurnitureRepairRefinishing -> "furniture_repair_refinishing"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFurriersAndFurShops -> "furriers_and_fur_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGeneralServices -> "general_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGiftCardNoveltyAndSouvenirShops -> "gift_card_novelty_and_souvenir_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGlassPaintAndWallpaperStores -> "glass_paint_and_wallpaper_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGlasswareCrystalStores -> "glassware_crystal_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGolfCoursesPublic -> "golf_courses_public"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGovernmentServices -> "government_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGroceryStoresSupermarkets -> "grocery_stores_supermarkets"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHardwareEquipmentAndSupplies -> "hardware_equipment_and_supplies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHardwareStores -> "hardware_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHealthAndBeautySpas -> "health_and_beauty_spas"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHearingAidsSalesAndSupplies -> "hearing_aids_sales_and_supplies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHeatingPlumbingAC -> "heating_plumbing_a_c"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHobbyToyAndGameShops -> "hobby_toy_and_game_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHomeSupplyWarehouseStores -> "home_supply_warehouse_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHospitals -> "hospitals"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHotelsMotelsAndResorts -> "hotels_motels_and_resorts"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHouseholdApplianceStores -> "household_appliance_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumIndustrialSupplies -> "industrial_supplies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumInformationRetrievalServices -> "information_retrieval_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumInsuranceDefault -> "insurance_default"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumInsuranceUnderwritingPremiums -> "insurance_underwriting_premiums"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumIntraCompanyPurchases -> "intra_company_purchases"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores -> "jewelry_stores_watches_clocks_and_silverware_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLandscapingServices -> "landscaping_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLaundries -> "laundries"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLaundryCleaningServices -> "laundry_cleaning_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLegalServicesAttorneys -> "legal_services_attorneys"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLuggageAndLeatherGoodsStores -> "luggage_and_leather_goods_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLumberBuildingMaterialsStores -> "lumber_building_materials_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumManualCashDisburse -> "manual_cash_disburse"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMarinasServiceAndSupplies -> "marinas_service_and_supplies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMasonryStoneworkAndPlaster -> "masonry_stonework_and_plaster"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMassageParlors -> "massage_parlors"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMedicalAndDentalLabs -> "medical_and_dental_labs"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies -> "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMedicalServices -> "medical_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMembershipOrganizations -> "membership_organizations"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMensAndBoysClothingAndAccessoriesStores -> "mens_and_boys_clothing_and_accessories_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMensWomensClothingStores -> "mens_womens_clothing_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMetalServiceCenters -> "metal_service_centers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneous -> "miscellaneous"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousApparelAndAccessoryShops -> "miscellaneous_apparel_and_accessory_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousAutoDealers -> "miscellaneous_auto_dealers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousBusinessServices -> "miscellaneous_business_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousFoodStores -> "miscellaneous_food_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralMerchandise -> "miscellaneous_general_merchandise"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralServices -> "miscellaneous_general_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores -> "miscellaneous_home_furnishing_specialty_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousPublishingAndPrinting -> "miscellaneous_publishing_and_printing"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousRecreationServices -> "miscellaneous_recreation_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousRepairShops -> "miscellaneous_repair_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousSpecialtyRetail -> "miscellaneous_specialty_retail"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMobileHomeDealers -> "mobile_home_dealers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotionPictureTheaters -> "motion_picture_theaters"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorFreightCarriersAndTrucking -> "motor_freight_carriers_and_trucking"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorHomesDealers -> "motor_homes_dealers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorVehicleSuppliesAndNewParts -> "motor_vehicle_supplies_and_new_parts"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsAndDealers -> "motorcycle_shops_and_dealers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsDealers -> "motorcycle_shops_dealers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic -> "music_stores_musical_instruments_pianos_and_sheet_music"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNewsDealersAndNewsstands -> "news_dealers_and_newsstands"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNonFiMoneyOrders -> "non_fi_money_orders"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNonFiStoredValueCardPurchaseLoad -> "non_fi_stored_value_card_purchase_load"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNondurableGoods -> "nondurable_goods"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNurseriesLawnAndGardenSupplyStores -> "nurseries_lawn_and_garden_supply_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNursingPersonalCare -> "nursing_personal_care"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOfficeAndCommercialFurniture -> "office_and_commercial_furniture"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOpticiansEyeglasses -> "opticians_eyeglasses"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOptometristsOphthalmologist -> "optometrists_ophthalmologist"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOrthopedicGoodsProstheticDevices -> "orthopedic_goods_prosthetic_devices"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOsteopaths -> "osteopaths"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPackageStoresBeerWineAndLiquor -> "package_stores_beer_wine_and_liquor"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPaintsVarnishesAndSupplies -> "paints_varnishes_and_supplies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumParkingLotsGarages -> "parking_lots_garages"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPassengerRailways -> "passenger_railways"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPawnShops -> "pawn_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPetShopsPetFoodAndSupplies -> "pet_shops_pet_food_and_supplies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPetroleumAndPetroleumProducts -> "petroleum_and_petroleum_products"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPhotoDeveloping -> "photo_developing"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies -> "photographic_photocopy_microfilm_equipment_and_supplies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPhotographicStudios -> "photographic_studios"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPictureVideoProduction -> "picture_video_production"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods -> "piece_goods_notions_and_other_dry_goods"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPlumbingHeatingEquipmentAndSupplies -> "plumbing_heating_equipment_and_supplies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPoliticalOrganizations -> "political_organizations"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPostalServicesGovernmentOnly -> "postal_services_government_only"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry -> "precious_stones_and_metals_watches_and_jewelry"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumProfessionalServices -> "professional_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPublicWarehousingAndStorage -> "public_warehousing_and_storage"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumQuickCopyReproAndBlueprint -> "quick_copy_repro_and_blueprint"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRailroads -> "railroads"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRealEstateAgentsAndManagersRentals -> "real_estate_agents_and_managers_rentals"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRecordStores -> "record_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRecreationalVehicleRentals -> "recreational_vehicle_rentals"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumReligiousGoodsStores -> "religious_goods_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumReligiousOrganizations -> "religious_organizations"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRoofingSidingSheetMetal -> "roofing_siding_sheet_metal"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSecretarialSupportServices -> "secretarial_support_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSecurityBrokersDealers -> "security_brokers_dealers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumServiceStations -> "service_stations"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores -> "sewing_needlework_fabric_and_piece_goods_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumShoeRepairHatCleaning -> "shoe_repair_hat_cleaning"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumShoeStores -> "shoe_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSmallApplianceRepair -> "small_appliance_repair"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSnowmobileDealers -> "snowmobile_dealers"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSpecialTradeServices -> "special_trade_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSpecialtyCleaning -> "specialty_cleaning"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportingGoodsStores -> "sporting_goods_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportingRecreationCamps -> "sporting_recreation_camps"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportsAndRidingApparelStores -> "sports_and_riding_apparel_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportsClubsFields -> "sports_clubs_fields"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumStampAndCoinStores -> "stamp_and_coin_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper -> "stationary_office_supplies_printing_and_writing_paper"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores -> "stationery_stores_office_and_school_supply_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSwimmingPoolsSales -> "swimming_pools_sales"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTUiTravelGermany -> "t_ui_travel_germany"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTailorsAlterations -> "tailors_alterations"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTaxPaymentsGovernmentAgencies -> "tax_payments_government_agencies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTaxPreparationServices -> "tax_preparation_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTaxicabsLimousines -> "taxicabs_limousines"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales -> "telecommunication_equipment_and_telephone_sales"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTelecommunicationServices -> "telecommunication_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTelegraphServices -> "telegraph_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTentAndAwningShops -> "tent_and_awning_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTestingLaboratories -> "testing_laboratories"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTheatricalTicketAgencies -> "theatrical_ticket_agencies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTimeshares -> "timeshares"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTireRetreadingAndRepair -> "tire_retreading_and_repair"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTollsBridgeFees -> "tolls_bridge_fees"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTouristAttractionsAndExhibits -> "tourist_attractions_and_exhibits"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTowingServices -> "towing_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTrailerParksCampgrounds -> "trailer_parks_campgrounds"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTransportationServices -> "transportation_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTravelAgenciesTourOperators -> "travel_agencies_tour_operators"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTruckStopIteration -> "truck_stop_iteration"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTruckUtilityTrailerRentals -> "truck_utility_trailer_rentals"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTypesettingPlateMakingAndRelatedServices -> "typesetting_plate_making_and_related_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTypewriterStores -> "typewriter_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments -> "u_s_federal_government_agencies_or_departments"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUniformsCommercialClothing -> "uniforms_commercial_clothing"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUsedMerchandiseAndSecondhandStores -> "used_merchandise_and_secondhand_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUtilities -> "utilities"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVarietyStores -> "variety_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVeterinaryServices -> "veterinary_services"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVideoAmusementGameSupplies -> "video_amusement_game_supplies"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVideoGameArcades -> "video_game_arcades"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVideoTapeRentalStores -> "video_tape_rental_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVocationalTradeSchools -> "vocational_trade_schools"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWatchJewelryRepair -> "watch_jewelry_repair"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWeldingRepair -> "welding_repair"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWholesaleClubs -> "wholesale_clubs"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWigAndToupeeStores -> "wig_and_toupee_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWiresMoneyOrders -> "wires_money_orders"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWomensAccessoryAndSpecialtyShops -> "womens_accessory_and_specialty_shops"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWomensReadyToWearStores -> "womens_ready_to_wear_stores"
    IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWreckingAndSalvageYards -> "wrecking_and_salvage_yards"

instance FromJSON IssuingCardholderAuthorizationControlsAllowedCategoriesEnum where
  parseJSON = withText "IssuingCardholderAuthorizationControlsAllowedCategoriesEnum" $ \case
    "ac_refrigeration_repair" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAcRefrigerationRepair
    "accounting_bookkeeping_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAccountingBookkeepingServices
    "advertising_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAdvertisingServices
    "agricultural_cooperative" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAgriculturalCooperative
    "airlines_air_carriers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAirlinesAirCarriers
    "airports_flying_fields" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAirportsFlyingFields
    "ambulance_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAmbulanceServices
    "amusement_parks_carnivals" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAmusementParksCarnivals
    "antique_reproductions" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAntiqueReproductions
    "antique_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAntiqueShops
    "aquariums" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAquariums
    "architectural_surveying_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumArchitecturalSurveyingServices
    "art_dealers_and_galleries" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumArtDealersAndGalleries
    "artists_supply_and_craft_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumArtistsSupplyAndCraftShops
    "auto_and_home_supply_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoAndHomeSupplyStores
    "auto_body_repair_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoBodyRepairShops
    "auto_paint_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoPaintShops
    "auto_service_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutoServiceShops
    "automated_cash_disburse" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomatedCashDisburse
    "automated_fuel_dispensers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomatedFuelDispensers
    "automobile_associations" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomobileAssociations
    "automotive_parts_and_accessories_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomotivePartsAndAccessoriesStores
    "automotive_tire_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumAutomotiveTireStores
    "bail_and_bond_payments" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBailAndBondPayments
    "bakeries" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBakeries
    "bands_orchestras" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBandsOrchestras
    "barber_and_beauty_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBarberAndBeautyShops
    "betting_casino_gambling" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBettingCasinoGambling
    "bicycle_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBicycleShops
    "billiard_pool_establishments" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBilliardPoolEstablishments
    "boat_dealers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBoatDealers
    "boat_rentals_and_leases" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBoatRentalsAndLeases
    "book_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBookStores
    "books_periodicals_and_newspapers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBooksPeriodicalsAndNewspapers
    "bowling_alleys" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBowlingAlleys
    "bus_lines" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBusLines
    "business_secretarial_schools" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBusinessSecretarialSchools
    "buying_shopping_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumBuyingShoppingServices
    "cable_satellite_and_other_pay_television_and_radio" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
    "camera_and_photographic_supply_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCameraAndPhotographicSupplyStores
    "candy_nut_and_confectionery_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCandyNutAndConfectioneryStores
    "car_and_truck_dealers_new_used" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersNewUsed
    "car_and_truck_dealers_used_only" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarAndTruckDealersUsedOnly
    "car_rental_agencies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarRentalAgencies
    "car_washes" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarWashes
    "carpentry_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarpentryServices
    "carpet_upholstery_cleaning" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCarpetUpholsteryCleaning
    "caterers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCaterers
    "charitable_and_social_service_organizations_fundraising" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
    "chemicals_and_allied_products" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChemicalsAndAlliedProducts
    "chidrens_and_infants_wear_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChidrensAndInfantsWearStores
    "child_care_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChildCareServices
    "chiropodists_podiatrists" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChiropodistsPodiatrists
    "chiropractors" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumChiropractors
    "cigar_stores_and_stands" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCigarStoresAndStands
    "civic_social_fraternal_associations" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCivicSocialFraternalAssociations
    "cleaning_and_maintenance" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCleaningAndMaintenance
    "clothing_rental" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumClothingRental
    "colleges_universities" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCollegesUniversities
    "commercial_equipment" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommercialEquipment
    "commercial_footwear" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommercialFootwear
    "commercial_photography_art_and_graphics" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommercialPhotographyArtAndGraphics
    "commuter_transport_and_ferries" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCommuterTransportAndFerries
    "computer_network_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerNetworkServices
    "computer_programming" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerProgramming
    "computer_repair" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerRepair
    "computer_software_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputerSoftwareStores
    "computers_peripherals_and_software" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumComputersPeripheralsAndSoftware
    "concrete_work_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumConcreteWorkServices
    "construction_materials" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumConstructionMaterials
    "consulting_public_relations" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumConsultingPublicRelations
    "correspondence_schools" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCorrespondenceSchools
    "cosmetic_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCosmeticStores
    "counseling_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCounselingServices
    "country_clubs" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCountryClubs
    "courier_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCourierServices
    "court_costs" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCourtCosts
    "credit_reporting_agencies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCreditReportingAgencies
    "cruise_lines" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumCruiseLines
    "dairy_products_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDairyProductsStores
    "dance_hall_studios_schools" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDanceHallStudiosSchools
    "dating_escort_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDatingEscortServices
    "dentists_orthodontists" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDentistsOrthodontists
    "department_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDepartmentStores
    "detective_agencies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDetectiveAgencies
    "digital_goods_applications" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDigitalGoodsApplications
    "direct_marketing_catalog_merchant" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingCatalogMerchant
    "direct_marketing_combination_catalog_and_retail_merchant" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
    "direct_marketing_inbound_telemarketing" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingInboundTelemarketing
    "direct_marketing_insurance_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingInsuranceServices
    "direct_marketing_other" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingOther
    "direct_marketing_outbound_telemarketing" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingOutboundTelemarketing
    "direct_marketing_subscription" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingSubscription
    "direct_marketing_travel" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDirectMarketingTravel
    "discount_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDiscountStores
    "doctors" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDoctors
    "door_to_door_sales" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDoorToDoorSales
    "drapery_window_covering_and_upholstery_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
    "drinking_places" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDrinkingPlaces
    "drug_stores_and_pharmacies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDrugStoresAndPharmacies
    "drugs_drug_proprietaries_and_druggist_sundries" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
    "dry_cleaners" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDryCleaners
    "durable_goods" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDurableGoods
    "duty_free_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumDutyFreeStores
    "eating_places_restaurants" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEatingPlacesRestaurants
    "educational_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEducationalServices
    "electric_razor_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectricRazorStores
    "electrical_parts_and_equipment" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectricalPartsAndEquipment
    "electrical_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectricalServices
    "electronics_repair_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectronicsRepairShops
    "electronics_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElectronicsStores
    "elementary_secondary_schools" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumElementarySecondarySchools
    "employment_temp_agencies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEmploymentTempAgencies
    "equipment_rental" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumEquipmentRental
    "exterminating_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumExterminatingServices
    "family_clothing_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFamilyClothingStores
    "fast_food_restaurants" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFastFoodRestaurants
    "financial_institutions" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFinancialInstitutions
    "fines_government_administrative_entities" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFinesGovernmentAdministrativeEntities
    "fireplace_fireplace_screens_and_accessories_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
    "floor_covering_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFloorCoveringStores
    "florists" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFlorists
    "florists_supplies_nursery_stock_and_flowers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
    "freezer_and_locker_meat_provisioners" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFreezerAndLockerMeatProvisioners
    "fuel_dealers_non_automotive" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFuelDealersNonAutomotive
    "funeral_services_crematories" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFuneralServicesCrematories
    "furniture_home_furnishings_and_equipment_stores_except_appliances" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
    "furniture_repair_refinishing" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFurnitureRepairRefinishing
    "furriers_and_fur_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumFurriersAndFurShops
    "general_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGeneralServices
    "gift_card_novelty_and_souvenir_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGiftCardNoveltyAndSouvenirShops
    "glass_paint_and_wallpaper_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGlassPaintAndWallpaperStores
    "glassware_crystal_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGlasswareCrystalStores
    "golf_courses_public" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGolfCoursesPublic
    "government_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGovernmentServices
    "grocery_stores_supermarkets" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumGroceryStoresSupermarkets
    "hardware_equipment_and_supplies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHardwareEquipmentAndSupplies
    "hardware_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHardwareStores
    "health_and_beauty_spas" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHealthAndBeautySpas
    "hearing_aids_sales_and_supplies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHearingAidsSalesAndSupplies
    "heating_plumbing_a_c" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHeatingPlumbingAC
    "hobby_toy_and_game_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHobbyToyAndGameShops
    "home_supply_warehouse_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHomeSupplyWarehouseStores
    "hospitals" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHospitals
    "hotels_motels_and_resorts" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHotelsMotelsAndResorts
    "household_appliance_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumHouseholdApplianceStores
    "industrial_supplies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumIndustrialSupplies
    "information_retrieval_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumInformationRetrievalServices
    "insurance_default" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumInsuranceDefault
    "insurance_underwriting_premiums" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumInsuranceUnderwritingPremiums
    "intra_company_purchases" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumIntraCompanyPurchases
    "jewelry_stores_watches_clocks_and_silverware_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
    "landscaping_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLandscapingServices
    "laundries" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLaundries
    "laundry_cleaning_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLaundryCleaningServices
    "legal_services_attorneys" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLegalServicesAttorneys
    "luggage_and_leather_goods_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLuggageAndLeatherGoodsStores
    "lumber_building_materials_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumLumberBuildingMaterialsStores
    "manual_cash_disburse" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumManualCashDisburse
    "marinas_service_and_supplies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMarinasServiceAndSupplies
    "masonry_stonework_and_plaster" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMasonryStoneworkAndPlaster
    "massage_parlors" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMassageParlors
    "medical_and_dental_labs" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMedicalAndDentalLabs
    "medical_dental_ophthalmic_and_hospital_equipment_and_supplies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
    "medical_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMedicalServices
    "membership_organizations" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMembershipOrganizations
    "mens_and_boys_clothing_and_accessories_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMensAndBoysClothingAndAccessoriesStores
    "mens_womens_clothing_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMensWomensClothingStores
    "metal_service_centers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMetalServiceCenters
    "miscellaneous" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneous
    "miscellaneous_apparel_and_accessory_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousApparelAndAccessoryShops
    "miscellaneous_auto_dealers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousAutoDealers
    "miscellaneous_business_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousBusinessServices
    "miscellaneous_food_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousFoodStores
    "miscellaneous_general_merchandise" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralMerchandise
    "miscellaneous_general_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousGeneralServices
    "miscellaneous_home_furnishing_specialty_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
    "miscellaneous_publishing_and_printing" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousPublishingAndPrinting
    "miscellaneous_recreation_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousRecreationServices
    "miscellaneous_repair_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousRepairShops
    "miscellaneous_specialty_retail" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMiscellaneousSpecialtyRetail
    "mobile_home_dealers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMobileHomeDealers
    "motion_picture_theaters" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotionPictureTheaters
    "motor_freight_carriers_and_trucking" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorFreightCarriersAndTrucking
    "motor_homes_dealers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorHomesDealers
    "motor_vehicle_supplies_and_new_parts" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorVehicleSuppliesAndNewParts
    "motorcycle_shops_and_dealers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsAndDealers
    "motorcycle_shops_dealers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMotorcycleShopsDealers
    "music_stores_musical_instruments_pianos_and_sheet_music" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
    "news_dealers_and_newsstands" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNewsDealersAndNewsstands
    "non_fi_money_orders" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNonFiMoneyOrders
    "non_fi_stored_value_card_purchase_load" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNonFiStoredValueCardPurchaseLoad
    "nondurable_goods" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNondurableGoods
    "nurseries_lawn_and_garden_supply_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNurseriesLawnAndGardenSupplyStores
    "nursing_personal_care" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumNursingPersonalCare
    "office_and_commercial_furniture" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOfficeAndCommercialFurniture
    "opticians_eyeglasses" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOpticiansEyeglasses
    "optometrists_ophthalmologist" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOptometristsOphthalmologist
    "orthopedic_goods_prosthetic_devices" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOrthopedicGoodsProstheticDevices
    "osteopaths" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumOsteopaths
    "package_stores_beer_wine_and_liquor" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPackageStoresBeerWineAndLiquor
    "paints_varnishes_and_supplies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPaintsVarnishesAndSupplies
    "parking_lots_garages" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumParkingLotsGarages
    "passenger_railways" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPassengerRailways
    "pawn_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPawnShops
    "pet_shops_pet_food_and_supplies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPetShopsPetFoodAndSupplies
    "petroleum_and_petroleum_products" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPetroleumAndPetroleumProducts
    "photo_developing" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPhotoDeveloping
    "photographic_photocopy_microfilm_equipment_and_supplies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
    "photographic_studios" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPhotographicStudios
    "picture_video_production" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPictureVideoProduction
    "piece_goods_notions_and_other_dry_goods" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
    "plumbing_heating_equipment_and_supplies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPlumbingHeatingEquipmentAndSupplies
    "political_organizations" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPoliticalOrganizations
    "postal_services_government_only" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPostalServicesGovernmentOnly
    "precious_stones_and_metals_watches_and_jewelry" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
    "professional_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumProfessionalServices
    "public_warehousing_and_storage" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumPublicWarehousingAndStorage
    "quick_copy_repro_and_blueprint" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumQuickCopyReproAndBlueprint
    "railroads" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRailroads
    "real_estate_agents_and_managers_rentals" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRealEstateAgentsAndManagersRentals
    "record_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRecordStores
    "recreational_vehicle_rentals" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRecreationalVehicleRentals
    "religious_goods_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumReligiousGoodsStores
    "religious_organizations" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumReligiousOrganizations
    "roofing_siding_sheet_metal" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumRoofingSidingSheetMetal
    "secretarial_support_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSecretarialSupportServices
    "security_brokers_dealers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSecurityBrokersDealers
    "service_stations" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumServiceStations
    "sewing_needlework_fabric_and_piece_goods_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
    "shoe_repair_hat_cleaning" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumShoeRepairHatCleaning
    "shoe_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumShoeStores
    "small_appliance_repair" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSmallApplianceRepair
    "snowmobile_dealers" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSnowmobileDealers
    "special_trade_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSpecialTradeServices
    "specialty_cleaning" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSpecialtyCleaning
    "sporting_goods_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportingGoodsStores
    "sporting_recreation_camps" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportingRecreationCamps
    "sports_and_riding_apparel_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportsAndRidingApparelStores
    "sports_clubs_fields" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSportsClubsFields
    "stamp_and_coin_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumStampAndCoinStores
    "stationary_office_supplies_printing_and_writing_paper" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
    "stationery_stores_office_and_school_supply_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
    "swimming_pools_sales" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumSwimmingPoolsSales
    "t_ui_travel_germany" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTUiTravelGermany
    "tailors_alterations" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTailorsAlterations
    "tax_payments_government_agencies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTaxPaymentsGovernmentAgencies
    "tax_preparation_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTaxPreparationServices
    "taxicabs_limousines" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTaxicabsLimousines
    "telecommunication_equipment_and_telephone_sales" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
    "telecommunication_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTelecommunicationServices
    "telegraph_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTelegraphServices
    "tent_and_awning_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTentAndAwningShops
    "testing_laboratories" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTestingLaboratories
    "theatrical_ticket_agencies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTheatricalTicketAgencies
    "timeshares" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTimeshares
    "tire_retreading_and_repair" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTireRetreadingAndRepair
    "tolls_bridge_fees" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTollsBridgeFees
    "tourist_attractions_and_exhibits" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTouristAttractionsAndExhibits
    "towing_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTowingServices
    "trailer_parks_campgrounds" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTrailerParksCampgrounds
    "transportation_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTransportationServices
    "travel_agencies_tour_operators" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTravelAgenciesTourOperators
    "truck_stop_iteration" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTruckStopIteration
    "truck_utility_trailer_rentals" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTruckUtilityTrailerRentals
    "typesetting_plate_making_and_related_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTypesettingPlateMakingAndRelatedServices
    "typewriter_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumTypewriterStores
    "u_s_federal_government_agencies_or_departments" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
    "uniforms_commercial_clothing" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUniformsCommercialClothing
    "used_merchandise_and_secondhand_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUsedMerchandiseAndSecondhandStores
    "utilities" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumUtilities
    "variety_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVarietyStores
    "veterinary_services" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVeterinaryServices
    "video_amusement_game_supplies" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVideoAmusementGameSupplies
    "video_game_arcades" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVideoGameArcades
    "video_tape_rental_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVideoTapeRentalStores
    "vocational_trade_schools" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumVocationalTradeSchools
    "watch_jewelry_repair" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWatchJewelryRepair
    "welding_repair" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWeldingRepair
    "wholesale_clubs" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWholesaleClubs
    "wig_and_toupee_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWigAndToupeeStores
    "wires_money_orders" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWiresMoneyOrders
    "womens_accessory_and_specialty_shops" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWomensAccessoryAndSpecialtyShops
    "womens_ready_to_wear_stores" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWomensReadyToWearStores
    "wrecking_and_salvage_yards" -> pure IssuingCardholderAuthorizationControlsAllowedCategoriesEnumWreckingAndSalvageYards
    str -> fail (show str <> " is not a known valid option for IssuingCardholderAuthorizationControlsAllowedCategoriesEnum")

data IssuingCardholderAuthorizationControlsBlockedCategoriesEnum
  = IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAcRefrigerationRepair
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAccountingBookkeepingServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAdvertisingServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAgriculturalCooperative
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAirlinesAirCarriers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAirportsFlyingFields
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAmbulanceServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAmusementParksCarnivals
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAntiqueReproductions
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAntiqueShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAquariums
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumArchitecturalSurveyingServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumArtDealersAndGalleries
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumArtistsSupplyAndCraftShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoAndHomeSupplyStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoBodyRepairShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoPaintShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoServiceShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomatedCashDisburse
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomatedFuelDispensers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomobileAssociations
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomotivePartsAndAccessoriesStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomotiveTireStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBailAndBondPayments
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBakeries
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBandsOrchestras
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBarberAndBeautyShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBettingCasinoGambling
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBicycleShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBilliardPoolEstablishments
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBoatDealers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBoatRentalsAndLeases
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBookStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBooksPeriodicalsAndNewspapers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBowlingAlleys
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBusLines
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBusinessSecretarialSchools
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBuyingShoppingServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCameraAndPhotographicSupplyStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCandyNutAndConfectioneryStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersNewUsed
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersUsedOnly
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarRentalAgencies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarWashes
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarpentryServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarpetUpholsteryCleaning
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCaterers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChemicalsAndAlliedProducts
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChidrensAndInfantsWearStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChildCareServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChiropodistsPodiatrists
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChiropractors
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCigarStoresAndStands
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCivicSocialFraternalAssociations
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCleaningAndMaintenance
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumClothingRental
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCollegesUniversities
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommercialEquipment
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommercialFootwear
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommercialPhotographyArtAndGraphics
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommuterTransportAndFerries
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerNetworkServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerProgramming
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerRepair
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerSoftwareStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputersPeripheralsAndSoftware
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumConcreteWorkServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumConstructionMaterials
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumConsultingPublicRelations
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCorrespondenceSchools
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCosmeticStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCounselingServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCountryClubs
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCourierServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCourtCosts
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCreditReportingAgencies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCruiseLines
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDairyProductsStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDanceHallStudiosSchools
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDatingEscortServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDentistsOrthodontists
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDepartmentStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDetectiveAgencies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDigitalGoodsApplications
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingCatalogMerchant
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingInboundTelemarketing
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingInsuranceServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingOther
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingOutboundTelemarketing
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingSubscription
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingTravel
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDiscountStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDoctors
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDoorToDoorSales
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDrinkingPlaces
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDrugStoresAndPharmacies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDryCleaners
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDurableGoods
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDutyFreeStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEatingPlacesRestaurants
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEducationalServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectricRazorStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectricalPartsAndEquipment
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectricalServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectronicsRepairShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectronicsStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElementarySecondarySchools
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEmploymentTempAgencies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEquipmentRental
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumExterminatingServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFamilyClothingStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFastFoodRestaurants
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFinancialInstitutions
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFinesGovernmentAdministrativeEntities
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFloorCoveringStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFlorists
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFreezerAndLockerMeatProvisioners
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFuelDealersNonAutomotive
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFuneralServicesCrematories
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFurnitureRepairRefinishing
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFurriersAndFurShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGeneralServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGiftCardNoveltyAndSouvenirShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGlassPaintAndWallpaperStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGlasswareCrystalStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGolfCoursesPublic
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGovernmentServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGroceryStoresSupermarkets
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHardwareEquipmentAndSupplies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHardwareStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHealthAndBeautySpas
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHearingAidsSalesAndSupplies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHeatingPlumbingAC
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHobbyToyAndGameShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHomeSupplyWarehouseStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHospitals
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHotelsMotelsAndResorts
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHouseholdApplianceStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumIndustrialSupplies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumInformationRetrievalServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumInsuranceDefault
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumInsuranceUnderwritingPremiums
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumIntraCompanyPurchases
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLandscapingServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLaundries
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLaundryCleaningServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLegalServicesAttorneys
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLuggageAndLeatherGoodsStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLumberBuildingMaterialsStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumManualCashDisburse
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMarinasServiceAndSupplies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMasonryStoneworkAndPlaster
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMassageParlors
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMedicalAndDentalLabs
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMedicalServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMembershipOrganizations
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMensAndBoysClothingAndAccessoriesStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMensWomensClothingStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMetalServiceCenters
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneous
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousApparelAndAccessoryShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousAutoDealers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousBusinessServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousFoodStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralMerchandise
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousPublishingAndPrinting
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousRecreationServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousRepairShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousSpecialtyRetail
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMobileHomeDealers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotionPictureTheaters
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorFreightCarriersAndTrucking
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorHomesDealers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorVehicleSuppliesAndNewParts
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsAndDealers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsDealers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNewsDealersAndNewsstands
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNonFiMoneyOrders
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNonFiStoredValueCardPurchaseLoad
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNondurableGoods
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNurseriesLawnAndGardenSupplyStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNursingPersonalCare
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOfficeAndCommercialFurniture
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOpticiansEyeglasses
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOptometristsOphthalmologist
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOrthopedicGoodsProstheticDevices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOsteopaths
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPackageStoresBeerWineAndLiquor
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPaintsVarnishesAndSupplies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumParkingLotsGarages
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPassengerRailways
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPawnShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPetShopsPetFoodAndSupplies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPetroleumAndPetroleumProducts
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPhotoDeveloping
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPhotographicStudios
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPictureVideoProduction
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPlumbingHeatingEquipmentAndSupplies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPoliticalOrganizations
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPostalServicesGovernmentOnly
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumProfessionalServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPublicWarehousingAndStorage
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumQuickCopyReproAndBlueprint
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRailroads
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRealEstateAgentsAndManagersRentals
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRecordStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRecreationalVehicleRentals
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumReligiousGoodsStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumReligiousOrganizations
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRoofingSidingSheetMetal
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSecretarialSupportServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSecurityBrokersDealers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumServiceStations
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumShoeRepairHatCleaning
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumShoeStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSmallApplianceRepair
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSnowmobileDealers
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSpecialTradeServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSpecialtyCleaning
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportingGoodsStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportingRecreationCamps
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportsAndRidingApparelStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportsClubsFields
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumStampAndCoinStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSwimmingPoolsSales
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTUiTravelGermany
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTailorsAlterations
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTaxPaymentsGovernmentAgencies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTaxPreparationServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTaxicabsLimousines
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTelecommunicationServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTelegraphServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTentAndAwningShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTestingLaboratories
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTheatricalTicketAgencies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTimeshares
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTireRetreadingAndRepair
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTollsBridgeFees
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTouristAttractionsAndExhibits
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTowingServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTrailerParksCampgrounds
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTransportationServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTravelAgenciesTourOperators
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTruckStopIteration
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTruckUtilityTrailerRentals
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTypesettingPlateMakingAndRelatedServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTypewriterStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUniformsCommercialClothing
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUsedMerchandiseAndSecondhandStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUtilities
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVarietyStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVeterinaryServices
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVideoAmusementGameSupplies
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVideoGameArcades
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVideoTapeRentalStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVocationalTradeSchools
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWatchJewelryRepair
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWeldingRepair
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWholesaleClubs
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWigAndToupeeStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWiresMoneyOrders
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWomensAccessoryAndSpecialtyShops
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWomensReadyToWearStores
  | IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWreckingAndSalvageYards
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardholderAuthorizationControlsBlockedCategoriesEnum where
  toJSON e = String $ case e of
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAcRefrigerationRepair -> "ac_refrigeration_repair"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAccountingBookkeepingServices -> "accounting_bookkeeping_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAdvertisingServices -> "advertising_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAgriculturalCooperative -> "agricultural_cooperative"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAirlinesAirCarriers -> "airlines_air_carriers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAirportsFlyingFields -> "airports_flying_fields"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAmbulanceServices -> "ambulance_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAmusementParksCarnivals -> "amusement_parks_carnivals"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAntiqueReproductions -> "antique_reproductions"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAntiqueShops -> "antique_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAquariums -> "aquariums"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumArchitecturalSurveyingServices -> "architectural_surveying_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumArtDealersAndGalleries -> "art_dealers_and_galleries"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumArtistsSupplyAndCraftShops -> "artists_supply_and_craft_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoAndHomeSupplyStores -> "auto_and_home_supply_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoBodyRepairShops -> "auto_body_repair_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoPaintShops -> "auto_paint_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoServiceShops -> "auto_service_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomatedCashDisburse -> "automated_cash_disburse"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomatedFuelDispensers -> "automated_fuel_dispensers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomobileAssociations -> "automobile_associations"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomotivePartsAndAccessoriesStores -> "automotive_parts_and_accessories_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomotiveTireStores -> "automotive_tire_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBailAndBondPayments -> "bail_and_bond_payments"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBakeries -> "bakeries"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBandsOrchestras -> "bands_orchestras"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBarberAndBeautyShops -> "barber_and_beauty_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBettingCasinoGambling -> "betting_casino_gambling"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBicycleShops -> "bicycle_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBilliardPoolEstablishments -> "billiard_pool_establishments"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBoatDealers -> "boat_dealers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBoatRentalsAndLeases -> "boat_rentals_and_leases"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBookStores -> "book_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBooksPeriodicalsAndNewspapers -> "books_periodicals_and_newspapers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBowlingAlleys -> "bowling_alleys"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBusLines -> "bus_lines"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBusinessSecretarialSchools -> "business_secretarial_schools"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBuyingShoppingServices -> "buying_shopping_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio -> "cable_satellite_and_other_pay_television_and_radio"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCameraAndPhotographicSupplyStores -> "camera_and_photographic_supply_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCandyNutAndConfectioneryStores -> "candy_nut_and_confectionery_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersNewUsed -> "car_and_truck_dealers_new_used"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersUsedOnly -> "car_and_truck_dealers_used_only"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarRentalAgencies -> "car_rental_agencies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarWashes -> "car_washes"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarpentryServices -> "carpentry_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarpetUpholsteryCleaning -> "carpet_upholstery_cleaning"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCaterers -> "caterers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising -> "charitable_and_social_service_organizations_fundraising"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChemicalsAndAlliedProducts -> "chemicals_and_allied_products"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChidrensAndInfantsWearStores -> "chidrens_and_infants_wear_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChildCareServices -> "child_care_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChiropodistsPodiatrists -> "chiropodists_podiatrists"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChiropractors -> "chiropractors"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCigarStoresAndStands -> "cigar_stores_and_stands"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCivicSocialFraternalAssociations -> "civic_social_fraternal_associations"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCleaningAndMaintenance -> "cleaning_and_maintenance"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumClothingRental -> "clothing_rental"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCollegesUniversities -> "colleges_universities"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommercialEquipment -> "commercial_equipment"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommercialFootwear -> "commercial_footwear"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommercialPhotographyArtAndGraphics -> "commercial_photography_art_and_graphics"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommuterTransportAndFerries -> "commuter_transport_and_ferries"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerNetworkServices -> "computer_network_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerProgramming -> "computer_programming"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerRepair -> "computer_repair"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerSoftwareStores -> "computer_software_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputersPeripheralsAndSoftware -> "computers_peripherals_and_software"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumConcreteWorkServices -> "concrete_work_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumConstructionMaterials -> "construction_materials"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumConsultingPublicRelations -> "consulting_public_relations"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCorrespondenceSchools -> "correspondence_schools"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCosmeticStores -> "cosmetic_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCounselingServices -> "counseling_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCountryClubs -> "country_clubs"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCourierServices -> "courier_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCourtCosts -> "court_costs"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCreditReportingAgencies -> "credit_reporting_agencies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCruiseLines -> "cruise_lines"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDairyProductsStores -> "dairy_products_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDanceHallStudiosSchools -> "dance_hall_studios_schools"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDatingEscortServices -> "dating_escort_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDentistsOrthodontists -> "dentists_orthodontists"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDepartmentStores -> "department_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDetectiveAgencies -> "detective_agencies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDigitalGoodsApplications -> "digital_goods_applications"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingCatalogMerchant -> "direct_marketing_catalog_merchant"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant -> "direct_marketing_combination_catalog_and_retail_merchant"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingInboundTelemarketing -> "direct_marketing_inbound_telemarketing"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingInsuranceServices -> "direct_marketing_insurance_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingOther -> "direct_marketing_other"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingOutboundTelemarketing -> "direct_marketing_outbound_telemarketing"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingSubscription -> "direct_marketing_subscription"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingTravel -> "direct_marketing_travel"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDiscountStores -> "discount_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDoctors -> "doctors"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDoorToDoorSales -> "door_to_door_sales"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores -> "drapery_window_covering_and_upholstery_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDrinkingPlaces -> "drinking_places"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDrugStoresAndPharmacies -> "drug_stores_and_pharmacies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries -> "drugs_drug_proprietaries_and_druggist_sundries"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDryCleaners -> "dry_cleaners"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDurableGoods -> "durable_goods"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDutyFreeStores -> "duty_free_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEatingPlacesRestaurants -> "eating_places_restaurants"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEducationalServices -> "educational_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectricRazorStores -> "electric_razor_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectricalPartsAndEquipment -> "electrical_parts_and_equipment"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectricalServices -> "electrical_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectronicsRepairShops -> "electronics_repair_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectronicsStores -> "electronics_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElementarySecondarySchools -> "elementary_secondary_schools"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEmploymentTempAgencies -> "employment_temp_agencies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEquipmentRental -> "equipment_rental"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumExterminatingServices -> "exterminating_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFamilyClothingStores -> "family_clothing_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFastFoodRestaurants -> "fast_food_restaurants"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFinancialInstitutions -> "financial_institutions"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFinesGovernmentAdministrativeEntities -> "fines_government_administrative_entities"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores -> "fireplace_fireplace_screens_and_accessories_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFloorCoveringStores -> "floor_covering_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFlorists -> "florists"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers -> "florists_supplies_nursery_stock_and_flowers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFreezerAndLockerMeatProvisioners -> "freezer_and_locker_meat_provisioners"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFuelDealersNonAutomotive -> "fuel_dealers_non_automotive"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFuneralServicesCrematories -> "funeral_services_crematories"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances -> "furniture_home_furnishings_and_equipment_stores_except_appliances"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFurnitureRepairRefinishing -> "furniture_repair_refinishing"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFurriersAndFurShops -> "furriers_and_fur_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGeneralServices -> "general_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGiftCardNoveltyAndSouvenirShops -> "gift_card_novelty_and_souvenir_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGlassPaintAndWallpaperStores -> "glass_paint_and_wallpaper_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGlasswareCrystalStores -> "glassware_crystal_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGolfCoursesPublic -> "golf_courses_public"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGovernmentServices -> "government_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGroceryStoresSupermarkets -> "grocery_stores_supermarkets"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHardwareEquipmentAndSupplies -> "hardware_equipment_and_supplies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHardwareStores -> "hardware_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHealthAndBeautySpas -> "health_and_beauty_spas"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHearingAidsSalesAndSupplies -> "hearing_aids_sales_and_supplies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHeatingPlumbingAC -> "heating_plumbing_a_c"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHobbyToyAndGameShops -> "hobby_toy_and_game_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHomeSupplyWarehouseStores -> "home_supply_warehouse_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHospitals -> "hospitals"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHotelsMotelsAndResorts -> "hotels_motels_and_resorts"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHouseholdApplianceStores -> "household_appliance_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumIndustrialSupplies -> "industrial_supplies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumInformationRetrievalServices -> "information_retrieval_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumInsuranceDefault -> "insurance_default"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumInsuranceUnderwritingPremiums -> "insurance_underwriting_premiums"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumIntraCompanyPurchases -> "intra_company_purchases"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores -> "jewelry_stores_watches_clocks_and_silverware_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLandscapingServices -> "landscaping_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLaundries -> "laundries"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLaundryCleaningServices -> "laundry_cleaning_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLegalServicesAttorneys -> "legal_services_attorneys"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLuggageAndLeatherGoodsStores -> "luggage_and_leather_goods_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLumberBuildingMaterialsStores -> "lumber_building_materials_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumManualCashDisburse -> "manual_cash_disburse"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMarinasServiceAndSupplies -> "marinas_service_and_supplies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMasonryStoneworkAndPlaster -> "masonry_stonework_and_plaster"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMassageParlors -> "massage_parlors"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMedicalAndDentalLabs -> "medical_and_dental_labs"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies -> "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMedicalServices -> "medical_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMembershipOrganizations -> "membership_organizations"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMensAndBoysClothingAndAccessoriesStores -> "mens_and_boys_clothing_and_accessories_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMensWomensClothingStores -> "mens_womens_clothing_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMetalServiceCenters -> "metal_service_centers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneous -> "miscellaneous"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousApparelAndAccessoryShops -> "miscellaneous_apparel_and_accessory_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousAutoDealers -> "miscellaneous_auto_dealers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousBusinessServices -> "miscellaneous_business_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousFoodStores -> "miscellaneous_food_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralMerchandise -> "miscellaneous_general_merchandise"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralServices -> "miscellaneous_general_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores -> "miscellaneous_home_furnishing_specialty_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousPublishingAndPrinting -> "miscellaneous_publishing_and_printing"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousRecreationServices -> "miscellaneous_recreation_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousRepairShops -> "miscellaneous_repair_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousSpecialtyRetail -> "miscellaneous_specialty_retail"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMobileHomeDealers -> "mobile_home_dealers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotionPictureTheaters -> "motion_picture_theaters"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorFreightCarriersAndTrucking -> "motor_freight_carriers_and_trucking"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorHomesDealers -> "motor_homes_dealers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorVehicleSuppliesAndNewParts -> "motor_vehicle_supplies_and_new_parts"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsAndDealers -> "motorcycle_shops_and_dealers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsDealers -> "motorcycle_shops_dealers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic -> "music_stores_musical_instruments_pianos_and_sheet_music"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNewsDealersAndNewsstands -> "news_dealers_and_newsstands"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNonFiMoneyOrders -> "non_fi_money_orders"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNonFiStoredValueCardPurchaseLoad -> "non_fi_stored_value_card_purchase_load"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNondurableGoods -> "nondurable_goods"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNurseriesLawnAndGardenSupplyStores -> "nurseries_lawn_and_garden_supply_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNursingPersonalCare -> "nursing_personal_care"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOfficeAndCommercialFurniture -> "office_and_commercial_furniture"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOpticiansEyeglasses -> "opticians_eyeglasses"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOptometristsOphthalmologist -> "optometrists_ophthalmologist"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOrthopedicGoodsProstheticDevices -> "orthopedic_goods_prosthetic_devices"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOsteopaths -> "osteopaths"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPackageStoresBeerWineAndLiquor -> "package_stores_beer_wine_and_liquor"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPaintsVarnishesAndSupplies -> "paints_varnishes_and_supplies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumParkingLotsGarages -> "parking_lots_garages"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPassengerRailways -> "passenger_railways"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPawnShops -> "pawn_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPetShopsPetFoodAndSupplies -> "pet_shops_pet_food_and_supplies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPetroleumAndPetroleumProducts -> "petroleum_and_petroleum_products"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPhotoDeveloping -> "photo_developing"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies -> "photographic_photocopy_microfilm_equipment_and_supplies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPhotographicStudios -> "photographic_studios"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPictureVideoProduction -> "picture_video_production"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods -> "piece_goods_notions_and_other_dry_goods"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPlumbingHeatingEquipmentAndSupplies -> "plumbing_heating_equipment_and_supplies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPoliticalOrganizations -> "political_organizations"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPostalServicesGovernmentOnly -> "postal_services_government_only"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry -> "precious_stones_and_metals_watches_and_jewelry"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumProfessionalServices -> "professional_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPublicWarehousingAndStorage -> "public_warehousing_and_storage"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumQuickCopyReproAndBlueprint -> "quick_copy_repro_and_blueprint"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRailroads -> "railroads"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRealEstateAgentsAndManagersRentals -> "real_estate_agents_and_managers_rentals"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRecordStores -> "record_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRecreationalVehicleRentals -> "recreational_vehicle_rentals"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumReligiousGoodsStores -> "religious_goods_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumReligiousOrganizations -> "religious_organizations"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRoofingSidingSheetMetal -> "roofing_siding_sheet_metal"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSecretarialSupportServices -> "secretarial_support_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSecurityBrokersDealers -> "security_brokers_dealers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumServiceStations -> "service_stations"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores -> "sewing_needlework_fabric_and_piece_goods_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumShoeRepairHatCleaning -> "shoe_repair_hat_cleaning"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumShoeStores -> "shoe_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSmallApplianceRepair -> "small_appliance_repair"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSnowmobileDealers -> "snowmobile_dealers"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSpecialTradeServices -> "special_trade_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSpecialtyCleaning -> "specialty_cleaning"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportingGoodsStores -> "sporting_goods_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportingRecreationCamps -> "sporting_recreation_camps"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportsAndRidingApparelStores -> "sports_and_riding_apparel_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportsClubsFields -> "sports_clubs_fields"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumStampAndCoinStores -> "stamp_and_coin_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper -> "stationary_office_supplies_printing_and_writing_paper"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores -> "stationery_stores_office_and_school_supply_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSwimmingPoolsSales -> "swimming_pools_sales"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTUiTravelGermany -> "t_ui_travel_germany"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTailorsAlterations -> "tailors_alterations"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTaxPaymentsGovernmentAgencies -> "tax_payments_government_agencies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTaxPreparationServices -> "tax_preparation_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTaxicabsLimousines -> "taxicabs_limousines"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales -> "telecommunication_equipment_and_telephone_sales"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTelecommunicationServices -> "telecommunication_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTelegraphServices -> "telegraph_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTentAndAwningShops -> "tent_and_awning_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTestingLaboratories -> "testing_laboratories"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTheatricalTicketAgencies -> "theatrical_ticket_agencies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTimeshares -> "timeshares"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTireRetreadingAndRepair -> "tire_retreading_and_repair"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTollsBridgeFees -> "tolls_bridge_fees"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTouristAttractionsAndExhibits -> "tourist_attractions_and_exhibits"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTowingServices -> "towing_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTrailerParksCampgrounds -> "trailer_parks_campgrounds"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTransportationServices -> "transportation_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTravelAgenciesTourOperators -> "travel_agencies_tour_operators"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTruckStopIteration -> "truck_stop_iteration"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTruckUtilityTrailerRentals -> "truck_utility_trailer_rentals"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTypesettingPlateMakingAndRelatedServices -> "typesetting_plate_making_and_related_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTypewriterStores -> "typewriter_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments -> "u_s_federal_government_agencies_or_departments"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUniformsCommercialClothing -> "uniforms_commercial_clothing"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUsedMerchandiseAndSecondhandStores -> "used_merchandise_and_secondhand_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUtilities -> "utilities"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVarietyStores -> "variety_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVeterinaryServices -> "veterinary_services"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVideoAmusementGameSupplies -> "video_amusement_game_supplies"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVideoGameArcades -> "video_game_arcades"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVideoTapeRentalStores -> "video_tape_rental_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVocationalTradeSchools -> "vocational_trade_schools"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWatchJewelryRepair -> "watch_jewelry_repair"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWeldingRepair -> "welding_repair"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWholesaleClubs -> "wholesale_clubs"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWigAndToupeeStores -> "wig_and_toupee_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWiresMoneyOrders -> "wires_money_orders"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWomensAccessoryAndSpecialtyShops -> "womens_accessory_and_specialty_shops"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWomensReadyToWearStores -> "womens_ready_to_wear_stores"
    IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWreckingAndSalvageYards -> "wrecking_and_salvage_yards"

instance FromJSON IssuingCardholderAuthorizationControlsBlockedCategoriesEnum where
  parseJSON = withText "IssuingCardholderAuthorizationControlsBlockedCategoriesEnum" $ \case
    "ac_refrigeration_repair" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAcRefrigerationRepair
    "accounting_bookkeeping_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAccountingBookkeepingServices
    "advertising_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAdvertisingServices
    "agricultural_cooperative" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAgriculturalCooperative
    "airlines_air_carriers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAirlinesAirCarriers
    "airports_flying_fields" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAirportsFlyingFields
    "ambulance_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAmbulanceServices
    "amusement_parks_carnivals" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAmusementParksCarnivals
    "antique_reproductions" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAntiqueReproductions
    "antique_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAntiqueShops
    "aquariums" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAquariums
    "architectural_surveying_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumArchitecturalSurveyingServices
    "art_dealers_and_galleries" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumArtDealersAndGalleries
    "artists_supply_and_craft_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumArtistsSupplyAndCraftShops
    "auto_and_home_supply_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoAndHomeSupplyStores
    "auto_body_repair_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoBodyRepairShops
    "auto_paint_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoPaintShops
    "auto_service_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutoServiceShops
    "automated_cash_disburse" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomatedCashDisburse
    "automated_fuel_dispensers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomatedFuelDispensers
    "automobile_associations" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomobileAssociations
    "automotive_parts_and_accessories_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomotivePartsAndAccessoriesStores
    "automotive_tire_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumAutomotiveTireStores
    "bail_and_bond_payments" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBailAndBondPayments
    "bakeries" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBakeries
    "bands_orchestras" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBandsOrchestras
    "barber_and_beauty_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBarberAndBeautyShops
    "betting_casino_gambling" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBettingCasinoGambling
    "bicycle_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBicycleShops
    "billiard_pool_establishments" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBilliardPoolEstablishments
    "boat_dealers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBoatDealers
    "boat_rentals_and_leases" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBoatRentalsAndLeases
    "book_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBookStores
    "books_periodicals_and_newspapers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBooksPeriodicalsAndNewspapers
    "bowling_alleys" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBowlingAlleys
    "bus_lines" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBusLines
    "business_secretarial_schools" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBusinessSecretarialSchools
    "buying_shopping_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumBuyingShoppingServices
    "cable_satellite_and_other_pay_television_and_radio" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
    "camera_and_photographic_supply_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCameraAndPhotographicSupplyStores
    "candy_nut_and_confectionery_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCandyNutAndConfectioneryStores
    "car_and_truck_dealers_new_used" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersNewUsed
    "car_and_truck_dealers_used_only" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarAndTruckDealersUsedOnly
    "car_rental_agencies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarRentalAgencies
    "car_washes" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarWashes
    "carpentry_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarpentryServices
    "carpet_upholstery_cleaning" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCarpetUpholsteryCleaning
    "caterers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCaterers
    "charitable_and_social_service_organizations_fundraising" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
    "chemicals_and_allied_products" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChemicalsAndAlliedProducts
    "chidrens_and_infants_wear_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChidrensAndInfantsWearStores
    "child_care_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChildCareServices
    "chiropodists_podiatrists" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChiropodistsPodiatrists
    "chiropractors" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumChiropractors
    "cigar_stores_and_stands" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCigarStoresAndStands
    "civic_social_fraternal_associations" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCivicSocialFraternalAssociations
    "cleaning_and_maintenance" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCleaningAndMaintenance
    "clothing_rental" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumClothingRental
    "colleges_universities" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCollegesUniversities
    "commercial_equipment" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommercialEquipment
    "commercial_footwear" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommercialFootwear
    "commercial_photography_art_and_graphics" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommercialPhotographyArtAndGraphics
    "commuter_transport_and_ferries" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCommuterTransportAndFerries
    "computer_network_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerNetworkServices
    "computer_programming" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerProgramming
    "computer_repair" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerRepair
    "computer_software_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputerSoftwareStores
    "computers_peripherals_and_software" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumComputersPeripheralsAndSoftware
    "concrete_work_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumConcreteWorkServices
    "construction_materials" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumConstructionMaterials
    "consulting_public_relations" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumConsultingPublicRelations
    "correspondence_schools" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCorrespondenceSchools
    "cosmetic_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCosmeticStores
    "counseling_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCounselingServices
    "country_clubs" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCountryClubs
    "courier_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCourierServices
    "court_costs" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCourtCosts
    "credit_reporting_agencies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCreditReportingAgencies
    "cruise_lines" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumCruiseLines
    "dairy_products_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDairyProductsStores
    "dance_hall_studios_schools" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDanceHallStudiosSchools
    "dating_escort_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDatingEscortServices
    "dentists_orthodontists" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDentistsOrthodontists
    "department_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDepartmentStores
    "detective_agencies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDetectiveAgencies
    "digital_goods_applications" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDigitalGoodsApplications
    "direct_marketing_catalog_merchant" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingCatalogMerchant
    "direct_marketing_combination_catalog_and_retail_merchant" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
    "direct_marketing_inbound_telemarketing" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingInboundTelemarketing
    "direct_marketing_insurance_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingInsuranceServices
    "direct_marketing_other" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingOther
    "direct_marketing_outbound_telemarketing" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingOutboundTelemarketing
    "direct_marketing_subscription" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingSubscription
    "direct_marketing_travel" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDirectMarketingTravel
    "discount_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDiscountStores
    "doctors" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDoctors
    "door_to_door_sales" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDoorToDoorSales
    "drapery_window_covering_and_upholstery_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
    "drinking_places" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDrinkingPlaces
    "drug_stores_and_pharmacies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDrugStoresAndPharmacies
    "drugs_drug_proprietaries_and_druggist_sundries" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
    "dry_cleaners" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDryCleaners
    "durable_goods" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDurableGoods
    "duty_free_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumDutyFreeStores
    "eating_places_restaurants" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEatingPlacesRestaurants
    "educational_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEducationalServices
    "electric_razor_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectricRazorStores
    "electrical_parts_and_equipment" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectricalPartsAndEquipment
    "electrical_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectricalServices
    "electronics_repair_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectronicsRepairShops
    "electronics_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElectronicsStores
    "elementary_secondary_schools" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumElementarySecondarySchools
    "employment_temp_agencies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEmploymentTempAgencies
    "equipment_rental" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumEquipmentRental
    "exterminating_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumExterminatingServices
    "family_clothing_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFamilyClothingStores
    "fast_food_restaurants" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFastFoodRestaurants
    "financial_institutions" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFinancialInstitutions
    "fines_government_administrative_entities" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFinesGovernmentAdministrativeEntities
    "fireplace_fireplace_screens_and_accessories_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
    "floor_covering_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFloorCoveringStores
    "florists" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFlorists
    "florists_supplies_nursery_stock_and_flowers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
    "freezer_and_locker_meat_provisioners" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFreezerAndLockerMeatProvisioners
    "fuel_dealers_non_automotive" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFuelDealersNonAutomotive
    "funeral_services_crematories" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFuneralServicesCrematories
    "furniture_home_furnishings_and_equipment_stores_except_appliances" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
    "furniture_repair_refinishing" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFurnitureRepairRefinishing
    "furriers_and_fur_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumFurriersAndFurShops
    "general_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGeneralServices
    "gift_card_novelty_and_souvenir_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGiftCardNoveltyAndSouvenirShops
    "glass_paint_and_wallpaper_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGlassPaintAndWallpaperStores
    "glassware_crystal_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGlasswareCrystalStores
    "golf_courses_public" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGolfCoursesPublic
    "government_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGovernmentServices
    "grocery_stores_supermarkets" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumGroceryStoresSupermarkets
    "hardware_equipment_and_supplies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHardwareEquipmentAndSupplies
    "hardware_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHardwareStores
    "health_and_beauty_spas" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHealthAndBeautySpas
    "hearing_aids_sales_and_supplies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHearingAidsSalesAndSupplies
    "heating_plumbing_a_c" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHeatingPlumbingAC
    "hobby_toy_and_game_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHobbyToyAndGameShops
    "home_supply_warehouse_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHomeSupplyWarehouseStores
    "hospitals" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHospitals
    "hotels_motels_and_resorts" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHotelsMotelsAndResorts
    "household_appliance_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumHouseholdApplianceStores
    "industrial_supplies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumIndustrialSupplies
    "information_retrieval_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumInformationRetrievalServices
    "insurance_default" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumInsuranceDefault
    "insurance_underwriting_premiums" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumInsuranceUnderwritingPremiums
    "intra_company_purchases" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumIntraCompanyPurchases
    "jewelry_stores_watches_clocks_and_silverware_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
    "landscaping_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLandscapingServices
    "laundries" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLaundries
    "laundry_cleaning_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLaundryCleaningServices
    "legal_services_attorneys" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLegalServicesAttorneys
    "luggage_and_leather_goods_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLuggageAndLeatherGoodsStores
    "lumber_building_materials_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumLumberBuildingMaterialsStores
    "manual_cash_disburse" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumManualCashDisburse
    "marinas_service_and_supplies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMarinasServiceAndSupplies
    "masonry_stonework_and_plaster" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMasonryStoneworkAndPlaster
    "massage_parlors" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMassageParlors
    "medical_and_dental_labs" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMedicalAndDentalLabs
    "medical_dental_ophthalmic_and_hospital_equipment_and_supplies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
    "medical_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMedicalServices
    "membership_organizations" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMembershipOrganizations
    "mens_and_boys_clothing_and_accessories_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMensAndBoysClothingAndAccessoriesStores
    "mens_womens_clothing_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMensWomensClothingStores
    "metal_service_centers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMetalServiceCenters
    "miscellaneous" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneous
    "miscellaneous_apparel_and_accessory_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousApparelAndAccessoryShops
    "miscellaneous_auto_dealers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousAutoDealers
    "miscellaneous_business_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousBusinessServices
    "miscellaneous_food_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousFoodStores
    "miscellaneous_general_merchandise" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralMerchandise
    "miscellaneous_general_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousGeneralServices
    "miscellaneous_home_furnishing_specialty_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
    "miscellaneous_publishing_and_printing" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousPublishingAndPrinting
    "miscellaneous_recreation_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousRecreationServices
    "miscellaneous_repair_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousRepairShops
    "miscellaneous_specialty_retail" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMiscellaneousSpecialtyRetail
    "mobile_home_dealers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMobileHomeDealers
    "motion_picture_theaters" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotionPictureTheaters
    "motor_freight_carriers_and_trucking" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorFreightCarriersAndTrucking
    "motor_homes_dealers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorHomesDealers
    "motor_vehicle_supplies_and_new_parts" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorVehicleSuppliesAndNewParts
    "motorcycle_shops_and_dealers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsAndDealers
    "motorcycle_shops_dealers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMotorcycleShopsDealers
    "music_stores_musical_instruments_pianos_and_sheet_music" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
    "news_dealers_and_newsstands" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNewsDealersAndNewsstands
    "non_fi_money_orders" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNonFiMoneyOrders
    "non_fi_stored_value_card_purchase_load" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNonFiStoredValueCardPurchaseLoad
    "nondurable_goods" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNondurableGoods
    "nurseries_lawn_and_garden_supply_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNurseriesLawnAndGardenSupplyStores
    "nursing_personal_care" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumNursingPersonalCare
    "office_and_commercial_furniture" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOfficeAndCommercialFurniture
    "opticians_eyeglasses" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOpticiansEyeglasses
    "optometrists_ophthalmologist" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOptometristsOphthalmologist
    "orthopedic_goods_prosthetic_devices" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOrthopedicGoodsProstheticDevices
    "osteopaths" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumOsteopaths
    "package_stores_beer_wine_and_liquor" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPackageStoresBeerWineAndLiquor
    "paints_varnishes_and_supplies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPaintsVarnishesAndSupplies
    "parking_lots_garages" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumParkingLotsGarages
    "passenger_railways" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPassengerRailways
    "pawn_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPawnShops
    "pet_shops_pet_food_and_supplies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPetShopsPetFoodAndSupplies
    "petroleum_and_petroleum_products" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPetroleumAndPetroleumProducts
    "photo_developing" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPhotoDeveloping
    "photographic_photocopy_microfilm_equipment_and_supplies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
    "photographic_studios" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPhotographicStudios
    "picture_video_production" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPictureVideoProduction
    "piece_goods_notions_and_other_dry_goods" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
    "plumbing_heating_equipment_and_supplies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPlumbingHeatingEquipmentAndSupplies
    "political_organizations" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPoliticalOrganizations
    "postal_services_government_only" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPostalServicesGovernmentOnly
    "precious_stones_and_metals_watches_and_jewelry" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
    "professional_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumProfessionalServices
    "public_warehousing_and_storage" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumPublicWarehousingAndStorage
    "quick_copy_repro_and_blueprint" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumQuickCopyReproAndBlueprint
    "railroads" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRailroads
    "real_estate_agents_and_managers_rentals" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRealEstateAgentsAndManagersRentals
    "record_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRecordStores
    "recreational_vehicle_rentals" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRecreationalVehicleRentals
    "religious_goods_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumReligiousGoodsStores
    "religious_organizations" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumReligiousOrganizations
    "roofing_siding_sheet_metal" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumRoofingSidingSheetMetal
    "secretarial_support_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSecretarialSupportServices
    "security_brokers_dealers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSecurityBrokersDealers
    "service_stations" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumServiceStations
    "sewing_needlework_fabric_and_piece_goods_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
    "shoe_repair_hat_cleaning" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumShoeRepairHatCleaning
    "shoe_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumShoeStores
    "small_appliance_repair" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSmallApplianceRepair
    "snowmobile_dealers" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSnowmobileDealers
    "special_trade_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSpecialTradeServices
    "specialty_cleaning" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSpecialtyCleaning
    "sporting_goods_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportingGoodsStores
    "sporting_recreation_camps" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportingRecreationCamps
    "sports_and_riding_apparel_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportsAndRidingApparelStores
    "sports_clubs_fields" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSportsClubsFields
    "stamp_and_coin_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumStampAndCoinStores
    "stationary_office_supplies_printing_and_writing_paper" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
    "stationery_stores_office_and_school_supply_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
    "swimming_pools_sales" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumSwimmingPoolsSales
    "t_ui_travel_germany" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTUiTravelGermany
    "tailors_alterations" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTailorsAlterations
    "tax_payments_government_agencies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTaxPaymentsGovernmentAgencies
    "tax_preparation_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTaxPreparationServices
    "taxicabs_limousines" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTaxicabsLimousines
    "telecommunication_equipment_and_telephone_sales" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
    "telecommunication_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTelecommunicationServices
    "telegraph_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTelegraphServices
    "tent_and_awning_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTentAndAwningShops
    "testing_laboratories" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTestingLaboratories
    "theatrical_ticket_agencies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTheatricalTicketAgencies
    "timeshares" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTimeshares
    "tire_retreading_and_repair" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTireRetreadingAndRepair
    "tolls_bridge_fees" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTollsBridgeFees
    "tourist_attractions_and_exhibits" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTouristAttractionsAndExhibits
    "towing_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTowingServices
    "trailer_parks_campgrounds" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTrailerParksCampgrounds
    "transportation_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTransportationServices
    "travel_agencies_tour_operators" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTravelAgenciesTourOperators
    "truck_stop_iteration" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTruckStopIteration
    "truck_utility_trailer_rentals" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTruckUtilityTrailerRentals
    "typesetting_plate_making_and_related_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTypesettingPlateMakingAndRelatedServices
    "typewriter_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumTypewriterStores
    "u_s_federal_government_agencies_or_departments" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
    "uniforms_commercial_clothing" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUniformsCommercialClothing
    "used_merchandise_and_secondhand_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUsedMerchandiseAndSecondhandStores
    "utilities" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumUtilities
    "variety_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVarietyStores
    "veterinary_services" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVeterinaryServices
    "video_amusement_game_supplies" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVideoAmusementGameSupplies
    "video_game_arcades" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVideoGameArcades
    "video_tape_rental_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVideoTapeRentalStores
    "vocational_trade_schools" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumVocationalTradeSchools
    "watch_jewelry_repair" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWatchJewelryRepair
    "welding_repair" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWeldingRepair
    "wholesale_clubs" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWholesaleClubs
    "wig_and_toupee_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWigAndToupeeStores
    "wires_money_orders" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWiresMoneyOrders
    "womens_accessory_and_specialty_shops" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWomensAccessoryAndSpecialtyShops
    "womens_ready_to_wear_stores" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWomensReadyToWearStores
    "wrecking_and_salvage_yards" -> pure IssuingCardholderAuthorizationControlsBlockedCategoriesEnumWreckingAndSalvageYards
    str -> fail (show str <> " is not a known valid option for IssuingCardholderAuthorizationControlsBlockedCategoriesEnum")

data IssuingCardholderObjectEnum
  = IssuingCardholderObjectEnumIssuingCardholder
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardholderObjectEnum where
  toJSON e = String $ case e of
    IssuingCardholderObjectEnumIssuingCardholder -> "issuing.cardholder"

instance FromJSON IssuingCardholderObjectEnum where
  parseJSON = withText "IssuingCardholderObjectEnum" $ \case
    "issuing.cardholder" -> pure IssuingCardholderObjectEnumIssuingCardholder
    str -> fail (show str <> " is not a known valid option for IssuingCardholderObjectEnum")

data IssuingCardholderSpendingLimitCategoriesEnum
  = IssuingCardholderSpendingLimitCategoriesEnumAcRefrigerationRepair
  | IssuingCardholderSpendingLimitCategoriesEnumAccountingBookkeepingServices
  | IssuingCardholderSpendingLimitCategoriesEnumAdvertisingServices
  | IssuingCardholderSpendingLimitCategoriesEnumAgriculturalCooperative
  | IssuingCardholderSpendingLimitCategoriesEnumAirlinesAirCarriers
  | IssuingCardholderSpendingLimitCategoriesEnumAirportsFlyingFields
  | IssuingCardholderSpendingLimitCategoriesEnumAmbulanceServices
  | IssuingCardholderSpendingLimitCategoriesEnumAmusementParksCarnivals
  | IssuingCardholderSpendingLimitCategoriesEnumAntiqueReproductions
  | IssuingCardholderSpendingLimitCategoriesEnumAntiqueShops
  | IssuingCardholderSpendingLimitCategoriesEnumAquariums
  | IssuingCardholderSpendingLimitCategoriesEnumArchitecturalSurveyingServices
  | IssuingCardholderSpendingLimitCategoriesEnumArtDealersAndGalleries
  | IssuingCardholderSpendingLimitCategoriesEnumArtistsSupplyAndCraftShops
  | IssuingCardholderSpendingLimitCategoriesEnumAutoAndHomeSupplyStores
  | IssuingCardholderSpendingLimitCategoriesEnumAutoBodyRepairShops
  | IssuingCardholderSpendingLimitCategoriesEnumAutoPaintShops
  | IssuingCardholderSpendingLimitCategoriesEnumAutoServiceShops
  | IssuingCardholderSpendingLimitCategoriesEnumAutomatedCashDisburse
  | IssuingCardholderSpendingLimitCategoriesEnumAutomatedFuelDispensers
  | IssuingCardholderSpendingLimitCategoriesEnumAutomobileAssociations
  | IssuingCardholderSpendingLimitCategoriesEnumAutomotivePartsAndAccessoriesStores
  | IssuingCardholderSpendingLimitCategoriesEnumAutomotiveTireStores
  | IssuingCardholderSpendingLimitCategoriesEnumBailAndBondPayments
  | IssuingCardholderSpendingLimitCategoriesEnumBakeries
  | IssuingCardholderSpendingLimitCategoriesEnumBandsOrchestras
  | IssuingCardholderSpendingLimitCategoriesEnumBarberAndBeautyShops
  | IssuingCardholderSpendingLimitCategoriesEnumBettingCasinoGambling
  | IssuingCardholderSpendingLimitCategoriesEnumBicycleShops
  | IssuingCardholderSpendingLimitCategoriesEnumBilliardPoolEstablishments
  | IssuingCardholderSpendingLimitCategoriesEnumBoatDealers
  | IssuingCardholderSpendingLimitCategoriesEnumBoatRentalsAndLeases
  | IssuingCardholderSpendingLimitCategoriesEnumBookStores
  | IssuingCardholderSpendingLimitCategoriesEnumBooksPeriodicalsAndNewspapers
  | IssuingCardholderSpendingLimitCategoriesEnumBowlingAlleys
  | IssuingCardholderSpendingLimitCategoriesEnumBusLines
  | IssuingCardholderSpendingLimitCategoriesEnumBusinessSecretarialSchools
  | IssuingCardholderSpendingLimitCategoriesEnumBuyingShoppingServices
  | IssuingCardholderSpendingLimitCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
  | IssuingCardholderSpendingLimitCategoriesEnumCameraAndPhotographicSupplyStores
  | IssuingCardholderSpendingLimitCategoriesEnumCandyNutAndConfectioneryStores
  | IssuingCardholderSpendingLimitCategoriesEnumCarAndTruckDealersNewUsed
  | IssuingCardholderSpendingLimitCategoriesEnumCarAndTruckDealersUsedOnly
  | IssuingCardholderSpendingLimitCategoriesEnumCarRentalAgencies
  | IssuingCardholderSpendingLimitCategoriesEnumCarWashes
  | IssuingCardholderSpendingLimitCategoriesEnumCarpentryServices
  | IssuingCardholderSpendingLimitCategoriesEnumCarpetUpholsteryCleaning
  | IssuingCardholderSpendingLimitCategoriesEnumCaterers
  | IssuingCardholderSpendingLimitCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
  | IssuingCardholderSpendingLimitCategoriesEnumChemicalsAndAlliedProducts
  | IssuingCardholderSpendingLimitCategoriesEnumChidrensAndInfantsWearStores
  | IssuingCardholderSpendingLimitCategoriesEnumChildCareServices
  | IssuingCardholderSpendingLimitCategoriesEnumChiropodistsPodiatrists
  | IssuingCardholderSpendingLimitCategoriesEnumChiropractors
  | IssuingCardholderSpendingLimitCategoriesEnumCigarStoresAndStands
  | IssuingCardholderSpendingLimitCategoriesEnumCivicSocialFraternalAssociations
  | IssuingCardholderSpendingLimitCategoriesEnumCleaningAndMaintenance
  | IssuingCardholderSpendingLimitCategoriesEnumClothingRental
  | IssuingCardholderSpendingLimitCategoriesEnumCollegesUniversities
  | IssuingCardholderSpendingLimitCategoriesEnumCommercialEquipment
  | IssuingCardholderSpendingLimitCategoriesEnumCommercialFootwear
  | IssuingCardholderSpendingLimitCategoriesEnumCommercialPhotographyArtAndGraphics
  | IssuingCardholderSpendingLimitCategoriesEnumCommuterTransportAndFerries
  | IssuingCardholderSpendingLimitCategoriesEnumComputerNetworkServices
  | IssuingCardholderSpendingLimitCategoriesEnumComputerProgramming
  | IssuingCardholderSpendingLimitCategoriesEnumComputerRepair
  | IssuingCardholderSpendingLimitCategoriesEnumComputerSoftwareStores
  | IssuingCardholderSpendingLimitCategoriesEnumComputersPeripheralsAndSoftware
  | IssuingCardholderSpendingLimitCategoriesEnumConcreteWorkServices
  | IssuingCardholderSpendingLimitCategoriesEnumConstructionMaterials
  | IssuingCardholderSpendingLimitCategoriesEnumConsultingPublicRelations
  | IssuingCardholderSpendingLimitCategoriesEnumCorrespondenceSchools
  | IssuingCardholderSpendingLimitCategoriesEnumCosmeticStores
  | IssuingCardholderSpendingLimitCategoriesEnumCounselingServices
  | IssuingCardholderSpendingLimitCategoriesEnumCountryClubs
  | IssuingCardholderSpendingLimitCategoriesEnumCourierServices
  | IssuingCardholderSpendingLimitCategoriesEnumCourtCosts
  | IssuingCardholderSpendingLimitCategoriesEnumCreditReportingAgencies
  | IssuingCardholderSpendingLimitCategoriesEnumCruiseLines
  | IssuingCardholderSpendingLimitCategoriesEnumDairyProductsStores
  | IssuingCardholderSpendingLimitCategoriesEnumDanceHallStudiosSchools
  | IssuingCardholderSpendingLimitCategoriesEnumDatingEscortServices
  | IssuingCardholderSpendingLimitCategoriesEnumDentistsOrthodontists
  | IssuingCardholderSpendingLimitCategoriesEnumDepartmentStores
  | IssuingCardholderSpendingLimitCategoriesEnumDetectiveAgencies
  | IssuingCardholderSpendingLimitCategoriesEnumDigitalGoodsApplications
  | IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingCatalogMerchant
  | IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
  | IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingInboundTelemarketing
  | IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingInsuranceServices
  | IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingOther
  | IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingOutboundTelemarketing
  | IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingSubscription
  | IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingTravel
  | IssuingCardholderSpendingLimitCategoriesEnumDiscountStores
  | IssuingCardholderSpendingLimitCategoriesEnumDoctors
  | IssuingCardholderSpendingLimitCategoriesEnumDoorToDoorSales
  | IssuingCardholderSpendingLimitCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
  | IssuingCardholderSpendingLimitCategoriesEnumDrinkingPlaces
  | IssuingCardholderSpendingLimitCategoriesEnumDrugStoresAndPharmacies
  | IssuingCardholderSpendingLimitCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
  | IssuingCardholderSpendingLimitCategoriesEnumDryCleaners
  | IssuingCardholderSpendingLimitCategoriesEnumDurableGoods
  | IssuingCardholderSpendingLimitCategoriesEnumDutyFreeStores
  | IssuingCardholderSpendingLimitCategoriesEnumEatingPlacesRestaurants
  | IssuingCardholderSpendingLimitCategoriesEnumEducationalServices
  | IssuingCardholderSpendingLimitCategoriesEnumElectricRazorStores
  | IssuingCardholderSpendingLimitCategoriesEnumElectricalPartsAndEquipment
  | IssuingCardholderSpendingLimitCategoriesEnumElectricalServices
  | IssuingCardholderSpendingLimitCategoriesEnumElectronicsRepairShops
  | IssuingCardholderSpendingLimitCategoriesEnumElectronicsStores
  | IssuingCardholderSpendingLimitCategoriesEnumElementarySecondarySchools
  | IssuingCardholderSpendingLimitCategoriesEnumEmploymentTempAgencies
  | IssuingCardholderSpendingLimitCategoriesEnumEquipmentRental
  | IssuingCardholderSpendingLimitCategoriesEnumExterminatingServices
  | IssuingCardholderSpendingLimitCategoriesEnumFamilyClothingStores
  | IssuingCardholderSpendingLimitCategoriesEnumFastFoodRestaurants
  | IssuingCardholderSpendingLimitCategoriesEnumFinancialInstitutions
  | IssuingCardholderSpendingLimitCategoriesEnumFinesGovernmentAdministrativeEntities
  | IssuingCardholderSpendingLimitCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
  | IssuingCardholderSpendingLimitCategoriesEnumFloorCoveringStores
  | IssuingCardholderSpendingLimitCategoriesEnumFlorists
  | IssuingCardholderSpendingLimitCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
  | IssuingCardholderSpendingLimitCategoriesEnumFreezerAndLockerMeatProvisioners
  | IssuingCardholderSpendingLimitCategoriesEnumFuelDealersNonAutomotive
  | IssuingCardholderSpendingLimitCategoriesEnumFuneralServicesCrematories
  | IssuingCardholderSpendingLimitCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
  | IssuingCardholderSpendingLimitCategoriesEnumFurnitureRepairRefinishing
  | IssuingCardholderSpendingLimitCategoriesEnumFurriersAndFurShops
  | IssuingCardholderSpendingLimitCategoriesEnumGeneralServices
  | IssuingCardholderSpendingLimitCategoriesEnumGiftCardNoveltyAndSouvenirShops
  | IssuingCardholderSpendingLimitCategoriesEnumGlassPaintAndWallpaperStores
  | IssuingCardholderSpendingLimitCategoriesEnumGlasswareCrystalStores
  | IssuingCardholderSpendingLimitCategoriesEnumGolfCoursesPublic
  | IssuingCardholderSpendingLimitCategoriesEnumGovernmentServices
  | IssuingCardholderSpendingLimitCategoriesEnumGroceryStoresSupermarkets
  | IssuingCardholderSpendingLimitCategoriesEnumHardwareEquipmentAndSupplies
  | IssuingCardholderSpendingLimitCategoriesEnumHardwareStores
  | IssuingCardholderSpendingLimitCategoriesEnumHealthAndBeautySpas
  | IssuingCardholderSpendingLimitCategoriesEnumHearingAidsSalesAndSupplies
  | IssuingCardholderSpendingLimitCategoriesEnumHeatingPlumbingAC
  | IssuingCardholderSpendingLimitCategoriesEnumHobbyToyAndGameShops
  | IssuingCardholderSpendingLimitCategoriesEnumHomeSupplyWarehouseStores
  | IssuingCardholderSpendingLimitCategoriesEnumHospitals
  | IssuingCardholderSpendingLimitCategoriesEnumHotelsMotelsAndResorts
  | IssuingCardholderSpendingLimitCategoriesEnumHouseholdApplianceStores
  | IssuingCardholderSpendingLimitCategoriesEnumIndustrialSupplies
  | IssuingCardholderSpendingLimitCategoriesEnumInformationRetrievalServices
  | IssuingCardholderSpendingLimitCategoriesEnumInsuranceDefault
  | IssuingCardholderSpendingLimitCategoriesEnumInsuranceUnderwritingPremiums
  | IssuingCardholderSpendingLimitCategoriesEnumIntraCompanyPurchases
  | IssuingCardholderSpendingLimitCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
  | IssuingCardholderSpendingLimitCategoriesEnumLandscapingServices
  | IssuingCardholderSpendingLimitCategoriesEnumLaundries
  | IssuingCardholderSpendingLimitCategoriesEnumLaundryCleaningServices
  | IssuingCardholderSpendingLimitCategoriesEnumLegalServicesAttorneys
  | IssuingCardholderSpendingLimitCategoriesEnumLuggageAndLeatherGoodsStores
  | IssuingCardholderSpendingLimitCategoriesEnumLumberBuildingMaterialsStores
  | IssuingCardholderSpendingLimitCategoriesEnumManualCashDisburse
  | IssuingCardholderSpendingLimitCategoriesEnumMarinasServiceAndSupplies
  | IssuingCardholderSpendingLimitCategoriesEnumMasonryStoneworkAndPlaster
  | IssuingCardholderSpendingLimitCategoriesEnumMassageParlors
  | IssuingCardholderSpendingLimitCategoriesEnumMedicalAndDentalLabs
  | IssuingCardholderSpendingLimitCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
  | IssuingCardholderSpendingLimitCategoriesEnumMedicalServices
  | IssuingCardholderSpendingLimitCategoriesEnumMembershipOrganizations
  | IssuingCardholderSpendingLimitCategoriesEnumMensAndBoysClothingAndAccessoriesStores
  | IssuingCardholderSpendingLimitCategoriesEnumMensWomensClothingStores
  | IssuingCardholderSpendingLimitCategoriesEnumMetalServiceCenters
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneous
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousApparelAndAccessoryShops
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousAutoDealers
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousBusinessServices
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousFoodStores
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousGeneralMerchandise
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousGeneralServices
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousPublishingAndPrinting
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousRecreationServices
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousRepairShops
  | IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousSpecialtyRetail
  | IssuingCardholderSpendingLimitCategoriesEnumMobileHomeDealers
  | IssuingCardholderSpendingLimitCategoriesEnumMotionPictureTheaters
  | IssuingCardholderSpendingLimitCategoriesEnumMotorFreightCarriersAndTrucking
  | IssuingCardholderSpendingLimitCategoriesEnumMotorHomesDealers
  | IssuingCardholderSpendingLimitCategoriesEnumMotorVehicleSuppliesAndNewParts
  | IssuingCardholderSpendingLimitCategoriesEnumMotorcycleShopsAndDealers
  | IssuingCardholderSpendingLimitCategoriesEnumMotorcycleShopsDealers
  | IssuingCardholderSpendingLimitCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
  | IssuingCardholderSpendingLimitCategoriesEnumNewsDealersAndNewsstands
  | IssuingCardholderSpendingLimitCategoriesEnumNonFiMoneyOrders
  | IssuingCardholderSpendingLimitCategoriesEnumNonFiStoredValueCardPurchaseLoad
  | IssuingCardholderSpendingLimitCategoriesEnumNondurableGoods
  | IssuingCardholderSpendingLimitCategoriesEnumNurseriesLawnAndGardenSupplyStores
  | IssuingCardholderSpendingLimitCategoriesEnumNursingPersonalCare
  | IssuingCardholderSpendingLimitCategoriesEnumOfficeAndCommercialFurniture
  | IssuingCardholderSpendingLimitCategoriesEnumOpticiansEyeglasses
  | IssuingCardholderSpendingLimitCategoriesEnumOptometristsOphthalmologist
  | IssuingCardholderSpendingLimitCategoriesEnumOrthopedicGoodsProstheticDevices
  | IssuingCardholderSpendingLimitCategoriesEnumOsteopaths
  | IssuingCardholderSpendingLimitCategoriesEnumPackageStoresBeerWineAndLiquor
  | IssuingCardholderSpendingLimitCategoriesEnumPaintsVarnishesAndSupplies
  | IssuingCardholderSpendingLimitCategoriesEnumParkingLotsGarages
  | IssuingCardholderSpendingLimitCategoriesEnumPassengerRailways
  | IssuingCardholderSpendingLimitCategoriesEnumPawnShops
  | IssuingCardholderSpendingLimitCategoriesEnumPetShopsPetFoodAndSupplies
  | IssuingCardholderSpendingLimitCategoriesEnumPetroleumAndPetroleumProducts
  | IssuingCardholderSpendingLimitCategoriesEnumPhotoDeveloping
  | IssuingCardholderSpendingLimitCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
  | IssuingCardholderSpendingLimitCategoriesEnumPhotographicStudios
  | IssuingCardholderSpendingLimitCategoriesEnumPictureVideoProduction
  | IssuingCardholderSpendingLimitCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
  | IssuingCardholderSpendingLimitCategoriesEnumPlumbingHeatingEquipmentAndSupplies
  | IssuingCardholderSpendingLimitCategoriesEnumPoliticalOrganizations
  | IssuingCardholderSpendingLimitCategoriesEnumPostalServicesGovernmentOnly
  | IssuingCardholderSpendingLimitCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
  | IssuingCardholderSpendingLimitCategoriesEnumProfessionalServices
  | IssuingCardholderSpendingLimitCategoriesEnumPublicWarehousingAndStorage
  | IssuingCardholderSpendingLimitCategoriesEnumQuickCopyReproAndBlueprint
  | IssuingCardholderSpendingLimitCategoriesEnumRailroads
  | IssuingCardholderSpendingLimitCategoriesEnumRealEstateAgentsAndManagersRentals
  | IssuingCardholderSpendingLimitCategoriesEnumRecordStores
  | IssuingCardholderSpendingLimitCategoriesEnumRecreationalVehicleRentals
  | IssuingCardholderSpendingLimitCategoriesEnumReligiousGoodsStores
  | IssuingCardholderSpendingLimitCategoriesEnumReligiousOrganizations
  | IssuingCardholderSpendingLimitCategoriesEnumRoofingSidingSheetMetal
  | IssuingCardholderSpendingLimitCategoriesEnumSecretarialSupportServices
  | IssuingCardholderSpendingLimitCategoriesEnumSecurityBrokersDealers
  | IssuingCardholderSpendingLimitCategoriesEnumServiceStations
  | IssuingCardholderSpendingLimitCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
  | IssuingCardholderSpendingLimitCategoriesEnumShoeRepairHatCleaning
  | IssuingCardholderSpendingLimitCategoriesEnumShoeStores
  | IssuingCardholderSpendingLimitCategoriesEnumSmallApplianceRepair
  | IssuingCardholderSpendingLimitCategoriesEnumSnowmobileDealers
  | IssuingCardholderSpendingLimitCategoriesEnumSpecialTradeServices
  | IssuingCardholderSpendingLimitCategoriesEnumSpecialtyCleaning
  | IssuingCardholderSpendingLimitCategoriesEnumSportingGoodsStores
  | IssuingCardholderSpendingLimitCategoriesEnumSportingRecreationCamps
  | IssuingCardholderSpendingLimitCategoriesEnumSportsAndRidingApparelStores
  | IssuingCardholderSpendingLimitCategoriesEnumSportsClubsFields
  | IssuingCardholderSpendingLimitCategoriesEnumStampAndCoinStores
  | IssuingCardholderSpendingLimitCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
  | IssuingCardholderSpendingLimitCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
  | IssuingCardholderSpendingLimitCategoriesEnumSwimmingPoolsSales
  | IssuingCardholderSpendingLimitCategoriesEnumTUiTravelGermany
  | IssuingCardholderSpendingLimitCategoriesEnumTailorsAlterations
  | IssuingCardholderSpendingLimitCategoriesEnumTaxPaymentsGovernmentAgencies
  | IssuingCardholderSpendingLimitCategoriesEnumTaxPreparationServices
  | IssuingCardholderSpendingLimitCategoriesEnumTaxicabsLimousines
  | IssuingCardholderSpendingLimitCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
  | IssuingCardholderSpendingLimitCategoriesEnumTelecommunicationServices
  | IssuingCardholderSpendingLimitCategoriesEnumTelegraphServices
  | IssuingCardholderSpendingLimitCategoriesEnumTentAndAwningShops
  | IssuingCardholderSpendingLimitCategoriesEnumTestingLaboratories
  | IssuingCardholderSpendingLimitCategoriesEnumTheatricalTicketAgencies
  | IssuingCardholderSpendingLimitCategoriesEnumTimeshares
  | IssuingCardholderSpendingLimitCategoriesEnumTireRetreadingAndRepair
  | IssuingCardholderSpendingLimitCategoriesEnumTollsBridgeFees
  | IssuingCardholderSpendingLimitCategoriesEnumTouristAttractionsAndExhibits
  | IssuingCardholderSpendingLimitCategoriesEnumTowingServices
  | IssuingCardholderSpendingLimitCategoriesEnumTrailerParksCampgrounds
  | IssuingCardholderSpendingLimitCategoriesEnumTransportationServices
  | IssuingCardholderSpendingLimitCategoriesEnumTravelAgenciesTourOperators
  | IssuingCardholderSpendingLimitCategoriesEnumTruckStopIteration
  | IssuingCardholderSpendingLimitCategoriesEnumTruckUtilityTrailerRentals
  | IssuingCardholderSpendingLimitCategoriesEnumTypesettingPlateMakingAndRelatedServices
  | IssuingCardholderSpendingLimitCategoriesEnumTypewriterStores
  | IssuingCardholderSpendingLimitCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
  | IssuingCardholderSpendingLimitCategoriesEnumUniformsCommercialClothing
  | IssuingCardholderSpendingLimitCategoriesEnumUsedMerchandiseAndSecondhandStores
  | IssuingCardholderSpendingLimitCategoriesEnumUtilities
  | IssuingCardholderSpendingLimitCategoriesEnumVarietyStores
  | IssuingCardholderSpendingLimitCategoriesEnumVeterinaryServices
  | IssuingCardholderSpendingLimitCategoriesEnumVideoAmusementGameSupplies
  | IssuingCardholderSpendingLimitCategoriesEnumVideoGameArcades
  | IssuingCardholderSpendingLimitCategoriesEnumVideoTapeRentalStores
  | IssuingCardholderSpendingLimitCategoriesEnumVocationalTradeSchools
  | IssuingCardholderSpendingLimitCategoriesEnumWatchJewelryRepair
  | IssuingCardholderSpendingLimitCategoriesEnumWeldingRepair
  | IssuingCardholderSpendingLimitCategoriesEnumWholesaleClubs
  | IssuingCardholderSpendingLimitCategoriesEnumWigAndToupeeStores
  | IssuingCardholderSpendingLimitCategoriesEnumWiresMoneyOrders
  | IssuingCardholderSpendingLimitCategoriesEnumWomensAccessoryAndSpecialtyShops
  | IssuingCardholderSpendingLimitCategoriesEnumWomensReadyToWearStores
  | IssuingCardholderSpendingLimitCategoriesEnumWreckingAndSalvageYards
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardholderSpendingLimitCategoriesEnum where
  toJSON e = String $ case e of
    IssuingCardholderSpendingLimitCategoriesEnumAcRefrigerationRepair -> "ac_refrigeration_repair"
    IssuingCardholderSpendingLimitCategoriesEnumAccountingBookkeepingServices -> "accounting_bookkeeping_services"
    IssuingCardholderSpendingLimitCategoriesEnumAdvertisingServices -> "advertising_services"
    IssuingCardholderSpendingLimitCategoriesEnumAgriculturalCooperative -> "agricultural_cooperative"
    IssuingCardholderSpendingLimitCategoriesEnumAirlinesAirCarriers -> "airlines_air_carriers"
    IssuingCardholderSpendingLimitCategoriesEnumAirportsFlyingFields -> "airports_flying_fields"
    IssuingCardholderSpendingLimitCategoriesEnumAmbulanceServices -> "ambulance_services"
    IssuingCardholderSpendingLimitCategoriesEnumAmusementParksCarnivals -> "amusement_parks_carnivals"
    IssuingCardholderSpendingLimitCategoriesEnumAntiqueReproductions -> "antique_reproductions"
    IssuingCardholderSpendingLimitCategoriesEnumAntiqueShops -> "antique_shops"
    IssuingCardholderSpendingLimitCategoriesEnumAquariums -> "aquariums"
    IssuingCardholderSpendingLimitCategoriesEnumArchitecturalSurveyingServices -> "architectural_surveying_services"
    IssuingCardholderSpendingLimitCategoriesEnumArtDealersAndGalleries -> "art_dealers_and_galleries"
    IssuingCardholderSpendingLimitCategoriesEnumArtistsSupplyAndCraftShops -> "artists_supply_and_craft_shops"
    IssuingCardholderSpendingLimitCategoriesEnumAutoAndHomeSupplyStores -> "auto_and_home_supply_stores"
    IssuingCardholderSpendingLimitCategoriesEnumAutoBodyRepairShops -> "auto_body_repair_shops"
    IssuingCardholderSpendingLimitCategoriesEnumAutoPaintShops -> "auto_paint_shops"
    IssuingCardholderSpendingLimitCategoriesEnumAutoServiceShops -> "auto_service_shops"
    IssuingCardholderSpendingLimitCategoriesEnumAutomatedCashDisburse -> "automated_cash_disburse"
    IssuingCardholderSpendingLimitCategoriesEnumAutomatedFuelDispensers -> "automated_fuel_dispensers"
    IssuingCardholderSpendingLimitCategoriesEnumAutomobileAssociations -> "automobile_associations"
    IssuingCardholderSpendingLimitCategoriesEnumAutomotivePartsAndAccessoriesStores -> "automotive_parts_and_accessories_stores"
    IssuingCardholderSpendingLimitCategoriesEnumAutomotiveTireStores -> "automotive_tire_stores"
    IssuingCardholderSpendingLimitCategoriesEnumBailAndBondPayments -> "bail_and_bond_payments"
    IssuingCardholderSpendingLimitCategoriesEnumBakeries -> "bakeries"
    IssuingCardholderSpendingLimitCategoriesEnumBandsOrchestras -> "bands_orchestras"
    IssuingCardholderSpendingLimitCategoriesEnumBarberAndBeautyShops -> "barber_and_beauty_shops"
    IssuingCardholderSpendingLimitCategoriesEnumBettingCasinoGambling -> "betting_casino_gambling"
    IssuingCardholderSpendingLimitCategoriesEnumBicycleShops -> "bicycle_shops"
    IssuingCardholderSpendingLimitCategoriesEnumBilliardPoolEstablishments -> "billiard_pool_establishments"
    IssuingCardholderSpendingLimitCategoriesEnumBoatDealers -> "boat_dealers"
    IssuingCardholderSpendingLimitCategoriesEnumBoatRentalsAndLeases -> "boat_rentals_and_leases"
    IssuingCardholderSpendingLimitCategoriesEnumBookStores -> "book_stores"
    IssuingCardholderSpendingLimitCategoriesEnumBooksPeriodicalsAndNewspapers -> "books_periodicals_and_newspapers"
    IssuingCardholderSpendingLimitCategoriesEnumBowlingAlleys -> "bowling_alleys"
    IssuingCardholderSpendingLimitCategoriesEnumBusLines -> "bus_lines"
    IssuingCardholderSpendingLimitCategoriesEnumBusinessSecretarialSchools -> "business_secretarial_schools"
    IssuingCardholderSpendingLimitCategoriesEnumBuyingShoppingServices -> "buying_shopping_services"
    IssuingCardholderSpendingLimitCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio -> "cable_satellite_and_other_pay_television_and_radio"
    IssuingCardholderSpendingLimitCategoriesEnumCameraAndPhotographicSupplyStores -> "camera_and_photographic_supply_stores"
    IssuingCardholderSpendingLimitCategoriesEnumCandyNutAndConfectioneryStores -> "candy_nut_and_confectionery_stores"
    IssuingCardholderSpendingLimitCategoriesEnumCarAndTruckDealersNewUsed -> "car_and_truck_dealers_new_used"
    IssuingCardholderSpendingLimitCategoriesEnumCarAndTruckDealersUsedOnly -> "car_and_truck_dealers_used_only"
    IssuingCardholderSpendingLimitCategoriesEnumCarRentalAgencies -> "car_rental_agencies"
    IssuingCardholderSpendingLimitCategoriesEnumCarWashes -> "car_washes"
    IssuingCardholderSpendingLimitCategoriesEnumCarpentryServices -> "carpentry_services"
    IssuingCardholderSpendingLimitCategoriesEnumCarpetUpholsteryCleaning -> "carpet_upholstery_cleaning"
    IssuingCardholderSpendingLimitCategoriesEnumCaterers -> "caterers"
    IssuingCardholderSpendingLimitCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising -> "charitable_and_social_service_organizations_fundraising"
    IssuingCardholderSpendingLimitCategoriesEnumChemicalsAndAlliedProducts -> "chemicals_and_allied_products"
    IssuingCardholderSpendingLimitCategoriesEnumChidrensAndInfantsWearStores -> "chidrens_and_infants_wear_stores"
    IssuingCardholderSpendingLimitCategoriesEnumChildCareServices -> "child_care_services"
    IssuingCardholderSpendingLimitCategoriesEnumChiropodistsPodiatrists -> "chiropodists_podiatrists"
    IssuingCardholderSpendingLimitCategoriesEnumChiropractors -> "chiropractors"
    IssuingCardholderSpendingLimitCategoriesEnumCigarStoresAndStands -> "cigar_stores_and_stands"
    IssuingCardholderSpendingLimitCategoriesEnumCivicSocialFraternalAssociations -> "civic_social_fraternal_associations"
    IssuingCardholderSpendingLimitCategoriesEnumCleaningAndMaintenance -> "cleaning_and_maintenance"
    IssuingCardholderSpendingLimitCategoriesEnumClothingRental -> "clothing_rental"
    IssuingCardholderSpendingLimitCategoriesEnumCollegesUniversities -> "colleges_universities"
    IssuingCardholderSpendingLimitCategoriesEnumCommercialEquipment -> "commercial_equipment"
    IssuingCardholderSpendingLimitCategoriesEnumCommercialFootwear -> "commercial_footwear"
    IssuingCardholderSpendingLimitCategoriesEnumCommercialPhotographyArtAndGraphics -> "commercial_photography_art_and_graphics"
    IssuingCardholderSpendingLimitCategoriesEnumCommuterTransportAndFerries -> "commuter_transport_and_ferries"
    IssuingCardholderSpendingLimitCategoriesEnumComputerNetworkServices -> "computer_network_services"
    IssuingCardholderSpendingLimitCategoriesEnumComputerProgramming -> "computer_programming"
    IssuingCardholderSpendingLimitCategoriesEnumComputerRepair -> "computer_repair"
    IssuingCardholderSpendingLimitCategoriesEnumComputerSoftwareStores -> "computer_software_stores"
    IssuingCardholderSpendingLimitCategoriesEnumComputersPeripheralsAndSoftware -> "computers_peripherals_and_software"
    IssuingCardholderSpendingLimitCategoriesEnumConcreteWorkServices -> "concrete_work_services"
    IssuingCardholderSpendingLimitCategoriesEnumConstructionMaterials -> "construction_materials"
    IssuingCardholderSpendingLimitCategoriesEnumConsultingPublicRelations -> "consulting_public_relations"
    IssuingCardholderSpendingLimitCategoriesEnumCorrespondenceSchools -> "correspondence_schools"
    IssuingCardholderSpendingLimitCategoriesEnumCosmeticStores -> "cosmetic_stores"
    IssuingCardholderSpendingLimitCategoriesEnumCounselingServices -> "counseling_services"
    IssuingCardholderSpendingLimitCategoriesEnumCountryClubs -> "country_clubs"
    IssuingCardholderSpendingLimitCategoriesEnumCourierServices -> "courier_services"
    IssuingCardholderSpendingLimitCategoriesEnumCourtCosts -> "court_costs"
    IssuingCardholderSpendingLimitCategoriesEnumCreditReportingAgencies -> "credit_reporting_agencies"
    IssuingCardholderSpendingLimitCategoriesEnumCruiseLines -> "cruise_lines"
    IssuingCardholderSpendingLimitCategoriesEnumDairyProductsStores -> "dairy_products_stores"
    IssuingCardholderSpendingLimitCategoriesEnumDanceHallStudiosSchools -> "dance_hall_studios_schools"
    IssuingCardholderSpendingLimitCategoriesEnumDatingEscortServices -> "dating_escort_services"
    IssuingCardholderSpendingLimitCategoriesEnumDentistsOrthodontists -> "dentists_orthodontists"
    IssuingCardholderSpendingLimitCategoriesEnumDepartmentStores -> "department_stores"
    IssuingCardholderSpendingLimitCategoriesEnumDetectiveAgencies -> "detective_agencies"
    IssuingCardholderSpendingLimitCategoriesEnumDigitalGoodsApplications -> "digital_goods_applications"
    IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingCatalogMerchant -> "direct_marketing_catalog_merchant"
    IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant -> "direct_marketing_combination_catalog_and_retail_merchant"
    IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingInboundTelemarketing -> "direct_marketing_inbound_telemarketing"
    IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingInsuranceServices -> "direct_marketing_insurance_services"
    IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingOther -> "direct_marketing_other"
    IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingOutboundTelemarketing -> "direct_marketing_outbound_telemarketing"
    IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingSubscription -> "direct_marketing_subscription"
    IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingTravel -> "direct_marketing_travel"
    IssuingCardholderSpendingLimitCategoriesEnumDiscountStores -> "discount_stores"
    IssuingCardholderSpendingLimitCategoriesEnumDoctors -> "doctors"
    IssuingCardholderSpendingLimitCategoriesEnumDoorToDoorSales -> "door_to_door_sales"
    IssuingCardholderSpendingLimitCategoriesEnumDraperyWindowCoveringAndUpholsteryStores -> "drapery_window_covering_and_upholstery_stores"
    IssuingCardholderSpendingLimitCategoriesEnumDrinkingPlaces -> "drinking_places"
    IssuingCardholderSpendingLimitCategoriesEnumDrugStoresAndPharmacies -> "drug_stores_and_pharmacies"
    IssuingCardholderSpendingLimitCategoriesEnumDrugsDrugProprietariesAndDruggistSundries -> "drugs_drug_proprietaries_and_druggist_sundries"
    IssuingCardholderSpendingLimitCategoriesEnumDryCleaners -> "dry_cleaners"
    IssuingCardholderSpendingLimitCategoriesEnumDurableGoods -> "durable_goods"
    IssuingCardholderSpendingLimitCategoriesEnumDutyFreeStores -> "duty_free_stores"
    IssuingCardholderSpendingLimitCategoriesEnumEatingPlacesRestaurants -> "eating_places_restaurants"
    IssuingCardholderSpendingLimitCategoriesEnumEducationalServices -> "educational_services"
    IssuingCardholderSpendingLimitCategoriesEnumElectricRazorStores -> "electric_razor_stores"
    IssuingCardholderSpendingLimitCategoriesEnumElectricalPartsAndEquipment -> "electrical_parts_and_equipment"
    IssuingCardholderSpendingLimitCategoriesEnumElectricalServices -> "electrical_services"
    IssuingCardholderSpendingLimitCategoriesEnumElectronicsRepairShops -> "electronics_repair_shops"
    IssuingCardholderSpendingLimitCategoriesEnumElectronicsStores -> "electronics_stores"
    IssuingCardholderSpendingLimitCategoriesEnumElementarySecondarySchools -> "elementary_secondary_schools"
    IssuingCardholderSpendingLimitCategoriesEnumEmploymentTempAgencies -> "employment_temp_agencies"
    IssuingCardholderSpendingLimitCategoriesEnumEquipmentRental -> "equipment_rental"
    IssuingCardholderSpendingLimitCategoriesEnumExterminatingServices -> "exterminating_services"
    IssuingCardholderSpendingLimitCategoriesEnumFamilyClothingStores -> "family_clothing_stores"
    IssuingCardholderSpendingLimitCategoriesEnumFastFoodRestaurants -> "fast_food_restaurants"
    IssuingCardholderSpendingLimitCategoriesEnumFinancialInstitutions -> "financial_institutions"
    IssuingCardholderSpendingLimitCategoriesEnumFinesGovernmentAdministrativeEntities -> "fines_government_administrative_entities"
    IssuingCardholderSpendingLimitCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores -> "fireplace_fireplace_screens_and_accessories_stores"
    IssuingCardholderSpendingLimitCategoriesEnumFloorCoveringStores -> "floor_covering_stores"
    IssuingCardholderSpendingLimitCategoriesEnumFlorists -> "florists"
    IssuingCardholderSpendingLimitCategoriesEnumFloristsSuppliesNurseryStockAndFlowers -> "florists_supplies_nursery_stock_and_flowers"
    IssuingCardholderSpendingLimitCategoriesEnumFreezerAndLockerMeatProvisioners -> "freezer_and_locker_meat_provisioners"
    IssuingCardholderSpendingLimitCategoriesEnumFuelDealersNonAutomotive -> "fuel_dealers_non_automotive"
    IssuingCardholderSpendingLimitCategoriesEnumFuneralServicesCrematories -> "funeral_services_crematories"
    IssuingCardholderSpendingLimitCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances -> "furniture_home_furnishings_and_equipment_stores_except_appliances"
    IssuingCardholderSpendingLimitCategoriesEnumFurnitureRepairRefinishing -> "furniture_repair_refinishing"
    IssuingCardholderSpendingLimitCategoriesEnumFurriersAndFurShops -> "furriers_and_fur_shops"
    IssuingCardholderSpendingLimitCategoriesEnumGeneralServices -> "general_services"
    IssuingCardholderSpendingLimitCategoriesEnumGiftCardNoveltyAndSouvenirShops -> "gift_card_novelty_and_souvenir_shops"
    IssuingCardholderSpendingLimitCategoriesEnumGlassPaintAndWallpaperStores -> "glass_paint_and_wallpaper_stores"
    IssuingCardholderSpendingLimitCategoriesEnumGlasswareCrystalStores -> "glassware_crystal_stores"
    IssuingCardholderSpendingLimitCategoriesEnumGolfCoursesPublic -> "golf_courses_public"
    IssuingCardholderSpendingLimitCategoriesEnumGovernmentServices -> "government_services"
    IssuingCardholderSpendingLimitCategoriesEnumGroceryStoresSupermarkets -> "grocery_stores_supermarkets"
    IssuingCardholderSpendingLimitCategoriesEnumHardwareEquipmentAndSupplies -> "hardware_equipment_and_supplies"
    IssuingCardholderSpendingLimitCategoriesEnumHardwareStores -> "hardware_stores"
    IssuingCardholderSpendingLimitCategoriesEnumHealthAndBeautySpas -> "health_and_beauty_spas"
    IssuingCardholderSpendingLimitCategoriesEnumHearingAidsSalesAndSupplies -> "hearing_aids_sales_and_supplies"
    IssuingCardholderSpendingLimitCategoriesEnumHeatingPlumbingAC -> "heating_plumbing_a_c"
    IssuingCardholderSpendingLimitCategoriesEnumHobbyToyAndGameShops -> "hobby_toy_and_game_shops"
    IssuingCardholderSpendingLimitCategoriesEnumHomeSupplyWarehouseStores -> "home_supply_warehouse_stores"
    IssuingCardholderSpendingLimitCategoriesEnumHospitals -> "hospitals"
    IssuingCardholderSpendingLimitCategoriesEnumHotelsMotelsAndResorts -> "hotels_motels_and_resorts"
    IssuingCardholderSpendingLimitCategoriesEnumHouseholdApplianceStores -> "household_appliance_stores"
    IssuingCardholderSpendingLimitCategoriesEnumIndustrialSupplies -> "industrial_supplies"
    IssuingCardholderSpendingLimitCategoriesEnumInformationRetrievalServices -> "information_retrieval_services"
    IssuingCardholderSpendingLimitCategoriesEnumInsuranceDefault -> "insurance_default"
    IssuingCardholderSpendingLimitCategoriesEnumInsuranceUnderwritingPremiums -> "insurance_underwriting_premiums"
    IssuingCardholderSpendingLimitCategoriesEnumIntraCompanyPurchases -> "intra_company_purchases"
    IssuingCardholderSpendingLimitCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores -> "jewelry_stores_watches_clocks_and_silverware_stores"
    IssuingCardholderSpendingLimitCategoriesEnumLandscapingServices -> "landscaping_services"
    IssuingCardholderSpendingLimitCategoriesEnumLaundries -> "laundries"
    IssuingCardholderSpendingLimitCategoriesEnumLaundryCleaningServices -> "laundry_cleaning_services"
    IssuingCardholderSpendingLimitCategoriesEnumLegalServicesAttorneys -> "legal_services_attorneys"
    IssuingCardholderSpendingLimitCategoriesEnumLuggageAndLeatherGoodsStores -> "luggage_and_leather_goods_stores"
    IssuingCardholderSpendingLimitCategoriesEnumLumberBuildingMaterialsStores -> "lumber_building_materials_stores"
    IssuingCardholderSpendingLimitCategoriesEnumManualCashDisburse -> "manual_cash_disburse"
    IssuingCardholderSpendingLimitCategoriesEnumMarinasServiceAndSupplies -> "marinas_service_and_supplies"
    IssuingCardholderSpendingLimitCategoriesEnumMasonryStoneworkAndPlaster -> "masonry_stonework_and_plaster"
    IssuingCardholderSpendingLimitCategoriesEnumMassageParlors -> "massage_parlors"
    IssuingCardholderSpendingLimitCategoriesEnumMedicalAndDentalLabs -> "medical_and_dental_labs"
    IssuingCardholderSpendingLimitCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies -> "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
    IssuingCardholderSpendingLimitCategoriesEnumMedicalServices -> "medical_services"
    IssuingCardholderSpendingLimitCategoriesEnumMembershipOrganizations -> "membership_organizations"
    IssuingCardholderSpendingLimitCategoriesEnumMensAndBoysClothingAndAccessoriesStores -> "mens_and_boys_clothing_and_accessories_stores"
    IssuingCardholderSpendingLimitCategoriesEnumMensWomensClothingStores -> "mens_womens_clothing_stores"
    IssuingCardholderSpendingLimitCategoriesEnumMetalServiceCenters -> "metal_service_centers"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneous -> "miscellaneous"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousApparelAndAccessoryShops -> "miscellaneous_apparel_and_accessory_shops"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousAutoDealers -> "miscellaneous_auto_dealers"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousBusinessServices -> "miscellaneous_business_services"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousFoodStores -> "miscellaneous_food_stores"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousGeneralMerchandise -> "miscellaneous_general_merchandise"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousGeneralServices -> "miscellaneous_general_services"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores -> "miscellaneous_home_furnishing_specialty_stores"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousPublishingAndPrinting -> "miscellaneous_publishing_and_printing"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousRecreationServices -> "miscellaneous_recreation_services"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousRepairShops -> "miscellaneous_repair_shops"
    IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousSpecialtyRetail -> "miscellaneous_specialty_retail"
    IssuingCardholderSpendingLimitCategoriesEnumMobileHomeDealers -> "mobile_home_dealers"
    IssuingCardholderSpendingLimitCategoriesEnumMotionPictureTheaters -> "motion_picture_theaters"
    IssuingCardholderSpendingLimitCategoriesEnumMotorFreightCarriersAndTrucking -> "motor_freight_carriers_and_trucking"
    IssuingCardholderSpendingLimitCategoriesEnumMotorHomesDealers -> "motor_homes_dealers"
    IssuingCardholderSpendingLimitCategoriesEnumMotorVehicleSuppliesAndNewParts -> "motor_vehicle_supplies_and_new_parts"
    IssuingCardholderSpendingLimitCategoriesEnumMotorcycleShopsAndDealers -> "motorcycle_shops_and_dealers"
    IssuingCardholderSpendingLimitCategoriesEnumMotorcycleShopsDealers -> "motorcycle_shops_dealers"
    IssuingCardholderSpendingLimitCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic -> "music_stores_musical_instruments_pianos_and_sheet_music"
    IssuingCardholderSpendingLimitCategoriesEnumNewsDealersAndNewsstands -> "news_dealers_and_newsstands"
    IssuingCardholderSpendingLimitCategoriesEnumNonFiMoneyOrders -> "non_fi_money_orders"
    IssuingCardholderSpendingLimitCategoriesEnumNonFiStoredValueCardPurchaseLoad -> "non_fi_stored_value_card_purchase_load"
    IssuingCardholderSpendingLimitCategoriesEnumNondurableGoods -> "nondurable_goods"
    IssuingCardholderSpendingLimitCategoriesEnumNurseriesLawnAndGardenSupplyStores -> "nurseries_lawn_and_garden_supply_stores"
    IssuingCardholderSpendingLimitCategoriesEnumNursingPersonalCare -> "nursing_personal_care"
    IssuingCardholderSpendingLimitCategoriesEnumOfficeAndCommercialFurniture -> "office_and_commercial_furniture"
    IssuingCardholderSpendingLimitCategoriesEnumOpticiansEyeglasses -> "opticians_eyeglasses"
    IssuingCardholderSpendingLimitCategoriesEnumOptometristsOphthalmologist -> "optometrists_ophthalmologist"
    IssuingCardholderSpendingLimitCategoriesEnumOrthopedicGoodsProstheticDevices -> "orthopedic_goods_prosthetic_devices"
    IssuingCardholderSpendingLimitCategoriesEnumOsteopaths -> "osteopaths"
    IssuingCardholderSpendingLimitCategoriesEnumPackageStoresBeerWineAndLiquor -> "package_stores_beer_wine_and_liquor"
    IssuingCardholderSpendingLimitCategoriesEnumPaintsVarnishesAndSupplies -> "paints_varnishes_and_supplies"
    IssuingCardholderSpendingLimitCategoriesEnumParkingLotsGarages -> "parking_lots_garages"
    IssuingCardholderSpendingLimitCategoriesEnumPassengerRailways -> "passenger_railways"
    IssuingCardholderSpendingLimitCategoriesEnumPawnShops -> "pawn_shops"
    IssuingCardholderSpendingLimitCategoriesEnumPetShopsPetFoodAndSupplies -> "pet_shops_pet_food_and_supplies"
    IssuingCardholderSpendingLimitCategoriesEnumPetroleumAndPetroleumProducts -> "petroleum_and_petroleum_products"
    IssuingCardholderSpendingLimitCategoriesEnumPhotoDeveloping -> "photo_developing"
    IssuingCardholderSpendingLimitCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies -> "photographic_photocopy_microfilm_equipment_and_supplies"
    IssuingCardholderSpendingLimitCategoriesEnumPhotographicStudios -> "photographic_studios"
    IssuingCardholderSpendingLimitCategoriesEnumPictureVideoProduction -> "picture_video_production"
    IssuingCardholderSpendingLimitCategoriesEnumPieceGoodsNotionsAndOtherDryGoods -> "piece_goods_notions_and_other_dry_goods"
    IssuingCardholderSpendingLimitCategoriesEnumPlumbingHeatingEquipmentAndSupplies -> "plumbing_heating_equipment_and_supplies"
    IssuingCardholderSpendingLimitCategoriesEnumPoliticalOrganizations -> "political_organizations"
    IssuingCardholderSpendingLimitCategoriesEnumPostalServicesGovernmentOnly -> "postal_services_government_only"
    IssuingCardholderSpendingLimitCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry -> "precious_stones_and_metals_watches_and_jewelry"
    IssuingCardholderSpendingLimitCategoriesEnumProfessionalServices -> "professional_services"
    IssuingCardholderSpendingLimitCategoriesEnumPublicWarehousingAndStorage -> "public_warehousing_and_storage"
    IssuingCardholderSpendingLimitCategoriesEnumQuickCopyReproAndBlueprint -> "quick_copy_repro_and_blueprint"
    IssuingCardholderSpendingLimitCategoriesEnumRailroads -> "railroads"
    IssuingCardholderSpendingLimitCategoriesEnumRealEstateAgentsAndManagersRentals -> "real_estate_agents_and_managers_rentals"
    IssuingCardholderSpendingLimitCategoriesEnumRecordStores -> "record_stores"
    IssuingCardholderSpendingLimitCategoriesEnumRecreationalVehicleRentals -> "recreational_vehicle_rentals"
    IssuingCardholderSpendingLimitCategoriesEnumReligiousGoodsStores -> "religious_goods_stores"
    IssuingCardholderSpendingLimitCategoriesEnumReligiousOrganizations -> "religious_organizations"
    IssuingCardholderSpendingLimitCategoriesEnumRoofingSidingSheetMetal -> "roofing_siding_sheet_metal"
    IssuingCardholderSpendingLimitCategoriesEnumSecretarialSupportServices -> "secretarial_support_services"
    IssuingCardholderSpendingLimitCategoriesEnumSecurityBrokersDealers -> "security_brokers_dealers"
    IssuingCardholderSpendingLimitCategoriesEnumServiceStations -> "service_stations"
    IssuingCardholderSpendingLimitCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores -> "sewing_needlework_fabric_and_piece_goods_stores"
    IssuingCardholderSpendingLimitCategoriesEnumShoeRepairHatCleaning -> "shoe_repair_hat_cleaning"
    IssuingCardholderSpendingLimitCategoriesEnumShoeStores -> "shoe_stores"
    IssuingCardholderSpendingLimitCategoriesEnumSmallApplianceRepair -> "small_appliance_repair"
    IssuingCardholderSpendingLimitCategoriesEnumSnowmobileDealers -> "snowmobile_dealers"
    IssuingCardholderSpendingLimitCategoriesEnumSpecialTradeServices -> "special_trade_services"
    IssuingCardholderSpendingLimitCategoriesEnumSpecialtyCleaning -> "specialty_cleaning"
    IssuingCardholderSpendingLimitCategoriesEnumSportingGoodsStores -> "sporting_goods_stores"
    IssuingCardholderSpendingLimitCategoriesEnumSportingRecreationCamps -> "sporting_recreation_camps"
    IssuingCardholderSpendingLimitCategoriesEnumSportsAndRidingApparelStores -> "sports_and_riding_apparel_stores"
    IssuingCardholderSpendingLimitCategoriesEnumSportsClubsFields -> "sports_clubs_fields"
    IssuingCardholderSpendingLimitCategoriesEnumStampAndCoinStores -> "stamp_and_coin_stores"
    IssuingCardholderSpendingLimitCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper -> "stationary_office_supplies_printing_and_writing_paper"
    IssuingCardholderSpendingLimitCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores -> "stationery_stores_office_and_school_supply_stores"
    IssuingCardholderSpendingLimitCategoriesEnumSwimmingPoolsSales -> "swimming_pools_sales"
    IssuingCardholderSpendingLimitCategoriesEnumTUiTravelGermany -> "t_ui_travel_germany"
    IssuingCardholderSpendingLimitCategoriesEnumTailorsAlterations -> "tailors_alterations"
    IssuingCardholderSpendingLimitCategoriesEnumTaxPaymentsGovernmentAgencies -> "tax_payments_government_agencies"
    IssuingCardholderSpendingLimitCategoriesEnumTaxPreparationServices -> "tax_preparation_services"
    IssuingCardholderSpendingLimitCategoriesEnumTaxicabsLimousines -> "taxicabs_limousines"
    IssuingCardholderSpendingLimitCategoriesEnumTelecommunicationEquipmentAndTelephoneSales -> "telecommunication_equipment_and_telephone_sales"
    IssuingCardholderSpendingLimitCategoriesEnumTelecommunicationServices -> "telecommunication_services"
    IssuingCardholderSpendingLimitCategoriesEnumTelegraphServices -> "telegraph_services"
    IssuingCardholderSpendingLimitCategoriesEnumTentAndAwningShops -> "tent_and_awning_shops"
    IssuingCardholderSpendingLimitCategoriesEnumTestingLaboratories -> "testing_laboratories"
    IssuingCardholderSpendingLimitCategoriesEnumTheatricalTicketAgencies -> "theatrical_ticket_agencies"
    IssuingCardholderSpendingLimitCategoriesEnumTimeshares -> "timeshares"
    IssuingCardholderSpendingLimitCategoriesEnumTireRetreadingAndRepair -> "tire_retreading_and_repair"
    IssuingCardholderSpendingLimitCategoriesEnumTollsBridgeFees -> "tolls_bridge_fees"
    IssuingCardholderSpendingLimitCategoriesEnumTouristAttractionsAndExhibits -> "tourist_attractions_and_exhibits"
    IssuingCardholderSpendingLimitCategoriesEnumTowingServices -> "towing_services"
    IssuingCardholderSpendingLimitCategoriesEnumTrailerParksCampgrounds -> "trailer_parks_campgrounds"
    IssuingCardholderSpendingLimitCategoriesEnumTransportationServices -> "transportation_services"
    IssuingCardholderSpendingLimitCategoriesEnumTravelAgenciesTourOperators -> "travel_agencies_tour_operators"
    IssuingCardholderSpendingLimitCategoriesEnumTruckStopIteration -> "truck_stop_iteration"
    IssuingCardholderSpendingLimitCategoriesEnumTruckUtilityTrailerRentals -> "truck_utility_trailer_rentals"
    IssuingCardholderSpendingLimitCategoriesEnumTypesettingPlateMakingAndRelatedServices -> "typesetting_plate_making_and_related_services"
    IssuingCardholderSpendingLimitCategoriesEnumTypewriterStores -> "typewriter_stores"
    IssuingCardholderSpendingLimitCategoriesEnumUSFederalGovernmentAgenciesOrDepartments -> "u_s_federal_government_agencies_or_departments"
    IssuingCardholderSpendingLimitCategoriesEnumUniformsCommercialClothing -> "uniforms_commercial_clothing"
    IssuingCardholderSpendingLimitCategoriesEnumUsedMerchandiseAndSecondhandStores -> "used_merchandise_and_secondhand_stores"
    IssuingCardholderSpendingLimitCategoriesEnumUtilities -> "utilities"
    IssuingCardholderSpendingLimitCategoriesEnumVarietyStores -> "variety_stores"
    IssuingCardholderSpendingLimitCategoriesEnumVeterinaryServices -> "veterinary_services"
    IssuingCardholderSpendingLimitCategoriesEnumVideoAmusementGameSupplies -> "video_amusement_game_supplies"
    IssuingCardholderSpendingLimitCategoriesEnumVideoGameArcades -> "video_game_arcades"
    IssuingCardholderSpendingLimitCategoriesEnumVideoTapeRentalStores -> "video_tape_rental_stores"
    IssuingCardholderSpendingLimitCategoriesEnumVocationalTradeSchools -> "vocational_trade_schools"
    IssuingCardholderSpendingLimitCategoriesEnumWatchJewelryRepair -> "watch_jewelry_repair"
    IssuingCardholderSpendingLimitCategoriesEnumWeldingRepair -> "welding_repair"
    IssuingCardholderSpendingLimitCategoriesEnumWholesaleClubs -> "wholesale_clubs"
    IssuingCardholderSpendingLimitCategoriesEnumWigAndToupeeStores -> "wig_and_toupee_stores"
    IssuingCardholderSpendingLimitCategoriesEnumWiresMoneyOrders -> "wires_money_orders"
    IssuingCardholderSpendingLimitCategoriesEnumWomensAccessoryAndSpecialtyShops -> "womens_accessory_and_specialty_shops"
    IssuingCardholderSpendingLimitCategoriesEnumWomensReadyToWearStores -> "womens_ready_to_wear_stores"
    IssuingCardholderSpendingLimitCategoriesEnumWreckingAndSalvageYards -> "wrecking_and_salvage_yards"

instance FromJSON IssuingCardholderSpendingLimitCategoriesEnum where
  parseJSON = withText "IssuingCardholderSpendingLimitCategoriesEnum" $ \case
    "ac_refrigeration_repair" -> pure IssuingCardholderSpendingLimitCategoriesEnumAcRefrigerationRepair
    "accounting_bookkeeping_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumAccountingBookkeepingServices
    "advertising_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumAdvertisingServices
    "agricultural_cooperative" -> pure IssuingCardholderSpendingLimitCategoriesEnumAgriculturalCooperative
    "airlines_air_carriers" -> pure IssuingCardholderSpendingLimitCategoriesEnumAirlinesAirCarriers
    "airports_flying_fields" -> pure IssuingCardholderSpendingLimitCategoriesEnumAirportsFlyingFields
    "ambulance_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumAmbulanceServices
    "amusement_parks_carnivals" -> pure IssuingCardholderSpendingLimitCategoriesEnumAmusementParksCarnivals
    "antique_reproductions" -> pure IssuingCardholderSpendingLimitCategoriesEnumAntiqueReproductions
    "antique_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumAntiqueShops
    "aquariums" -> pure IssuingCardholderSpendingLimitCategoriesEnumAquariums
    "architectural_surveying_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumArchitecturalSurveyingServices
    "art_dealers_and_galleries" -> pure IssuingCardholderSpendingLimitCategoriesEnumArtDealersAndGalleries
    "artists_supply_and_craft_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumArtistsSupplyAndCraftShops
    "auto_and_home_supply_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumAutoAndHomeSupplyStores
    "auto_body_repair_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumAutoBodyRepairShops
    "auto_paint_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumAutoPaintShops
    "auto_service_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumAutoServiceShops
    "automated_cash_disburse" -> pure IssuingCardholderSpendingLimitCategoriesEnumAutomatedCashDisburse
    "automated_fuel_dispensers" -> pure IssuingCardholderSpendingLimitCategoriesEnumAutomatedFuelDispensers
    "automobile_associations" -> pure IssuingCardholderSpendingLimitCategoriesEnumAutomobileAssociations
    "automotive_parts_and_accessories_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumAutomotivePartsAndAccessoriesStores
    "automotive_tire_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumAutomotiveTireStores
    "bail_and_bond_payments" -> pure IssuingCardholderSpendingLimitCategoriesEnumBailAndBondPayments
    "bakeries" -> pure IssuingCardholderSpendingLimitCategoriesEnumBakeries
    "bands_orchestras" -> pure IssuingCardholderSpendingLimitCategoriesEnumBandsOrchestras
    "barber_and_beauty_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumBarberAndBeautyShops
    "betting_casino_gambling" -> pure IssuingCardholderSpendingLimitCategoriesEnumBettingCasinoGambling
    "bicycle_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumBicycleShops
    "billiard_pool_establishments" -> pure IssuingCardholderSpendingLimitCategoriesEnumBilliardPoolEstablishments
    "boat_dealers" -> pure IssuingCardholderSpendingLimitCategoriesEnumBoatDealers
    "boat_rentals_and_leases" -> pure IssuingCardholderSpendingLimitCategoriesEnumBoatRentalsAndLeases
    "book_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumBookStores
    "books_periodicals_and_newspapers" -> pure IssuingCardholderSpendingLimitCategoriesEnumBooksPeriodicalsAndNewspapers
    "bowling_alleys" -> pure IssuingCardholderSpendingLimitCategoriesEnumBowlingAlleys
    "bus_lines" -> pure IssuingCardholderSpendingLimitCategoriesEnumBusLines
    "business_secretarial_schools" -> pure IssuingCardholderSpendingLimitCategoriesEnumBusinessSecretarialSchools
    "buying_shopping_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumBuyingShoppingServices
    "cable_satellite_and_other_pay_television_and_radio" -> pure IssuingCardholderSpendingLimitCategoriesEnumCableSatelliteAndOtherPayTelevisionAndRadio
    "camera_and_photographic_supply_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumCameraAndPhotographicSupplyStores
    "candy_nut_and_confectionery_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumCandyNutAndConfectioneryStores
    "car_and_truck_dealers_new_used" -> pure IssuingCardholderSpendingLimitCategoriesEnumCarAndTruckDealersNewUsed
    "car_and_truck_dealers_used_only" -> pure IssuingCardholderSpendingLimitCategoriesEnumCarAndTruckDealersUsedOnly
    "car_rental_agencies" -> pure IssuingCardholderSpendingLimitCategoriesEnumCarRentalAgencies
    "car_washes" -> pure IssuingCardholderSpendingLimitCategoriesEnumCarWashes
    "carpentry_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumCarpentryServices
    "carpet_upholstery_cleaning" -> pure IssuingCardholderSpendingLimitCategoriesEnumCarpetUpholsteryCleaning
    "caterers" -> pure IssuingCardholderSpendingLimitCategoriesEnumCaterers
    "charitable_and_social_service_organizations_fundraising" -> pure IssuingCardholderSpendingLimitCategoriesEnumCharitableAndSocialServiceOrganizationsFundraising
    "chemicals_and_allied_products" -> pure IssuingCardholderSpendingLimitCategoriesEnumChemicalsAndAlliedProducts
    "chidrens_and_infants_wear_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumChidrensAndInfantsWearStores
    "child_care_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumChildCareServices
    "chiropodists_podiatrists" -> pure IssuingCardholderSpendingLimitCategoriesEnumChiropodistsPodiatrists
    "chiropractors" -> pure IssuingCardholderSpendingLimitCategoriesEnumChiropractors
    "cigar_stores_and_stands" -> pure IssuingCardholderSpendingLimitCategoriesEnumCigarStoresAndStands
    "civic_social_fraternal_associations" -> pure IssuingCardholderSpendingLimitCategoriesEnumCivicSocialFraternalAssociations
    "cleaning_and_maintenance" -> pure IssuingCardholderSpendingLimitCategoriesEnumCleaningAndMaintenance
    "clothing_rental" -> pure IssuingCardholderSpendingLimitCategoriesEnumClothingRental
    "colleges_universities" -> pure IssuingCardholderSpendingLimitCategoriesEnumCollegesUniversities
    "commercial_equipment" -> pure IssuingCardholderSpendingLimitCategoriesEnumCommercialEquipment
    "commercial_footwear" -> pure IssuingCardholderSpendingLimitCategoriesEnumCommercialFootwear
    "commercial_photography_art_and_graphics" -> pure IssuingCardholderSpendingLimitCategoriesEnumCommercialPhotographyArtAndGraphics
    "commuter_transport_and_ferries" -> pure IssuingCardholderSpendingLimitCategoriesEnumCommuterTransportAndFerries
    "computer_network_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumComputerNetworkServices
    "computer_programming" -> pure IssuingCardholderSpendingLimitCategoriesEnumComputerProgramming
    "computer_repair" -> pure IssuingCardholderSpendingLimitCategoriesEnumComputerRepair
    "computer_software_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumComputerSoftwareStores
    "computers_peripherals_and_software" -> pure IssuingCardholderSpendingLimitCategoriesEnumComputersPeripheralsAndSoftware
    "concrete_work_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumConcreteWorkServices
    "construction_materials" -> pure IssuingCardholderSpendingLimitCategoriesEnumConstructionMaterials
    "consulting_public_relations" -> pure IssuingCardholderSpendingLimitCategoriesEnumConsultingPublicRelations
    "correspondence_schools" -> pure IssuingCardholderSpendingLimitCategoriesEnumCorrespondenceSchools
    "cosmetic_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumCosmeticStores
    "counseling_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumCounselingServices
    "country_clubs" -> pure IssuingCardholderSpendingLimitCategoriesEnumCountryClubs
    "courier_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumCourierServices
    "court_costs" -> pure IssuingCardholderSpendingLimitCategoriesEnumCourtCosts
    "credit_reporting_agencies" -> pure IssuingCardholderSpendingLimitCategoriesEnumCreditReportingAgencies
    "cruise_lines" -> pure IssuingCardholderSpendingLimitCategoriesEnumCruiseLines
    "dairy_products_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumDairyProductsStores
    "dance_hall_studios_schools" -> pure IssuingCardholderSpendingLimitCategoriesEnumDanceHallStudiosSchools
    "dating_escort_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumDatingEscortServices
    "dentists_orthodontists" -> pure IssuingCardholderSpendingLimitCategoriesEnumDentistsOrthodontists
    "department_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumDepartmentStores
    "detective_agencies" -> pure IssuingCardholderSpendingLimitCategoriesEnumDetectiveAgencies
    "digital_goods_applications" -> pure IssuingCardholderSpendingLimitCategoriesEnumDigitalGoodsApplications
    "direct_marketing_catalog_merchant" -> pure IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingCatalogMerchant
    "direct_marketing_combination_catalog_and_retail_merchant" -> pure IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingCombinationCatalogAndRetailMerchant
    "direct_marketing_inbound_telemarketing" -> pure IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingInboundTelemarketing
    "direct_marketing_insurance_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingInsuranceServices
    "direct_marketing_other" -> pure IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingOther
    "direct_marketing_outbound_telemarketing" -> pure IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingOutboundTelemarketing
    "direct_marketing_subscription" -> pure IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingSubscription
    "direct_marketing_travel" -> pure IssuingCardholderSpendingLimitCategoriesEnumDirectMarketingTravel
    "discount_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumDiscountStores
    "doctors" -> pure IssuingCardholderSpendingLimitCategoriesEnumDoctors
    "door_to_door_sales" -> pure IssuingCardholderSpendingLimitCategoriesEnumDoorToDoorSales
    "drapery_window_covering_and_upholstery_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumDraperyWindowCoveringAndUpholsteryStores
    "drinking_places" -> pure IssuingCardholderSpendingLimitCategoriesEnumDrinkingPlaces
    "drug_stores_and_pharmacies" -> pure IssuingCardholderSpendingLimitCategoriesEnumDrugStoresAndPharmacies
    "drugs_drug_proprietaries_and_druggist_sundries" -> pure IssuingCardholderSpendingLimitCategoriesEnumDrugsDrugProprietariesAndDruggistSundries
    "dry_cleaners" -> pure IssuingCardholderSpendingLimitCategoriesEnumDryCleaners
    "durable_goods" -> pure IssuingCardholderSpendingLimitCategoriesEnumDurableGoods
    "duty_free_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumDutyFreeStores
    "eating_places_restaurants" -> pure IssuingCardholderSpendingLimitCategoriesEnumEatingPlacesRestaurants
    "educational_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumEducationalServices
    "electric_razor_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumElectricRazorStores
    "electrical_parts_and_equipment" -> pure IssuingCardholderSpendingLimitCategoriesEnumElectricalPartsAndEquipment
    "electrical_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumElectricalServices
    "electronics_repair_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumElectronicsRepairShops
    "electronics_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumElectronicsStores
    "elementary_secondary_schools" -> pure IssuingCardholderSpendingLimitCategoriesEnumElementarySecondarySchools
    "employment_temp_agencies" -> pure IssuingCardholderSpendingLimitCategoriesEnumEmploymentTempAgencies
    "equipment_rental" -> pure IssuingCardholderSpendingLimitCategoriesEnumEquipmentRental
    "exterminating_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumExterminatingServices
    "family_clothing_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumFamilyClothingStores
    "fast_food_restaurants" -> pure IssuingCardholderSpendingLimitCategoriesEnumFastFoodRestaurants
    "financial_institutions" -> pure IssuingCardholderSpendingLimitCategoriesEnumFinancialInstitutions
    "fines_government_administrative_entities" -> pure IssuingCardholderSpendingLimitCategoriesEnumFinesGovernmentAdministrativeEntities
    "fireplace_fireplace_screens_and_accessories_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumFireplaceFireplaceScreensAndAccessoriesStores
    "floor_covering_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumFloorCoveringStores
    "florists" -> pure IssuingCardholderSpendingLimitCategoriesEnumFlorists
    "florists_supplies_nursery_stock_and_flowers" -> pure IssuingCardholderSpendingLimitCategoriesEnumFloristsSuppliesNurseryStockAndFlowers
    "freezer_and_locker_meat_provisioners" -> pure IssuingCardholderSpendingLimitCategoriesEnumFreezerAndLockerMeatProvisioners
    "fuel_dealers_non_automotive" -> pure IssuingCardholderSpendingLimitCategoriesEnumFuelDealersNonAutomotive
    "funeral_services_crematories" -> pure IssuingCardholderSpendingLimitCategoriesEnumFuneralServicesCrematories
    "furniture_home_furnishings_and_equipment_stores_except_appliances" -> pure IssuingCardholderSpendingLimitCategoriesEnumFurnitureHomeFurnishingsAndEquipmentStoresExceptAppliances
    "furniture_repair_refinishing" -> pure IssuingCardholderSpendingLimitCategoriesEnumFurnitureRepairRefinishing
    "furriers_and_fur_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumFurriersAndFurShops
    "general_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumGeneralServices
    "gift_card_novelty_and_souvenir_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumGiftCardNoveltyAndSouvenirShops
    "glass_paint_and_wallpaper_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumGlassPaintAndWallpaperStores
    "glassware_crystal_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumGlasswareCrystalStores
    "golf_courses_public" -> pure IssuingCardholderSpendingLimitCategoriesEnumGolfCoursesPublic
    "government_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumGovernmentServices
    "grocery_stores_supermarkets" -> pure IssuingCardholderSpendingLimitCategoriesEnumGroceryStoresSupermarkets
    "hardware_equipment_and_supplies" -> pure IssuingCardholderSpendingLimitCategoriesEnumHardwareEquipmentAndSupplies
    "hardware_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumHardwareStores
    "health_and_beauty_spas" -> pure IssuingCardholderSpendingLimitCategoriesEnumHealthAndBeautySpas
    "hearing_aids_sales_and_supplies" -> pure IssuingCardholderSpendingLimitCategoriesEnumHearingAidsSalesAndSupplies
    "heating_plumbing_a_c" -> pure IssuingCardholderSpendingLimitCategoriesEnumHeatingPlumbingAC
    "hobby_toy_and_game_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumHobbyToyAndGameShops
    "home_supply_warehouse_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumHomeSupplyWarehouseStores
    "hospitals" -> pure IssuingCardholderSpendingLimitCategoriesEnumHospitals
    "hotels_motels_and_resorts" -> pure IssuingCardholderSpendingLimitCategoriesEnumHotelsMotelsAndResorts
    "household_appliance_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumHouseholdApplianceStores
    "industrial_supplies" -> pure IssuingCardholderSpendingLimitCategoriesEnumIndustrialSupplies
    "information_retrieval_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumInformationRetrievalServices
    "insurance_default" -> pure IssuingCardholderSpendingLimitCategoriesEnumInsuranceDefault
    "insurance_underwriting_premiums" -> pure IssuingCardholderSpendingLimitCategoriesEnumInsuranceUnderwritingPremiums
    "intra_company_purchases" -> pure IssuingCardholderSpendingLimitCategoriesEnumIntraCompanyPurchases
    "jewelry_stores_watches_clocks_and_silverware_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumJewelryStoresWatchesClocksAndSilverwareStores
    "landscaping_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumLandscapingServices
    "laundries" -> pure IssuingCardholderSpendingLimitCategoriesEnumLaundries
    "laundry_cleaning_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumLaundryCleaningServices
    "legal_services_attorneys" -> pure IssuingCardholderSpendingLimitCategoriesEnumLegalServicesAttorneys
    "luggage_and_leather_goods_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumLuggageAndLeatherGoodsStores
    "lumber_building_materials_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumLumberBuildingMaterialsStores
    "manual_cash_disburse" -> pure IssuingCardholderSpendingLimitCategoriesEnumManualCashDisburse
    "marinas_service_and_supplies" -> pure IssuingCardholderSpendingLimitCategoriesEnumMarinasServiceAndSupplies
    "masonry_stonework_and_plaster" -> pure IssuingCardholderSpendingLimitCategoriesEnumMasonryStoneworkAndPlaster
    "massage_parlors" -> pure IssuingCardholderSpendingLimitCategoriesEnumMassageParlors
    "medical_and_dental_labs" -> pure IssuingCardholderSpendingLimitCategoriesEnumMedicalAndDentalLabs
    "medical_dental_ophthalmic_and_hospital_equipment_and_supplies" -> pure IssuingCardholderSpendingLimitCategoriesEnumMedicalDentalOphthalmicAndHospitalEquipmentAndSupplies
    "medical_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumMedicalServices
    "membership_organizations" -> pure IssuingCardholderSpendingLimitCategoriesEnumMembershipOrganizations
    "mens_and_boys_clothing_and_accessories_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumMensAndBoysClothingAndAccessoriesStores
    "mens_womens_clothing_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumMensWomensClothingStores
    "metal_service_centers" -> pure IssuingCardholderSpendingLimitCategoriesEnumMetalServiceCenters
    "miscellaneous" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneous
    "miscellaneous_apparel_and_accessory_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousApparelAndAccessoryShops
    "miscellaneous_auto_dealers" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousAutoDealers
    "miscellaneous_business_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousBusinessServices
    "miscellaneous_food_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousFoodStores
    "miscellaneous_general_merchandise" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousGeneralMerchandise
    "miscellaneous_general_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousGeneralServices
    "miscellaneous_home_furnishing_specialty_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousHomeFurnishingSpecialtyStores
    "miscellaneous_publishing_and_printing" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousPublishingAndPrinting
    "miscellaneous_recreation_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousRecreationServices
    "miscellaneous_repair_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousRepairShops
    "miscellaneous_specialty_retail" -> pure IssuingCardholderSpendingLimitCategoriesEnumMiscellaneousSpecialtyRetail
    "mobile_home_dealers" -> pure IssuingCardholderSpendingLimitCategoriesEnumMobileHomeDealers
    "motion_picture_theaters" -> pure IssuingCardholderSpendingLimitCategoriesEnumMotionPictureTheaters
    "motor_freight_carriers_and_trucking" -> pure IssuingCardholderSpendingLimitCategoriesEnumMotorFreightCarriersAndTrucking
    "motor_homes_dealers" -> pure IssuingCardholderSpendingLimitCategoriesEnumMotorHomesDealers
    "motor_vehicle_supplies_and_new_parts" -> pure IssuingCardholderSpendingLimitCategoriesEnumMotorVehicleSuppliesAndNewParts
    "motorcycle_shops_and_dealers" -> pure IssuingCardholderSpendingLimitCategoriesEnumMotorcycleShopsAndDealers
    "motorcycle_shops_dealers" -> pure IssuingCardholderSpendingLimitCategoriesEnumMotorcycleShopsDealers
    "music_stores_musical_instruments_pianos_and_sheet_music" -> pure IssuingCardholderSpendingLimitCategoriesEnumMusicStoresMusicalInstrumentsPianosAndSheetMusic
    "news_dealers_and_newsstands" -> pure IssuingCardholderSpendingLimitCategoriesEnumNewsDealersAndNewsstands
    "non_fi_money_orders" -> pure IssuingCardholderSpendingLimitCategoriesEnumNonFiMoneyOrders
    "non_fi_stored_value_card_purchase_load" -> pure IssuingCardholderSpendingLimitCategoriesEnumNonFiStoredValueCardPurchaseLoad
    "nondurable_goods" -> pure IssuingCardholderSpendingLimitCategoriesEnumNondurableGoods
    "nurseries_lawn_and_garden_supply_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumNurseriesLawnAndGardenSupplyStores
    "nursing_personal_care" -> pure IssuingCardholderSpendingLimitCategoriesEnumNursingPersonalCare
    "office_and_commercial_furniture" -> pure IssuingCardholderSpendingLimitCategoriesEnumOfficeAndCommercialFurniture
    "opticians_eyeglasses" -> pure IssuingCardholderSpendingLimitCategoriesEnumOpticiansEyeglasses
    "optometrists_ophthalmologist" -> pure IssuingCardholderSpendingLimitCategoriesEnumOptometristsOphthalmologist
    "orthopedic_goods_prosthetic_devices" -> pure IssuingCardholderSpendingLimitCategoriesEnumOrthopedicGoodsProstheticDevices
    "osteopaths" -> pure IssuingCardholderSpendingLimitCategoriesEnumOsteopaths
    "package_stores_beer_wine_and_liquor" -> pure IssuingCardholderSpendingLimitCategoriesEnumPackageStoresBeerWineAndLiquor
    "paints_varnishes_and_supplies" -> pure IssuingCardholderSpendingLimitCategoriesEnumPaintsVarnishesAndSupplies
    "parking_lots_garages" -> pure IssuingCardholderSpendingLimitCategoriesEnumParkingLotsGarages
    "passenger_railways" -> pure IssuingCardholderSpendingLimitCategoriesEnumPassengerRailways
    "pawn_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumPawnShops
    "pet_shops_pet_food_and_supplies" -> pure IssuingCardholderSpendingLimitCategoriesEnumPetShopsPetFoodAndSupplies
    "petroleum_and_petroleum_products" -> pure IssuingCardholderSpendingLimitCategoriesEnumPetroleumAndPetroleumProducts
    "photo_developing" -> pure IssuingCardholderSpendingLimitCategoriesEnumPhotoDeveloping
    "photographic_photocopy_microfilm_equipment_and_supplies" -> pure IssuingCardholderSpendingLimitCategoriesEnumPhotographicPhotocopyMicrofilmEquipmentAndSupplies
    "photographic_studios" -> pure IssuingCardholderSpendingLimitCategoriesEnumPhotographicStudios
    "picture_video_production" -> pure IssuingCardholderSpendingLimitCategoriesEnumPictureVideoProduction
    "piece_goods_notions_and_other_dry_goods" -> pure IssuingCardholderSpendingLimitCategoriesEnumPieceGoodsNotionsAndOtherDryGoods
    "plumbing_heating_equipment_and_supplies" -> pure IssuingCardholderSpendingLimitCategoriesEnumPlumbingHeatingEquipmentAndSupplies
    "political_organizations" -> pure IssuingCardholderSpendingLimitCategoriesEnumPoliticalOrganizations
    "postal_services_government_only" -> pure IssuingCardholderSpendingLimitCategoriesEnumPostalServicesGovernmentOnly
    "precious_stones_and_metals_watches_and_jewelry" -> pure IssuingCardholderSpendingLimitCategoriesEnumPreciousStonesAndMetalsWatchesAndJewelry
    "professional_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumProfessionalServices
    "public_warehousing_and_storage" -> pure IssuingCardholderSpendingLimitCategoriesEnumPublicWarehousingAndStorage
    "quick_copy_repro_and_blueprint" -> pure IssuingCardholderSpendingLimitCategoriesEnumQuickCopyReproAndBlueprint
    "railroads" -> pure IssuingCardholderSpendingLimitCategoriesEnumRailroads
    "real_estate_agents_and_managers_rentals" -> pure IssuingCardholderSpendingLimitCategoriesEnumRealEstateAgentsAndManagersRentals
    "record_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumRecordStores
    "recreational_vehicle_rentals" -> pure IssuingCardholderSpendingLimitCategoriesEnumRecreationalVehicleRentals
    "religious_goods_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumReligiousGoodsStores
    "religious_organizations" -> pure IssuingCardholderSpendingLimitCategoriesEnumReligiousOrganizations
    "roofing_siding_sheet_metal" -> pure IssuingCardholderSpendingLimitCategoriesEnumRoofingSidingSheetMetal
    "secretarial_support_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumSecretarialSupportServices
    "security_brokers_dealers" -> pure IssuingCardholderSpendingLimitCategoriesEnumSecurityBrokersDealers
    "service_stations" -> pure IssuingCardholderSpendingLimitCategoriesEnumServiceStations
    "sewing_needlework_fabric_and_piece_goods_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumSewingNeedleworkFabricAndPieceGoodsStores
    "shoe_repair_hat_cleaning" -> pure IssuingCardholderSpendingLimitCategoriesEnumShoeRepairHatCleaning
    "shoe_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumShoeStores
    "small_appliance_repair" -> pure IssuingCardholderSpendingLimitCategoriesEnumSmallApplianceRepair
    "snowmobile_dealers" -> pure IssuingCardholderSpendingLimitCategoriesEnumSnowmobileDealers
    "special_trade_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumSpecialTradeServices
    "specialty_cleaning" -> pure IssuingCardholderSpendingLimitCategoriesEnumSpecialtyCleaning
    "sporting_goods_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumSportingGoodsStores
    "sporting_recreation_camps" -> pure IssuingCardholderSpendingLimitCategoriesEnumSportingRecreationCamps
    "sports_and_riding_apparel_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumSportsAndRidingApparelStores
    "sports_clubs_fields" -> pure IssuingCardholderSpendingLimitCategoriesEnumSportsClubsFields
    "stamp_and_coin_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumStampAndCoinStores
    "stationary_office_supplies_printing_and_writing_paper" -> pure IssuingCardholderSpendingLimitCategoriesEnumStationaryOfficeSuppliesPrintingAndWritingPaper
    "stationery_stores_office_and_school_supply_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumStationeryStoresOfficeAndSchoolSupplyStores
    "swimming_pools_sales" -> pure IssuingCardholderSpendingLimitCategoriesEnumSwimmingPoolsSales
    "t_ui_travel_germany" -> pure IssuingCardholderSpendingLimitCategoriesEnumTUiTravelGermany
    "tailors_alterations" -> pure IssuingCardholderSpendingLimitCategoriesEnumTailorsAlterations
    "tax_payments_government_agencies" -> pure IssuingCardholderSpendingLimitCategoriesEnumTaxPaymentsGovernmentAgencies
    "tax_preparation_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumTaxPreparationServices
    "taxicabs_limousines" -> pure IssuingCardholderSpendingLimitCategoriesEnumTaxicabsLimousines
    "telecommunication_equipment_and_telephone_sales" -> pure IssuingCardholderSpendingLimitCategoriesEnumTelecommunicationEquipmentAndTelephoneSales
    "telecommunication_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumTelecommunicationServices
    "telegraph_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumTelegraphServices
    "tent_and_awning_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumTentAndAwningShops
    "testing_laboratories" -> pure IssuingCardholderSpendingLimitCategoriesEnumTestingLaboratories
    "theatrical_ticket_agencies" -> pure IssuingCardholderSpendingLimitCategoriesEnumTheatricalTicketAgencies
    "timeshares" -> pure IssuingCardholderSpendingLimitCategoriesEnumTimeshares
    "tire_retreading_and_repair" -> pure IssuingCardholderSpendingLimitCategoriesEnumTireRetreadingAndRepair
    "tolls_bridge_fees" -> pure IssuingCardholderSpendingLimitCategoriesEnumTollsBridgeFees
    "tourist_attractions_and_exhibits" -> pure IssuingCardholderSpendingLimitCategoriesEnumTouristAttractionsAndExhibits
    "towing_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumTowingServices
    "trailer_parks_campgrounds" -> pure IssuingCardholderSpendingLimitCategoriesEnumTrailerParksCampgrounds
    "transportation_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumTransportationServices
    "travel_agencies_tour_operators" -> pure IssuingCardholderSpendingLimitCategoriesEnumTravelAgenciesTourOperators
    "truck_stop_iteration" -> pure IssuingCardholderSpendingLimitCategoriesEnumTruckStopIteration
    "truck_utility_trailer_rentals" -> pure IssuingCardholderSpendingLimitCategoriesEnumTruckUtilityTrailerRentals
    "typesetting_plate_making_and_related_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumTypesettingPlateMakingAndRelatedServices
    "typewriter_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumTypewriterStores
    "u_s_federal_government_agencies_or_departments" -> pure IssuingCardholderSpendingLimitCategoriesEnumUSFederalGovernmentAgenciesOrDepartments
    "uniforms_commercial_clothing" -> pure IssuingCardholderSpendingLimitCategoriesEnumUniformsCommercialClothing
    "used_merchandise_and_secondhand_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumUsedMerchandiseAndSecondhandStores
    "utilities" -> pure IssuingCardholderSpendingLimitCategoriesEnumUtilities
    "variety_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumVarietyStores
    "veterinary_services" -> pure IssuingCardholderSpendingLimitCategoriesEnumVeterinaryServices
    "video_amusement_game_supplies" -> pure IssuingCardholderSpendingLimitCategoriesEnumVideoAmusementGameSupplies
    "video_game_arcades" -> pure IssuingCardholderSpendingLimitCategoriesEnumVideoGameArcades
    "video_tape_rental_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumVideoTapeRentalStores
    "vocational_trade_schools" -> pure IssuingCardholderSpendingLimitCategoriesEnumVocationalTradeSchools
    "watch_jewelry_repair" -> pure IssuingCardholderSpendingLimitCategoriesEnumWatchJewelryRepair
    "welding_repair" -> pure IssuingCardholderSpendingLimitCategoriesEnumWeldingRepair
    "wholesale_clubs" -> pure IssuingCardholderSpendingLimitCategoriesEnumWholesaleClubs
    "wig_and_toupee_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumWigAndToupeeStores
    "wires_money_orders" -> pure IssuingCardholderSpendingLimitCategoriesEnumWiresMoneyOrders
    "womens_accessory_and_specialty_shops" -> pure IssuingCardholderSpendingLimitCategoriesEnumWomensAccessoryAndSpecialtyShops
    "womens_ready_to_wear_stores" -> pure IssuingCardholderSpendingLimitCategoriesEnumWomensReadyToWearStores
    "wrecking_and_salvage_yards" -> pure IssuingCardholderSpendingLimitCategoriesEnumWreckingAndSalvageYards
    str -> fail (show str <> " is not a known valid option for IssuingCardholderSpendingLimitCategoriesEnum")

data IssuingCardholderSpendingLimitIntervalEnum
  = IssuingCardholderSpendingLimitIntervalEnumAllTime
  | IssuingCardholderSpendingLimitIntervalEnumDaily
  | IssuingCardholderSpendingLimitIntervalEnumMonthly
  | IssuingCardholderSpendingLimitIntervalEnumPerAuthorization
  | IssuingCardholderSpendingLimitIntervalEnumWeekly
  | IssuingCardholderSpendingLimitIntervalEnumYearly
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardholderSpendingLimitIntervalEnum where
  toJSON e = String $ case e of
    IssuingCardholderSpendingLimitIntervalEnumAllTime -> "all_time"
    IssuingCardholderSpendingLimitIntervalEnumDaily -> "daily"
    IssuingCardholderSpendingLimitIntervalEnumMonthly -> "monthly"
    IssuingCardholderSpendingLimitIntervalEnumPerAuthorization -> "per_authorization"
    IssuingCardholderSpendingLimitIntervalEnumWeekly -> "weekly"
    IssuingCardholderSpendingLimitIntervalEnumYearly -> "yearly"

instance FromJSON IssuingCardholderSpendingLimitIntervalEnum where
  parseJSON = withText "IssuingCardholderSpendingLimitIntervalEnum" $ \case
    "all_time" -> pure IssuingCardholderSpendingLimitIntervalEnumAllTime
    "daily" -> pure IssuingCardholderSpendingLimitIntervalEnumDaily
    "monthly" -> pure IssuingCardholderSpendingLimitIntervalEnumMonthly
    "per_authorization" -> pure IssuingCardholderSpendingLimitIntervalEnumPerAuthorization
    "weekly" -> pure IssuingCardholderSpendingLimitIntervalEnumWeekly
    "yearly" -> pure IssuingCardholderSpendingLimitIntervalEnumYearly
    str -> fail (show str <> " is not a known valid option for IssuingCardholderSpendingLimitIntervalEnum")

data IssuingCardholderStatusEnum
  = IssuingCardholderStatusEnumActive
  | IssuingCardholderStatusEnumBlocked
  | IssuingCardholderStatusEnumInactive
  | IssuingCardholderStatusEnumPending
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardholderStatusEnum where
  toJSON e = String $ case e of
    IssuingCardholderStatusEnumActive -> "active"
    IssuingCardholderStatusEnumBlocked -> "blocked"
    IssuingCardholderStatusEnumInactive -> "inactive"
    IssuingCardholderStatusEnumPending -> "pending"

instance FromJSON IssuingCardholderStatusEnum where
  parseJSON = withText "IssuingCardholderStatusEnum" $ \case
    "active" -> pure IssuingCardholderStatusEnumActive
    "blocked" -> pure IssuingCardholderStatusEnumBlocked
    "inactive" -> pure IssuingCardholderStatusEnumInactive
    "pending" -> pure IssuingCardholderStatusEnumPending
    str -> fail (show str <> " is not a known valid option for IssuingCardholderStatusEnum")

data IssuingCardholderTypeEnum
  = IssuingCardholderTypeEnumBusinessEntity
  | IssuingCardholderTypeEnumIndividual
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingCardholderTypeEnum where
  toJSON e = String $ case e of
    IssuingCardholderTypeEnumBusinessEntity -> "business_entity"
    IssuingCardholderTypeEnumIndividual -> "individual"

instance FromJSON IssuingCardholderTypeEnum where
  parseJSON = withText "IssuingCardholderTypeEnum" $ \case
    "business_entity" -> pure IssuingCardholderTypeEnumBusinessEntity
    "individual" -> pure IssuingCardholderTypeEnumIndividual
    str -> fail (show str <> " is not a known valid option for IssuingCardholderTypeEnum")

data IssuingDisputeObjectEnum
  = IssuingDisputeObjectEnumIssuingDispute
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingDisputeObjectEnum where
  toJSON e = String $ case e of
    IssuingDisputeObjectEnumIssuingDispute -> "issuing.dispute"

instance FromJSON IssuingDisputeObjectEnum where
  parseJSON = withText "IssuingDisputeObjectEnum" $ \case
    "issuing.dispute" -> pure IssuingDisputeObjectEnumIssuingDispute
    str -> fail (show str <> " is not a known valid option for IssuingDisputeObjectEnum")

data IssuingDisputeReasonEnum
  = IssuingDisputeReasonEnumOther
  | IssuingDisputeReasonEnumFraudulent
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingDisputeReasonEnum where
  toJSON e = String $ case e of
    IssuingDisputeReasonEnumOther -> "other"
    IssuingDisputeReasonEnumFraudulent -> "fraudulent"

instance FromJSON IssuingDisputeReasonEnum where
  parseJSON = withText "IssuingDisputeReasonEnum" $ \case
    "other" -> pure IssuingDisputeReasonEnumOther
    "fraudulent" -> pure IssuingDisputeReasonEnumFraudulent
    str -> fail (show str <> " is not a known valid option for IssuingDisputeReasonEnum")

data IssuingDisputeStatusEnum
  = IssuingDisputeStatusEnumUnsubmitted
  | IssuingDisputeStatusEnumUnderReview
  | IssuingDisputeStatusEnumWon
  | IssuingDisputeStatusEnumLost
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingDisputeStatusEnum where
  toJSON e = String $ case e of
    IssuingDisputeStatusEnumUnsubmitted -> "unsubmitted"
    IssuingDisputeStatusEnumUnderReview -> "under_review"
    IssuingDisputeStatusEnumWon -> "won"
    IssuingDisputeStatusEnumLost -> "lost"

instance FromJSON IssuingDisputeStatusEnum where
  parseJSON = withText "IssuingDisputeStatusEnum" $ \case
    "unsubmitted" -> pure IssuingDisputeStatusEnumUnsubmitted
    "under_review" -> pure IssuingDisputeStatusEnumUnderReview
    "won" -> pure IssuingDisputeStatusEnumWon
    "lost" -> pure IssuingDisputeStatusEnumLost
    str -> fail (show str <> " is not a known valid option for IssuingDisputeStatusEnum")

data IssuingSettlementObjectEnum
  = IssuingSettlementObjectEnumIssuingSettlement
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingSettlementObjectEnum where
  toJSON e = String $ case e of
    IssuingSettlementObjectEnumIssuingSettlement -> "issuing.settlement"

instance FromJSON IssuingSettlementObjectEnum where
  parseJSON = withText "IssuingSettlementObjectEnum" $ \case
    "issuing.settlement" -> pure IssuingSettlementObjectEnumIssuingSettlement
    str -> fail (show str <> " is not a known valid option for IssuingSettlementObjectEnum")

data IssuingSettlementSettlementServiceEnum
  = IssuingSettlementSettlementServiceEnumInternational
  | IssuingSettlementSettlementServiceEnumUkNationalNet
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingSettlementSettlementServiceEnum where
  toJSON e = String $ case e of
    IssuingSettlementSettlementServiceEnumInternational -> "international"
    IssuingSettlementSettlementServiceEnumUkNationalNet -> "uk_national_net"

instance FromJSON IssuingSettlementSettlementServiceEnum where
  parseJSON = withText "IssuingSettlementSettlementServiceEnum" $ \case
    "international" -> pure IssuingSettlementSettlementServiceEnumInternational
    "uk_national_net" -> pure IssuingSettlementSettlementServiceEnumUkNationalNet
    str -> fail (show str <> " is not a known valid option for IssuingSettlementSettlementServiceEnum")

data IssuingTransactionObjectEnum
  = IssuingTransactionObjectEnumIssuingTransaction
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingTransactionObjectEnum where
  toJSON e = String $ case e of
    IssuingTransactionObjectEnumIssuingTransaction -> "issuing.transaction"

instance FromJSON IssuingTransactionObjectEnum where
  parseJSON = withText "IssuingTransactionObjectEnum" $ \case
    "issuing.transaction" -> pure IssuingTransactionObjectEnumIssuingTransaction
    str -> fail (show str <> " is not a known valid option for IssuingTransactionObjectEnum")

data IssuingTransactionTypeEnum
  = IssuingTransactionTypeEnumCapture
  | IssuingTransactionTypeEnumRefund
  | IssuingTransactionTypeEnumCashWithdrawal
  | IssuingTransactionTypeEnumRefundReversal
  | IssuingTransactionTypeEnumDispute
  | IssuingTransactionTypeEnumDisputeLoss
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingTransactionTypeEnum where
  toJSON e = String $ case e of
    IssuingTransactionTypeEnumCapture -> "capture"
    IssuingTransactionTypeEnumRefund -> "refund"
    IssuingTransactionTypeEnumCashWithdrawal -> "cash_withdrawal"
    IssuingTransactionTypeEnumRefundReversal -> "refund_reversal"
    IssuingTransactionTypeEnumDispute -> "dispute"
    IssuingTransactionTypeEnumDisputeLoss -> "dispute_loss"

instance FromJSON IssuingTransactionTypeEnum where
  parseJSON = withText "IssuingTransactionTypeEnum" $ \case
    "capture" -> pure IssuingTransactionTypeEnumCapture
    "refund" -> pure IssuingTransactionTypeEnumRefund
    "cash_withdrawal" -> pure IssuingTransactionTypeEnumCashWithdrawal
    "refund_reversal" -> pure IssuingTransactionTypeEnumRefundReversal
    "dispute" -> pure IssuingTransactionTypeEnumDispute
    "dispute_loss" -> pure IssuingTransactionTypeEnumDisputeLoss
    str -> fail (show str <> " is not a known valid option for IssuingTransactionTypeEnum")

data IssuingVerificationObjectEnum
  = IssuingVerificationObjectEnumIssuingVerification
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingVerificationObjectEnum where
  toJSON e = String $ case e of
    IssuingVerificationObjectEnumIssuingVerification -> "issuing.verification"

instance FromJSON IssuingVerificationObjectEnum where
  parseJSON = withText "IssuingVerificationObjectEnum" $ \case
    "issuing.verification" -> pure IssuingVerificationObjectEnumIssuingVerification
    str -> fail (show str <> " is not a known valid option for IssuingVerificationObjectEnum")

data IssuingVerificationScopeEnum
  = IssuingVerificationScopeEnumCardPinRetrieve
  | IssuingVerificationScopeEnumCardPinUpdate
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingVerificationScopeEnum where
  toJSON e = String $ case e of
    IssuingVerificationScopeEnumCardPinRetrieve -> "card_pin_retrieve"
    IssuingVerificationScopeEnumCardPinUpdate -> "card_pin_update"

instance FromJSON IssuingVerificationScopeEnum where
  parseJSON = withText "IssuingVerificationScopeEnum" $ \case
    "card_pin_retrieve" -> pure IssuingVerificationScopeEnumCardPinRetrieve
    "card_pin_update" -> pure IssuingVerificationScopeEnumCardPinUpdate
    str -> fail (show str <> " is not a known valid option for IssuingVerificationScopeEnum")

data IssuingVerificationVerificationMethodEnum
  = IssuingVerificationVerificationMethodEnumEmail
  | IssuingVerificationVerificationMethodEnumSms
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON IssuingVerificationVerificationMethodEnum where
  toJSON e = String $ case e of
    IssuingVerificationVerificationMethodEnumEmail -> "email"
    IssuingVerificationVerificationMethodEnumSms -> "sms"

instance FromJSON IssuingVerificationVerificationMethodEnum where
  parseJSON = withText "IssuingVerificationVerificationMethodEnum" $ \case
    "email" -> pure IssuingVerificationVerificationMethodEnumEmail
    "sms" -> pure IssuingVerificationVerificationMethodEnumSms
    str -> fail (show str <> " is not a known valid option for IssuingVerificationVerificationMethodEnum")

data LegalEntityCompanyVerificationDocumentDetailsCodeEnum
  = LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentCorrupt
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentExpired
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedCopy
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedGreyscale
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedOther
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedTestMode
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFraudulent
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentIncomplete
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentInvalid
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentManipulated
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentNotReadable
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentNotUploaded
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentTypeNotSupported
  | LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentTooLarge
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON LegalEntityCompanyVerificationDocumentDetailsCodeEnum where
  toJSON e = String $ case e of
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentCorrupt -> "document_corrupt"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentExpired -> "document_expired"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedCopy -> "document_failed_copy"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedGreyscale -> "document_failed_greyscale"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedOther -> "document_failed_other"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedTestMode -> "document_failed_test_mode"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFraudulent -> "document_fraudulent"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentIncomplete -> "document_incomplete"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentInvalid -> "document_invalid"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentManipulated -> "document_manipulated"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentNotReadable -> "document_not_readable"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentNotUploaded -> "document_not_uploaded"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentTypeNotSupported -> "document_type_not_supported"
    LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentTooLarge -> "document_too_large"

instance FromJSON LegalEntityCompanyVerificationDocumentDetailsCodeEnum where
  parseJSON = withText "LegalEntityCompanyVerificationDocumentDetailsCodeEnum" $ \case
    "document_corrupt" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentCorrupt
    "document_expired" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentExpired
    "document_failed_copy" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedCopy
    "document_failed_greyscale" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedGreyscale
    "document_failed_other" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedOther
    "document_failed_test_mode" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFailedTestMode
    "document_fraudulent" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentFraudulent
    "document_incomplete" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentIncomplete
    "document_invalid" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentInvalid
    "document_manipulated" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentManipulated
    "document_not_readable" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentNotReadable
    "document_not_uploaded" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentNotUploaded
    "document_type_not_supported" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentTypeNotSupported
    "document_too_large" -> pure LegalEntityCompanyVerificationDocumentDetailsCodeEnumDocumentTooLarge
    str -> fail (show str <> " is not a known valid option for LegalEntityCompanyVerificationDocumentDetailsCodeEnum")

data LegalEntityPersonVerificationDetailsCodeEnum
  = LegalEntityPersonVerificationDetailsCodeEnumScanNameMismatch
  | LegalEntityPersonVerificationDetailsCodeEnumFailedKeyedIdentity
  | LegalEntityPersonVerificationDetailsCodeEnumFailedOther
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON LegalEntityPersonVerificationDetailsCodeEnum where
  toJSON e = String $ case e of
    LegalEntityPersonVerificationDetailsCodeEnumScanNameMismatch -> "scan_name_mismatch"
    LegalEntityPersonVerificationDetailsCodeEnumFailedKeyedIdentity -> "failed_keyed_identity"
    LegalEntityPersonVerificationDetailsCodeEnumFailedOther -> "failed_other"

instance FromJSON LegalEntityPersonVerificationDetailsCodeEnum where
  parseJSON = withText "LegalEntityPersonVerificationDetailsCodeEnum" $ \case
    "scan_name_mismatch" -> pure LegalEntityPersonVerificationDetailsCodeEnumScanNameMismatch
    "failed_keyed_identity" -> pure LegalEntityPersonVerificationDetailsCodeEnumFailedKeyedIdentity
    "failed_other" -> pure LegalEntityPersonVerificationDetailsCodeEnumFailedOther
    str -> fail (show str <> " is not a known valid option for LegalEntityPersonVerificationDetailsCodeEnum")

data LegalEntityPersonVerificationDocumentDetailsCodeEnum
  = LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentCorrupt
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedCopy
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentNotReadable
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedGreyscale
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentNotUploaded
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentIdTypeNotSupported
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentIdCountryNotSupported
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedOther
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFraudulent
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentInvalid
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentManipulated
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentMissingBack
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentMissingFront
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentPhotoMismatch
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentTooLarge
  | LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedTestMode
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON LegalEntityPersonVerificationDocumentDetailsCodeEnum where
  toJSON e = String $ case e of
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentCorrupt -> "document_corrupt"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedCopy -> "document_failed_copy"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentNotReadable -> "document_not_readable"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedGreyscale -> "document_failed_greyscale"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentNotUploaded -> "document_not_uploaded"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentIdTypeNotSupported -> "document_id_type_not_supported"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentIdCountryNotSupported -> "document_id_country_not_supported"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedOther -> "document_failed_other"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFraudulent -> "document_fraudulent"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentInvalid -> "document_invalid"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentManipulated -> "document_manipulated"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentMissingBack -> "document_missing_back"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentMissingFront -> "document_missing_front"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentPhotoMismatch -> "document_photo_mismatch"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentTooLarge -> "document_too_large"
    LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedTestMode -> "document_failed_test_mode"

instance FromJSON LegalEntityPersonVerificationDocumentDetailsCodeEnum where
  parseJSON = withText "LegalEntityPersonVerificationDocumentDetailsCodeEnum" $ \case
    "document_corrupt" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentCorrupt
    "document_failed_copy" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedCopy
    "document_not_readable" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentNotReadable
    "document_failed_greyscale" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedGreyscale
    "document_not_uploaded" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentNotUploaded
    "document_id_type_not_supported" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentIdTypeNotSupported
    "document_id_country_not_supported" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentIdCountryNotSupported
    "document_failed_other" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedOther
    "document_fraudulent" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFraudulent
    "document_invalid" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentInvalid
    "document_manipulated" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentManipulated
    "document_missing_back" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentMissingBack
    "document_missing_front" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentMissingFront
    "document_photo_mismatch" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentPhotoMismatch
    "document_too_large" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentTooLarge
    "document_failed_test_mode" -> pure LegalEntityPersonVerificationDocumentDetailsCodeEnumDocumentFailedTestMode
    str -> fail (show str <> " is not a known valid option for LegalEntityPersonVerificationDocumentDetailsCodeEnum")

data LineItemObjectEnum
  = LineItemObjectEnumLineItem
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON LineItemObjectEnum where
  toJSON e = String $ case e of
    LineItemObjectEnumLineItem -> "line_item"

instance FromJSON LineItemObjectEnum where
  parseJSON = withText "LineItemObjectEnum" $ \case
    "line_item" -> pure LineItemObjectEnumLineItem
    str -> fail (show str <> " is not a known valid option for LineItemObjectEnum")

data LineItemTypeEnum
  = LineItemTypeEnumInvoiceitem
  | LineItemTypeEnumSubscription
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON LineItemTypeEnum where
  toJSON e = String $ case e of
    LineItemTypeEnumInvoiceitem -> "invoiceitem"
    LineItemTypeEnumSubscription -> "subscription"

instance FromJSON LineItemTypeEnum where
  parseJSON = withText "LineItemTypeEnum" $ \case
    "invoiceitem" -> pure LineItemTypeEnumInvoiceitem
    "subscription" -> pure LineItemTypeEnumSubscription
    str -> fail (show str <> " is not a known valid option for LineItemTypeEnum")

data LoginLinkObjectEnum
  = LoginLinkObjectEnumLoginLink
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON LoginLinkObjectEnum where
  toJSON e = String $ case e of
    LoginLinkObjectEnumLoginLink -> "login_link"

instance FromJSON LoginLinkObjectEnum where
  parseJSON = withText "LoginLinkObjectEnum" $ \case
    "login_link" -> pure LoginLinkObjectEnumLoginLink
    str -> fail (show str <> " is not a known valid option for LoginLinkObjectEnum")

data OrderItemObjectEnum
  = OrderItemObjectEnumOrderItem
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON OrderItemObjectEnum where
  toJSON e = String $ case e of
    OrderItemObjectEnumOrderItem -> "order_item"

instance FromJSON OrderItemObjectEnum where
  parseJSON = withText "OrderItemObjectEnum" $ \case
    "order_item" -> pure OrderItemObjectEnumOrderItem
    str -> fail (show str <> " is not a known valid option for OrderItemObjectEnum")

data OrderItemTypeEnum
  = OrderItemTypeEnumSku
  | OrderItemTypeEnumTax
  | OrderItemTypeEnumShipping
  | OrderItemTypeEnumDiscount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON OrderItemTypeEnum where
  toJSON e = String $ case e of
    OrderItemTypeEnumSku -> "sku"
    OrderItemTypeEnumTax -> "tax"
    OrderItemTypeEnumShipping -> "shipping"
    OrderItemTypeEnumDiscount -> "discount"

instance FromJSON OrderItemTypeEnum where
  parseJSON = withText "OrderItemTypeEnum" $ \case
    "sku" -> pure OrderItemTypeEnumSku
    "tax" -> pure OrderItemTypeEnumTax
    "shipping" -> pure OrderItemTypeEnumShipping
    "discount" -> pure OrderItemTypeEnumDiscount
    str -> fail (show str <> " is not a known valid option for OrderItemTypeEnum")

data OrderObjectEnum
  = OrderObjectEnumOrder
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON OrderObjectEnum where
  toJSON e = String $ case e of
    OrderObjectEnumOrder -> "order"

instance FromJSON OrderObjectEnum where
  parseJSON = withText "OrderObjectEnum" $ \case
    "order" -> pure OrderObjectEnumOrder
    str -> fail (show str <> " is not a known valid option for OrderObjectEnum")

data OrderReturnObjectEnum
  = OrderReturnObjectEnumOrderReturn
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON OrderReturnObjectEnum where
  toJSON e = String $ case e of
    OrderReturnObjectEnumOrderReturn -> "order_return"

instance FromJSON OrderReturnObjectEnum where
  parseJSON = withText "OrderReturnObjectEnum" $ \case
    "order_return" -> pure OrderReturnObjectEnumOrderReturn
    str -> fail (show str <> " is not a known valid option for OrderReturnObjectEnum")

data OrderStatusEnum
  = OrderStatusEnumCreated
  | OrderStatusEnumPaid
  | OrderStatusEnumCanceled
  | OrderStatusEnumFulfilled
  | OrderStatusEnumReturned
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON OrderStatusEnum where
  toJSON e = String $ case e of
    OrderStatusEnumCreated -> "created"
    OrderStatusEnumPaid -> "paid"
    OrderStatusEnumCanceled -> "canceled"
    OrderStatusEnumFulfilled -> "fulfilled"
    OrderStatusEnumReturned -> "returned"

instance FromJSON OrderStatusEnum where
  parseJSON = withText "OrderStatusEnum" $ \case
    "created" -> pure OrderStatusEnumCreated
    "paid" -> pure OrderStatusEnumPaid
    "canceled" -> pure OrderStatusEnumCanceled
    "fulfilled" -> pure OrderStatusEnumFulfilled
    "returned" -> pure OrderStatusEnumReturned
    str -> fail (show str <> " is not a known valid option for OrderStatusEnum")

data PaymentIntentCancellationReasonEnum
  = PaymentIntentCancellationReasonEnumAbandoned
  | PaymentIntentCancellationReasonEnumAutomatic
  | PaymentIntentCancellationReasonEnumDuplicate
  | PaymentIntentCancellationReasonEnumFailedInvoice
  | PaymentIntentCancellationReasonEnumFraudulent
  | PaymentIntentCancellationReasonEnumRequestedByCustomer
  | PaymentIntentCancellationReasonEnumVoidInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentIntentCancellationReasonEnum where
  toJSON e = String $ case e of
    PaymentIntentCancellationReasonEnumAbandoned -> "abandoned"
    PaymentIntentCancellationReasonEnumAutomatic -> "automatic"
    PaymentIntentCancellationReasonEnumDuplicate -> "duplicate"
    PaymentIntentCancellationReasonEnumFailedInvoice -> "failed_invoice"
    PaymentIntentCancellationReasonEnumFraudulent -> "fraudulent"
    PaymentIntentCancellationReasonEnumRequestedByCustomer -> "requested_by_customer"
    PaymentIntentCancellationReasonEnumVoidInvoice -> "void_invoice"

instance FromJSON PaymentIntentCancellationReasonEnum where
  parseJSON = withText "PaymentIntentCancellationReasonEnum" $ \case
    "abandoned" -> pure PaymentIntentCancellationReasonEnumAbandoned
    "automatic" -> pure PaymentIntentCancellationReasonEnumAutomatic
    "duplicate" -> pure PaymentIntentCancellationReasonEnumDuplicate
    "failed_invoice" -> pure PaymentIntentCancellationReasonEnumFailedInvoice
    "fraudulent" -> pure PaymentIntentCancellationReasonEnumFraudulent
    "requested_by_customer" -> pure PaymentIntentCancellationReasonEnumRequestedByCustomer
    "void_invoice" -> pure PaymentIntentCancellationReasonEnumVoidInvoice
    str -> fail (show str <> " is not a known valid option for PaymentIntentCancellationReasonEnum")

data PaymentIntentCaptureMethodEnum
  = PaymentIntentCaptureMethodEnumAutomatic
  | PaymentIntentCaptureMethodEnumManual
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentIntentCaptureMethodEnum where
  toJSON e = String $ case e of
    PaymentIntentCaptureMethodEnumAutomatic -> "automatic"
    PaymentIntentCaptureMethodEnumManual -> "manual"

instance FromJSON PaymentIntentCaptureMethodEnum where
  parseJSON = withText "PaymentIntentCaptureMethodEnum" $ \case
    "automatic" -> pure PaymentIntentCaptureMethodEnumAutomatic
    "manual" -> pure PaymentIntentCaptureMethodEnumManual
    str -> fail (show str <> " is not a known valid option for PaymentIntentCaptureMethodEnum")

data PaymentIntentConfirmationMethodEnum
  = PaymentIntentConfirmationMethodEnumAutomatic
  | PaymentIntentConfirmationMethodEnumManual
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentIntentConfirmationMethodEnum where
  toJSON e = String $ case e of
    PaymentIntentConfirmationMethodEnumAutomatic -> "automatic"
    PaymentIntentConfirmationMethodEnumManual -> "manual"

instance FromJSON PaymentIntentConfirmationMethodEnum where
  parseJSON = withText "PaymentIntentConfirmationMethodEnum" $ \case
    "automatic" -> pure PaymentIntentConfirmationMethodEnumAutomatic
    "manual" -> pure PaymentIntentConfirmationMethodEnumManual
    str -> fail (show str <> " is not a known valid option for PaymentIntentConfirmationMethodEnum")

data PaymentIntentNextActionTypeEnum
  = PaymentIntentNextActionTypeEnumRedirectToUrl
  | PaymentIntentNextActionTypeEnumUseStripeSdk
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentIntentNextActionTypeEnum where
  toJSON e = String $ case e of
    PaymentIntentNextActionTypeEnumRedirectToUrl -> "redirect_to_url"
    PaymentIntentNextActionTypeEnumUseStripeSdk -> "use_stripe_sdk"

instance FromJSON PaymentIntentNextActionTypeEnum where
  parseJSON = withText "PaymentIntentNextActionTypeEnum" $ \case
    "redirect_to_url" -> pure PaymentIntentNextActionTypeEnumRedirectToUrl
    "use_stripe_sdk" -> pure PaymentIntentNextActionTypeEnumUseStripeSdk
    str -> fail (show str <> " is not a known valid option for PaymentIntentNextActionTypeEnum")

data PaymentIntentObjectEnum
  = PaymentIntentObjectEnumPaymentIntent
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentIntentObjectEnum where
  toJSON e = String $ case e of
    PaymentIntentObjectEnumPaymentIntent -> "payment_intent"

instance FromJSON PaymentIntentObjectEnum where
  parseJSON = withText "PaymentIntentObjectEnum" $ \case
    "payment_intent" -> pure PaymentIntentObjectEnumPaymentIntent
    str -> fail (show str <> " is not a known valid option for PaymentIntentObjectEnum")

data PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnum
  = PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAny
  | PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAutomatic
  | PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnumChallengeOnly
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnum where
  toJSON e = String $ case e of
    PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAny -> "any"
    PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAutomatic -> "automatic"
    PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnumChallengeOnly -> "challenge_only"

instance FromJSON PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnum where
  parseJSON = withText "PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnum" $ \case
    "any" -> pure PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAny
    "automatic" -> pure PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAutomatic
    "challenge_only" -> pure PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnumChallengeOnly
    str -> fail (show str <> " is not a known valid option for PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnum")

data PaymentIntentStatusEnum
  = PaymentIntentStatusEnumCanceled
  | PaymentIntentStatusEnumProcessing
  | PaymentIntentStatusEnumRequiresAction
  | PaymentIntentStatusEnumRequiresCapture
  | PaymentIntentStatusEnumRequiresConfirmation
  | PaymentIntentStatusEnumRequiresPaymentMethod
  | PaymentIntentStatusEnumSucceeded
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentIntentStatusEnum where
  toJSON e = String $ case e of
    PaymentIntentStatusEnumCanceled -> "canceled"
    PaymentIntentStatusEnumProcessing -> "processing"
    PaymentIntentStatusEnumRequiresAction -> "requires_action"
    PaymentIntentStatusEnumRequiresCapture -> "requires_capture"
    PaymentIntentStatusEnumRequiresConfirmation -> "requires_confirmation"
    PaymentIntentStatusEnumRequiresPaymentMethod -> "requires_payment_method"
    PaymentIntentStatusEnumSucceeded -> "succeeded"

instance FromJSON PaymentIntentStatusEnum where
  parseJSON = withText "PaymentIntentStatusEnum" $ \case
    "canceled" -> pure PaymentIntentStatusEnumCanceled
    "processing" -> pure PaymentIntentStatusEnumProcessing
    "requires_action" -> pure PaymentIntentStatusEnumRequiresAction
    "requires_capture" -> pure PaymentIntentStatusEnumRequiresCapture
    "requires_confirmation" -> pure PaymentIntentStatusEnumRequiresConfirmation
    "requires_payment_method" -> pure PaymentIntentStatusEnumRequiresPaymentMethod
    "succeeded" -> pure PaymentIntentStatusEnumSucceeded
    str -> fail (show str <> " is not a known valid option for PaymentIntentStatusEnum")

data PaymentMethodCardWalletTypeEnum
  = PaymentMethodCardWalletTypeEnumAmexExpressCheckout
  | PaymentMethodCardWalletTypeEnumApplePay
  | PaymentMethodCardWalletTypeEnumGooglePay
  | PaymentMethodCardWalletTypeEnumMasterpass
  | PaymentMethodCardWalletTypeEnumSamsungPay
  | PaymentMethodCardWalletTypeEnumVisaCheckout
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentMethodCardWalletTypeEnum where
  toJSON e = String $ case e of
    PaymentMethodCardWalletTypeEnumAmexExpressCheckout -> "amex_express_checkout"
    PaymentMethodCardWalletTypeEnumApplePay -> "apple_pay"
    PaymentMethodCardWalletTypeEnumGooglePay -> "google_pay"
    PaymentMethodCardWalletTypeEnumMasterpass -> "masterpass"
    PaymentMethodCardWalletTypeEnumSamsungPay -> "samsung_pay"
    PaymentMethodCardWalletTypeEnumVisaCheckout -> "visa_checkout"

instance FromJSON PaymentMethodCardWalletTypeEnum where
  parseJSON = withText "PaymentMethodCardWalletTypeEnum" $ \case
    "amex_express_checkout" -> pure PaymentMethodCardWalletTypeEnumAmexExpressCheckout
    "apple_pay" -> pure PaymentMethodCardWalletTypeEnumApplePay
    "google_pay" -> pure PaymentMethodCardWalletTypeEnumGooglePay
    "masterpass" -> pure PaymentMethodCardWalletTypeEnumMasterpass
    "samsung_pay" -> pure PaymentMethodCardWalletTypeEnumSamsungPay
    "visa_checkout" -> pure PaymentMethodCardWalletTypeEnumVisaCheckout
    str -> fail (show str <> " is not a known valid option for PaymentMethodCardWalletTypeEnum")

data PaymentMethodDetailsAchDebitAccountHolderTypeEnum
  = PaymentMethodDetailsAchDebitAccountHolderTypeEnumCompany
  | PaymentMethodDetailsAchDebitAccountHolderTypeEnumIndividual
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentMethodDetailsAchDebitAccountHolderTypeEnum where
  toJSON e = String $ case e of
    PaymentMethodDetailsAchDebitAccountHolderTypeEnumCompany -> "company"
    PaymentMethodDetailsAchDebitAccountHolderTypeEnumIndividual -> "individual"

instance FromJSON PaymentMethodDetailsAchDebitAccountHolderTypeEnum where
  parseJSON = withText "PaymentMethodDetailsAchDebitAccountHolderTypeEnum" $ \case
    "company" -> pure PaymentMethodDetailsAchDebitAccountHolderTypeEnumCompany
    "individual" -> pure PaymentMethodDetailsAchDebitAccountHolderTypeEnumIndividual
    str -> fail (show str <> " is not a known valid option for PaymentMethodDetailsAchDebitAccountHolderTypeEnum")

data PaymentMethodDetailsBancontactPreferredLanguageEnum
  = PaymentMethodDetailsBancontactPreferredLanguageEnumDe
  | PaymentMethodDetailsBancontactPreferredLanguageEnumEn
  | PaymentMethodDetailsBancontactPreferredLanguageEnumFr
  | PaymentMethodDetailsBancontactPreferredLanguageEnumNl
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentMethodDetailsBancontactPreferredLanguageEnum where
  toJSON e = String $ case e of
    PaymentMethodDetailsBancontactPreferredLanguageEnumDe -> "de"
    PaymentMethodDetailsBancontactPreferredLanguageEnumEn -> "en"
    PaymentMethodDetailsBancontactPreferredLanguageEnumFr -> "fr"
    PaymentMethodDetailsBancontactPreferredLanguageEnumNl -> "nl"

instance FromJSON PaymentMethodDetailsBancontactPreferredLanguageEnum where
  parseJSON = withText "PaymentMethodDetailsBancontactPreferredLanguageEnum" $ \case
    "de" -> pure PaymentMethodDetailsBancontactPreferredLanguageEnumDe
    "en" -> pure PaymentMethodDetailsBancontactPreferredLanguageEnumEn
    "fr" -> pure PaymentMethodDetailsBancontactPreferredLanguageEnumFr
    "nl" -> pure PaymentMethodDetailsBancontactPreferredLanguageEnumNl
    str -> fail (show str <> " is not a known valid option for PaymentMethodDetailsBancontactPreferredLanguageEnum")

data PaymentMethodDetailsCardWalletTypeEnum
  = PaymentMethodDetailsCardWalletTypeEnumAmexExpressCheckout
  | PaymentMethodDetailsCardWalletTypeEnumApplePay
  | PaymentMethodDetailsCardWalletTypeEnumGooglePay
  | PaymentMethodDetailsCardWalletTypeEnumMasterpass
  | PaymentMethodDetailsCardWalletTypeEnumSamsungPay
  | PaymentMethodDetailsCardWalletTypeEnumVisaCheckout
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentMethodDetailsCardWalletTypeEnum where
  toJSON e = String $ case e of
    PaymentMethodDetailsCardWalletTypeEnumAmexExpressCheckout -> "amex_express_checkout"
    PaymentMethodDetailsCardWalletTypeEnumApplePay -> "apple_pay"
    PaymentMethodDetailsCardWalletTypeEnumGooglePay -> "google_pay"
    PaymentMethodDetailsCardWalletTypeEnumMasterpass -> "masterpass"
    PaymentMethodDetailsCardWalletTypeEnumSamsungPay -> "samsung_pay"
    PaymentMethodDetailsCardWalletTypeEnumVisaCheckout -> "visa_checkout"

instance FromJSON PaymentMethodDetailsCardWalletTypeEnum where
  parseJSON = withText "PaymentMethodDetailsCardWalletTypeEnum" $ \case
    "amex_express_checkout" -> pure PaymentMethodDetailsCardWalletTypeEnumAmexExpressCheckout
    "apple_pay" -> pure PaymentMethodDetailsCardWalletTypeEnumApplePay
    "google_pay" -> pure PaymentMethodDetailsCardWalletTypeEnumGooglePay
    "masterpass" -> pure PaymentMethodDetailsCardWalletTypeEnumMasterpass
    "samsung_pay" -> pure PaymentMethodDetailsCardWalletTypeEnumSamsungPay
    "visa_checkout" -> pure PaymentMethodDetailsCardWalletTypeEnumVisaCheckout
    str -> fail (show str <> " is not a known valid option for PaymentMethodDetailsCardWalletTypeEnum")

data PaymentMethodDetailsIdealBankEnum
  = PaymentMethodDetailsIdealBankEnumAbnAmro
  | PaymentMethodDetailsIdealBankEnumAsnBank
  | PaymentMethodDetailsIdealBankEnumBunq
  | PaymentMethodDetailsIdealBankEnumHandelsbanken
  | PaymentMethodDetailsIdealBankEnumIng
  | PaymentMethodDetailsIdealBankEnumKnab
  | PaymentMethodDetailsIdealBankEnumMoneyou
  | PaymentMethodDetailsIdealBankEnumRabobank
  | PaymentMethodDetailsIdealBankEnumRegiobank
  | PaymentMethodDetailsIdealBankEnumSnsBank
  | PaymentMethodDetailsIdealBankEnumTriodosBank
  | PaymentMethodDetailsIdealBankEnumVanLanschot
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentMethodDetailsIdealBankEnum where
  toJSON e = String $ case e of
    PaymentMethodDetailsIdealBankEnumAbnAmro -> "abn_amro"
    PaymentMethodDetailsIdealBankEnumAsnBank -> "asn_bank"
    PaymentMethodDetailsIdealBankEnumBunq -> "bunq"
    PaymentMethodDetailsIdealBankEnumHandelsbanken -> "handelsbanken"
    PaymentMethodDetailsIdealBankEnumIng -> "ing"
    PaymentMethodDetailsIdealBankEnumKnab -> "knab"
    PaymentMethodDetailsIdealBankEnumMoneyou -> "moneyou"
    PaymentMethodDetailsIdealBankEnumRabobank -> "rabobank"
    PaymentMethodDetailsIdealBankEnumRegiobank -> "regiobank"
    PaymentMethodDetailsIdealBankEnumSnsBank -> "sns_bank"
    PaymentMethodDetailsIdealBankEnumTriodosBank -> "triodos_bank"
    PaymentMethodDetailsIdealBankEnumVanLanschot -> "van_lanschot"

instance FromJSON PaymentMethodDetailsIdealBankEnum where
  parseJSON = withText "PaymentMethodDetailsIdealBankEnum" $ \case
    "abn_amro" -> pure PaymentMethodDetailsIdealBankEnumAbnAmro
    "asn_bank" -> pure PaymentMethodDetailsIdealBankEnumAsnBank
    "bunq" -> pure PaymentMethodDetailsIdealBankEnumBunq
    "handelsbanken" -> pure PaymentMethodDetailsIdealBankEnumHandelsbanken
    "ing" -> pure PaymentMethodDetailsIdealBankEnumIng
    "knab" -> pure PaymentMethodDetailsIdealBankEnumKnab
    "moneyou" -> pure PaymentMethodDetailsIdealBankEnumMoneyou
    "rabobank" -> pure PaymentMethodDetailsIdealBankEnumRabobank
    "regiobank" -> pure PaymentMethodDetailsIdealBankEnumRegiobank
    "sns_bank" -> pure PaymentMethodDetailsIdealBankEnumSnsBank
    "triodos_bank" -> pure PaymentMethodDetailsIdealBankEnumTriodosBank
    "van_lanschot" -> pure PaymentMethodDetailsIdealBankEnumVanLanschot
    str -> fail (show str <> " is not a known valid option for PaymentMethodDetailsIdealBankEnum")

data PaymentMethodDetailsIdealBicEnum
  = PaymentMethodDetailsIdealBicEnumABNANL2A
  | PaymentMethodDetailsIdealBicEnumASNBNL21
  | PaymentMethodDetailsIdealBicEnumBUNQNL2A
  | PaymentMethodDetailsIdealBicEnumFVLBNL22
  | PaymentMethodDetailsIdealBicEnumHANDNL2A
  | PaymentMethodDetailsIdealBicEnumINGBNL2A
  | PaymentMethodDetailsIdealBicEnumKNABNL2H
  | PaymentMethodDetailsIdealBicEnumMOYONL21
  | PaymentMethodDetailsIdealBicEnumRABONL2U
  | PaymentMethodDetailsIdealBicEnumRBRBNL21
  | PaymentMethodDetailsIdealBicEnumSNSBNL2A
  | PaymentMethodDetailsIdealBicEnumTRIONL2U
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentMethodDetailsIdealBicEnum where
  toJSON e = String $ case e of
    PaymentMethodDetailsIdealBicEnumABNANL2A -> "ABNANL2A"
    PaymentMethodDetailsIdealBicEnumASNBNL21 -> "ASNBNL21"
    PaymentMethodDetailsIdealBicEnumBUNQNL2A -> "BUNQNL2A"
    PaymentMethodDetailsIdealBicEnumFVLBNL22 -> "FVLBNL22"
    PaymentMethodDetailsIdealBicEnumHANDNL2A -> "HANDNL2A"
    PaymentMethodDetailsIdealBicEnumINGBNL2A -> "INGBNL2A"
    PaymentMethodDetailsIdealBicEnumKNABNL2H -> "KNABNL2H"
    PaymentMethodDetailsIdealBicEnumMOYONL21 -> "MOYONL21"
    PaymentMethodDetailsIdealBicEnumRABONL2U -> "RABONL2U"
    PaymentMethodDetailsIdealBicEnumRBRBNL21 -> "RBRBNL21"
    PaymentMethodDetailsIdealBicEnumSNSBNL2A -> "SNSBNL2A"
    PaymentMethodDetailsIdealBicEnumTRIONL2U -> "TRIONL2U"

instance FromJSON PaymentMethodDetailsIdealBicEnum where
  parseJSON = withText "PaymentMethodDetailsIdealBicEnum" $ \case
    "ABNANL2A" -> pure PaymentMethodDetailsIdealBicEnumABNANL2A
    "ASNBNL21" -> pure PaymentMethodDetailsIdealBicEnumASNBNL21
    "BUNQNL2A" -> pure PaymentMethodDetailsIdealBicEnumBUNQNL2A
    "FVLBNL22" -> pure PaymentMethodDetailsIdealBicEnumFVLBNL22
    "HANDNL2A" -> pure PaymentMethodDetailsIdealBicEnumHANDNL2A
    "INGBNL2A" -> pure PaymentMethodDetailsIdealBicEnumINGBNL2A
    "KNABNL2H" -> pure PaymentMethodDetailsIdealBicEnumKNABNL2H
    "MOYONL21" -> pure PaymentMethodDetailsIdealBicEnumMOYONL21
    "RABONL2U" -> pure PaymentMethodDetailsIdealBicEnumRABONL2U
    "RBRBNL21" -> pure PaymentMethodDetailsIdealBicEnumRBRBNL21
    "SNSBNL2A" -> pure PaymentMethodDetailsIdealBicEnumSNSBNL2A
    "TRIONL2U" -> pure PaymentMethodDetailsIdealBicEnumTRIONL2U
    str -> fail (show str <> " is not a known valid option for PaymentMethodDetailsIdealBicEnum")

data PaymentMethodDetailsTypeEnum
  = PaymentMethodDetailsTypeEnumAchCreditTransfer
  | PaymentMethodDetailsTypeEnumAchDebit
  | PaymentMethodDetailsTypeEnumAlipay
  | PaymentMethodDetailsTypeEnumBancontact
  | PaymentMethodDetailsTypeEnumCard
  | PaymentMethodDetailsTypeEnumCardPresent
  | PaymentMethodDetailsTypeEnumEps
  | PaymentMethodDetailsTypeEnumGiropay
  | PaymentMethodDetailsTypeEnumIdeal
  | PaymentMethodDetailsTypeEnumKlarna
  | PaymentMethodDetailsTypeEnumMultibanco
  | PaymentMethodDetailsTypeEnumP24
  | PaymentMethodDetailsTypeEnumSepaDebit
  | PaymentMethodDetailsTypeEnumSofort
  | PaymentMethodDetailsTypeEnumStripeAccount
  | PaymentMethodDetailsTypeEnumWechat
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentMethodDetailsTypeEnum where
  toJSON e = String $ case e of
    PaymentMethodDetailsTypeEnumAchCreditTransfer -> "ach_credit_transfer"
    PaymentMethodDetailsTypeEnumAchDebit -> "ach_debit"
    PaymentMethodDetailsTypeEnumAlipay -> "alipay"
    PaymentMethodDetailsTypeEnumBancontact -> "bancontact"
    PaymentMethodDetailsTypeEnumCard -> "card"
    PaymentMethodDetailsTypeEnumCardPresent -> "card_present"
    PaymentMethodDetailsTypeEnumEps -> "eps"
    PaymentMethodDetailsTypeEnumGiropay -> "giropay"
    PaymentMethodDetailsTypeEnumIdeal -> "ideal"
    PaymentMethodDetailsTypeEnumKlarna -> "klarna"
    PaymentMethodDetailsTypeEnumMultibanco -> "multibanco"
    PaymentMethodDetailsTypeEnumP24 -> "p24"
    PaymentMethodDetailsTypeEnumSepaDebit -> "sepa_debit"
    PaymentMethodDetailsTypeEnumSofort -> "sofort"
    PaymentMethodDetailsTypeEnumStripeAccount -> "stripe_account"
    PaymentMethodDetailsTypeEnumWechat -> "wechat"

instance FromJSON PaymentMethodDetailsTypeEnum where
  parseJSON = withText "PaymentMethodDetailsTypeEnum" $ \case
    "ach_credit_transfer" -> pure PaymentMethodDetailsTypeEnumAchCreditTransfer
    "ach_debit" -> pure PaymentMethodDetailsTypeEnumAchDebit
    "alipay" -> pure PaymentMethodDetailsTypeEnumAlipay
    "bancontact" -> pure PaymentMethodDetailsTypeEnumBancontact
    "card" -> pure PaymentMethodDetailsTypeEnumCard
    "card_present" -> pure PaymentMethodDetailsTypeEnumCardPresent
    "eps" -> pure PaymentMethodDetailsTypeEnumEps
    "giropay" -> pure PaymentMethodDetailsTypeEnumGiropay
    "ideal" -> pure PaymentMethodDetailsTypeEnumIdeal
    "klarna" -> pure PaymentMethodDetailsTypeEnumKlarna
    "multibanco" -> pure PaymentMethodDetailsTypeEnumMultibanco
    "p24" -> pure PaymentMethodDetailsTypeEnumP24
    "sepa_debit" -> pure PaymentMethodDetailsTypeEnumSepaDebit
    "sofort" -> pure PaymentMethodDetailsTypeEnumSofort
    "stripe_account" -> pure PaymentMethodDetailsTypeEnumStripeAccount
    "wechat" -> pure PaymentMethodDetailsTypeEnumWechat
    str -> fail (show str <> " is not a known valid option for PaymentMethodDetailsTypeEnum")

data PaymentMethodObjectEnum
  = PaymentMethodObjectEnumPaymentMethod
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentMethodObjectEnum where
  toJSON e = String $ case e of
    PaymentMethodObjectEnumPaymentMethod -> "payment_method"

instance FromJSON PaymentMethodObjectEnum where
  parseJSON = withText "PaymentMethodObjectEnum" $ \case
    "payment_method" -> pure PaymentMethodObjectEnumPaymentMethod
    str -> fail (show str <> " is not a known valid option for PaymentMethodObjectEnum")

data PaymentMethodTypeEnum
  = PaymentMethodTypeEnumCard
  | PaymentMethodTypeEnumCardPresent
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PaymentMethodTypeEnum where
  toJSON e = String $ case e of
    PaymentMethodTypeEnumCard -> "card"
    PaymentMethodTypeEnumCardPresent -> "card_present"

instance FromJSON PaymentMethodTypeEnum where
  parseJSON = withText "PaymentMethodTypeEnum" $ \case
    "card" -> pure PaymentMethodTypeEnumCard
    "card_present" -> pure PaymentMethodTypeEnumCardPresent
    str -> fail (show str <> " is not a known valid option for PaymentMethodTypeEnum")

data PayoutObjectEnum
  = PayoutObjectEnumPayout
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PayoutObjectEnum where
  toJSON e = String $ case e of
    PayoutObjectEnumPayout -> "payout"

instance FromJSON PayoutObjectEnum where
  parseJSON = withText "PayoutObjectEnum" $ \case
    "payout" -> pure PayoutObjectEnumPayout
    str -> fail (show str <> " is not a known valid option for PayoutObjectEnum")

data PayoutSourceTypeEnum
  = PayoutSourceTypeEnumCard
  | PayoutSourceTypeEnumBankAccount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PayoutSourceTypeEnum where
  toJSON e = String $ case e of
    PayoutSourceTypeEnumCard -> "card"
    PayoutSourceTypeEnumBankAccount -> "bank_account"

instance FromJSON PayoutSourceTypeEnum where
  parseJSON = withText "PayoutSourceTypeEnum" $ \case
    "card" -> pure PayoutSourceTypeEnumCard
    "bank_account" -> pure PayoutSourceTypeEnumBankAccount
    str -> fail (show str <> " is not a known valid option for PayoutSourceTypeEnum")

data PayoutTypeEnum
  = PayoutTypeEnumBankAccount
  | PayoutTypeEnumCard
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PayoutTypeEnum where
  toJSON e = String $ case e of
    PayoutTypeEnumBankAccount -> "bank_account"
    PayoutTypeEnumCard -> "card"

instance FromJSON PayoutTypeEnum where
  parseJSON = withText "PayoutTypeEnum" $ \case
    "bank_account" -> pure PayoutTypeEnumBankAccount
    "card" -> pure PayoutTypeEnumCard
    str -> fail (show str <> " is not a known valid option for PayoutTypeEnum")

data PersonObjectEnum
  = PersonObjectEnumPerson
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PersonObjectEnum where
  toJSON e = String $ case e of
    PersonObjectEnumPerson -> "person"

instance FromJSON PersonObjectEnum where
  parseJSON = withText "PersonObjectEnum" $ \case
    "person" -> pure PersonObjectEnumPerson
    str -> fail (show str <> " is not a known valid option for PersonObjectEnum")

data PlanAggregateUsageEnum
  = PlanAggregateUsageEnumLastDuringPeriod
  | PlanAggregateUsageEnumLastEver
  | PlanAggregateUsageEnumMax
  | PlanAggregateUsageEnumSum
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PlanAggregateUsageEnum where
  toJSON e = String $ case e of
    PlanAggregateUsageEnumLastDuringPeriod -> "last_during_period"
    PlanAggregateUsageEnumLastEver -> "last_ever"
    PlanAggregateUsageEnumMax -> "max"
    PlanAggregateUsageEnumSum -> "sum"

instance FromJSON PlanAggregateUsageEnum where
  parseJSON = withText "PlanAggregateUsageEnum" $ \case
    "last_during_period" -> pure PlanAggregateUsageEnumLastDuringPeriod
    "last_ever" -> pure PlanAggregateUsageEnumLastEver
    "max" -> pure PlanAggregateUsageEnumMax
    "sum" -> pure PlanAggregateUsageEnumSum
    str -> fail (show str <> " is not a known valid option for PlanAggregateUsageEnum")

data PlanBillingSchemeEnum
  = PlanBillingSchemeEnumPerUnit
  | PlanBillingSchemeEnumTiered
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PlanBillingSchemeEnum where
  toJSON e = String $ case e of
    PlanBillingSchemeEnumPerUnit -> "per_unit"
    PlanBillingSchemeEnumTiered -> "tiered"

instance FromJSON PlanBillingSchemeEnum where
  parseJSON = withText "PlanBillingSchemeEnum" $ \case
    "per_unit" -> pure PlanBillingSchemeEnumPerUnit
    "tiered" -> pure PlanBillingSchemeEnumTiered
    str -> fail (show str <> " is not a known valid option for PlanBillingSchemeEnum")

data PlanIntervalEnum
  = PlanIntervalEnumDay
  | PlanIntervalEnumMonth
  | PlanIntervalEnumWeek
  | PlanIntervalEnumYear
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PlanIntervalEnum where
  toJSON e = String $ case e of
    PlanIntervalEnumDay -> "day"
    PlanIntervalEnumMonth -> "month"
    PlanIntervalEnumWeek -> "week"
    PlanIntervalEnumYear -> "year"

instance FromJSON PlanIntervalEnum where
  parseJSON = withText "PlanIntervalEnum" $ \case
    "day" -> pure PlanIntervalEnumDay
    "month" -> pure PlanIntervalEnumMonth
    "week" -> pure PlanIntervalEnumWeek
    "year" -> pure PlanIntervalEnumYear
    str -> fail (show str <> " is not a known valid option for PlanIntervalEnum")

data PlanObjectEnum
  = PlanObjectEnumPlan
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PlanObjectEnum where
  toJSON e = String $ case e of
    PlanObjectEnumPlan -> "plan"

instance FromJSON PlanObjectEnum where
  parseJSON = withText "PlanObjectEnum" $ \case
    "plan" -> pure PlanObjectEnumPlan
    str -> fail (show str <> " is not a known valid option for PlanObjectEnum")

data PlanTiersModeEnum
  = PlanTiersModeEnumGraduated
  | PlanTiersModeEnumVolume
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PlanTiersModeEnum where
  toJSON e = String $ case e of
    PlanTiersModeEnumGraduated -> "graduated"
    PlanTiersModeEnumVolume -> "volume"

instance FromJSON PlanTiersModeEnum where
  parseJSON = withText "PlanTiersModeEnum" $ \case
    "graduated" -> pure PlanTiersModeEnumGraduated
    "volume" -> pure PlanTiersModeEnumVolume
    str -> fail (show str <> " is not a known valid option for PlanTiersModeEnum")

data PlanUsageTypeEnum
  = PlanUsageTypeEnumLicensed
  | PlanUsageTypeEnumMetered
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PlanUsageTypeEnum where
  toJSON e = String $ case e of
    PlanUsageTypeEnumLicensed -> "licensed"
    PlanUsageTypeEnumMetered -> "metered"

instance FromJSON PlanUsageTypeEnum where
  parseJSON = withText "PlanUsageTypeEnum" $ \case
    "licensed" -> pure PlanUsageTypeEnumLicensed
    "metered" -> pure PlanUsageTypeEnumMetered
    str -> fail (show str <> " is not a known valid option for PlanUsageTypeEnum")

data PlatformTaxFeeObjectEnum
  = PlatformTaxFeeObjectEnumPlatformTaxFee
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PlatformTaxFeeObjectEnum where
  toJSON e = String $ case e of
    PlatformTaxFeeObjectEnumPlatformTaxFee -> "platform_tax_fee"

instance FromJSON PlatformTaxFeeObjectEnum where
  parseJSON = withText "PlatformTaxFeeObjectEnum" $ \case
    "platform_tax_fee" -> pure PlatformTaxFeeObjectEnumPlatformTaxFee
    str -> fail (show str <> " is not a known valid option for PlatformTaxFeeObjectEnum")

data ProductObjectEnum
  = ProductObjectEnumProduct
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ProductObjectEnum where
  toJSON e = String $ case e of
    ProductObjectEnumProduct -> "product"

instance FromJSON ProductObjectEnum where
  parseJSON = withText "ProductObjectEnum" $ \case
    "product" -> pure ProductObjectEnumProduct
    str -> fail (show str <> " is not a known valid option for ProductObjectEnum")

data ProductTypeEnum
  = ProductTypeEnumGood
  | ProductTypeEnumService
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ProductTypeEnum where
  toJSON e = String $ case e of
    ProductTypeEnumGood -> "good"
    ProductTypeEnumService -> "service"

instance FromJSON ProductTypeEnum where
  parseJSON = withText "ProductTypeEnum" $ \case
    "good" -> pure ProductTypeEnumGood
    "service" -> pure ProductTypeEnumService
    str -> fail (show str <> " is not a known valid option for ProductTypeEnum")

data PurposeEnum
  = PurposeEnumBusinessIcon
  | PurposeEnumBusinessLogo
  | PurposeEnumCustomerSignature
  | PurposeEnumDisputeEvidence
  | PurposeEnumFinanceReportRun
  | PurposeEnumIdentityDocument
  | PurposeEnumPciDocument
  | PurposeEnumSigmaScheduledQuery
  | PurposeEnumTaxDocumentUserUpload
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON PurposeEnum where
  toJSON e = String $ case e of
    PurposeEnumBusinessIcon -> "business_icon"
    PurposeEnumBusinessLogo -> "business_logo"
    PurposeEnumCustomerSignature -> "customer_signature"
    PurposeEnumDisputeEvidence -> "dispute_evidence"
    PurposeEnumFinanceReportRun -> "finance_report_run"
    PurposeEnumIdentityDocument -> "identity_document"
    PurposeEnumPciDocument -> "pci_document"
    PurposeEnumSigmaScheduledQuery -> "sigma_scheduled_query"
    PurposeEnumTaxDocumentUserUpload -> "tax_document_user_upload"

instance FromJSON PurposeEnum where
  parseJSON = withText "PurposeEnum" $ \case
    "business_icon" -> pure PurposeEnumBusinessIcon
    "business_logo" -> pure PurposeEnumBusinessLogo
    "customer_signature" -> pure PurposeEnumCustomerSignature
    "dispute_evidence" -> pure PurposeEnumDisputeEvidence
    "finance_report_run" -> pure PurposeEnumFinanceReportRun
    "identity_document" -> pure PurposeEnumIdentityDocument
    "pci_document" -> pure PurposeEnumPciDocument
    "sigma_scheduled_query" -> pure PurposeEnumSigmaScheduledQuery
    "tax_document_user_upload" -> pure PurposeEnumTaxDocumentUserUpload
    str -> fail (show str <> " is not a known valid option for PurposeEnum")

data RadarEarlyFraudWarningFraudTypeEnum
  = RadarEarlyFraudWarningFraudTypeEnumCardNeverReceived
  | RadarEarlyFraudWarningFraudTypeEnumFraudulentCardApplication
  | RadarEarlyFraudWarningFraudTypeEnumMadeWithCounterfeitCard
  | RadarEarlyFraudWarningFraudTypeEnumMadeWithLostCard
  | RadarEarlyFraudWarningFraudTypeEnumMadeWithStolenCard
  | RadarEarlyFraudWarningFraudTypeEnumMisc
  | RadarEarlyFraudWarningFraudTypeEnumUnauthorizedUseOfCard
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON RadarEarlyFraudWarningFraudTypeEnum where
  toJSON e = String $ case e of
    RadarEarlyFraudWarningFraudTypeEnumCardNeverReceived -> "card_never_received"
    RadarEarlyFraudWarningFraudTypeEnumFraudulentCardApplication -> "fraudulent_card_application"
    RadarEarlyFraudWarningFraudTypeEnumMadeWithCounterfeitCard -> "made_with_counterfeit_card"
    RadarEarlyFraudWarningFraudTypeEnumMadeWithLostCard -> "made_with_lost_card"
    RadarEarlyFraudWarningFraudTypeEnumMadeWithStolenCard -> "made_with_stolen_card"
    RadarEarlyFraudWarningFraudTypeEnumMisc -> "misc"
    RadarEarlyFraudWarningFraudTypeEnumUnauthorizedUseOfCard -> "unauthorized_use_of_card"

instance FromJSON RadarEarlyFraudWarningFraudTypeEnum where
  parseJSON = withText "RadarEarlyFraudWarningFraudTypeEnum" $ \case
    "card_never_received" -> pure RadarEarlyFraudWarningFraudTypeEnumCardNeverReceived
    "fraudulent_card_application" -> pure RadarEarlyFraudWarningFraudTypeEnumFraudulentCardApplication
    "made_with_counterfeit_card" -> pure RadarEarlyFraudWarningFraudTypeEnumMadeWithCounterfeitCard
    "made_with_lost_card" -> pure RadarEarlyFraudWarningFraudTypeEnumMadeWithLostCard
    "made_with_stolen_card" -> pure RadarEarlyFraudWarningFraudTypeEnumMadeWithStolenCard
    "misc" -> pure RadarEarlyFraudWarningFraudTypeEnumMisc
    "unauthorized_use_of_card" -> pure RadarEarlyFraudWarningFraudTypeEnumUnauthorizedUseOfCard
    str -> fail (show str <> " is not a known valid option for RadarEarlyFraudWarningFraudTypeEnum")

data RadarEarlyFraudWarningObjectEnum
  = RadarEarlyFraudWarningObjectEnumRadarEarlyFraudWarning
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON RadarEarlyFraudWarningObjectEnum where
  toJSON e = String $ case e of
    RadarEarlyFraudWarningObjectEnumRadarEarlyFraudWarning -> "radar.early_fraud_warning"

instance FromJSON RadarEarlyFraudWarningObjectEnum where
  parseJSON = withText "RadarEarlyFraudWarningObjectEnum" $ \case
    "radar.early_fraud_warning" -> pure RadarEarlyFraudWarningObjectEnumRadarEarlyFraudWarning
    str -> fail (show str <> " is not a known valid option for RadarEarlyFraudWarningObjectEnum")

data RadarValueListItemObjectEnum
  = RadarValueListItemObjectEnumRadarValueListItem
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON RadarValueListItemObjectEnum where
  toJSON e = String $ case e of
    RadarValueListItemObjectEnumRadarValueListItem -> "radar.value_list_item"

instance FromJSON RadarValueListItemObjectEnum where
  parseJSON = withText "RadarValueListItemObjectEnum" $ \case
    "radar.value_list_item" -> pure RadarValueListItemObjectEnumRadarValueListItem
    str -> fail (show str <> " is not a known valid option for RadarValueListItemObjectEnum")

data RadarValueListItemTypeEnum
  = RadarValueListItemTypeEnumCardBin
  | RadarValueListItemTypeEnumCardFingerprint
  | RadarValueListItemTypeEnumCaseSensitiveString
  | RadarValueListItemTypeEnumCountry
  | RadarValueListItemTypeEnumEmail
  | RadarValueListItemTypeEnumIpAddress
  | RadarValueListItemTypeEnumString
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON RadarValueListItemTypeEnum where
  toJSON e = String $ case e of
    RadarValueListItemTypeEnumCardBin -> "card_bin"
    RadarValueListItemTypeEnumCardFingerprint -> "card_fingerprint"
    RadarValueListItemTypeEnumCaseSensitiveString -> "case_sensitive_string"
    RadarValueListItemTypeEnumCountry -> "country"
    RadarValueListItemTypeEnumEmail -> "email"
    RadarValueListItemTypeEnumIpAddress -> "ip_address"
    RadarValueListItemTypeEnumString -> "string"

instance FromJSON RadarValueListItemTypeEnum where
  parseJSON = withText "RadarValueListItemTypeEnum" $ \case
    "card_bin" -> pure RadarValueListItemTypeEnumCardBin
    "card_fingerprint" -> pure RadarValueListItemTypeEnumCardFingerprint
    "case_sensitive_string" -> pure RadarValueListItemTypeEnumCaseSensitiveString
    "country" -> pure RadarValueListItemTypeEnumCountry
    "email" -> pure RadarValueListItemTypeEnumEmail
    "ip_address" -> pure RadarValueListItemTypeEnumIpAddress
    "string" -> pure RadarValueListItemTypeEnumString
    str -> fail (show str <> " is not a known valid option for RadarValueListItemTypeEnum")

data RadarValueListObjectEnum
  = RadarValueListObjectEnumRadarValueList
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON RadarValueListObjectEnum where
  toJSON e = String $ case e of
    RadarValueListObjectEnumRadarValueList -> "radar.value_list"

instance FromJSON RadarValueListObjectEnum where
  parseJSON = withText "RadarValueListObjectEnum" $ \case
    "radar.value_list" -> pure RadarValueListObjectEnumRadarValueList
    str -> fail (show str <> " is not a known valid option for RadarValueListObjectEnum")

data RecipientObjectEnum
  = RecipientObjectEnumRecipient
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON RecipientObjectEnum where
  toJSON e = String $ case e of
    RecipientObjectEnumRecipient -> "recipient"

instance FromJSON RecipientObjectEnum where
  parseJSON = withText "RecipientObjectEnum" $ \case
    "recipient" -> pure RecipientObjectEnumRecipient
    str -> fail (show str <> " is not a known valid option for RecipientObjectEnum")

data RecipientTypeEnum
  = RecipientTypeEnumIndividual
  | RecipientTypeEnumCorporation
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON RecipientTypeEnum where
  toJSON e = String $ case e of
    RecipientTypeEnumIndividual -> "individual"
    RecipientTypeEnumCorporation -> "corporation"

instance FromJSON RecipientTypeEnum where
  parseJSON = withText "RecipientTypeEnum" $ \case
    "individual" -> pure RecipientTypeEnumIndividual
    "corporation" -> pure RecipientTypeEnumCorporation
    str -> fail (show str <> " is not a known valid option for RecipientTypeEnum")

data RefundObjectEnum
  = RefundObjectEnumRefund
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON RefundObjectEnum where
  toJSON e = String $ case e of
    RefundObjectEnumRefund -> "refund"

instance FromJSON RefundObjectEnum where
  parseJSON = withText "RefundObjectEnum" $ \case
    "refund" -> pure RefundObjectEnumRefund
    str -> fail (show str <> " is not a known valid option for RefundObjectEnum")

data ReportingReportRunObjectEnum
  = ReportingReportRunObjectEnumReportingReportRun
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ReportingReportRunObjectEnum where
  toJSON e = String $ case e of
    ReportingReportRunObjectEnumReportingReportRun -> "reporting.report_run"

instance FromJSON ReportingReportRunObjectEnum where
  parseJSON = withText "ReportingReportRunObjectEnum" $ \case
    "reporting.report_run" -> pure ReportingReportRunObjectEnumReportingReportRun
    str -> fail (show str <> " is not a known valid option for ReportingReportRunObjectEnum")

data ReportingReportTypeObjectEnum
  = ReportingReportTypeObjectEnumReportingReportType
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ReportingReportTypeObjectEnum where
  toJSON e = String $ case e of
    ReportingReportTypeObjectEnumReportingReportType -> "reporting.report_type"

instance FromJSON ReportingReportTypeObjectEnum where
  parseJSON = withText "ReportingReportTypeObjectEnum" $ \case
    "reporting.report_type" -> pure ReportingReportTypeObjectEnumReportingReportType
    str -> fail (show str <> " is not a known valid option for ReportingReportTypeObjectEnum")

data ReserveTransactionObjectEnum
  = ReserveTransactionObjectEnumReserveTransaction
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ReserveTransactionObjectEnum where
  toJSON e = String $ case e of
    ReserveTransactionObjectEnumReserveTransaction -> "reserve_transaction"

instance FromJSON ReserveTransactionObjectEnum where
  parseJSON = withText "ReserveTransactionObjectEnum" $ \case
    "reserve_transaction" -> pure ReserveTransactionObjectEnumReserveTransaction
    str -> fail (show str <> " is not a known valid option for ReserveTransactionObjectEnum")

data ReviewClosedReasonEnum
  = ReviewClosedReasonEnumApproved
  | ReviewClosedReasonEnumDisputed
  | ReviewClosedReasonEnumRefunded
  | ReviewClosedReasonEnumRefundedAsFraud
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ReviewClosedReasonEnum where
  toJSON e = String $ case e of
    ReviewClosedReasonEnumApproved -> "approved"
    ReviewClosedReasonEnumDisputed -> "disputed"
    ReviewClosedReasonEnumRefunded -> "refunded"
    ReviewClosedReasonEnumRefundedAsFraud -> "refunded_as_fraud"

instance FromJSON ReviewClosedReasonEnum where
  parseJSON = withText "ReviewClosedReasonEnum" $ \case
    "approved" -> pure ReviewClosedReasonEnumApproved
    "disputed" -> pure ReviewClosedReasonEnumDisputed
    "refunded" -> pure ReviewClosedReasonEnumRefunded
    "refunded_as_fraud" -> pure ReviewClosedReasonEnumRefundedAsFraud
    str -> fail (show str <> " is not a known valid option for ReviewClosedReasonEnum")

data ReviewObjectEnum
  = ReviewObjectEnumReview
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ReviewObjectEnum where
  toJSON e = String $ case e of
    ReviewObjectEnumReview -> "review"

instance FromJSON ReviewObjectEnum where
  parseJSON = withText "ReviewObjectEnum" $ \case
    "review" -> pure ReviewObjectEnumReview
    str -> fail (show str <> " is not a known valid option for ReviewObjectEnum")

data ReviewOpenedReasonEnum
  = ReviewOpenedReasonEnumManual
  | ReviewOpenedReasonEnumRule
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ReviewOpenedReasonEnum where
  toJSON e = String $ case e of
    ReviewOpenedReasonEnumManual -> "manual"
    ReviewOpenedReasonEnumRule -> "rule"

instance FromJSON ReviewOpenedReasonEnum where
  parseJSON = withText "ReviewOpenedReasonEnum" $ \case
    "manual" -> pure ReviewOpenedReasonEnumManual
    "rule" -> pure ReviewOpenedReasonEnumRule
    str -> fail (show str <> " is not a known valid option for ReviewOpenedReasonEnum")

data ReviewReasonEnum
  = ReviewReasonEnumRule
  | ReviewReasonEnumManual
  | ReviewReasonEnumApproved
  | ReviewReasonEnumRefunded
  | ReviewReasonEnumRefundedAsFraud
  | ReviewReasonEnumDisputed
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ReviewReasonEnum where
  toJSON e = String $ case e of
    ReviewReasonEnumRule -> "rule"
    ReviewReasonEnumManual -> "manual"
    ReviewReasonEnumApproved -> "approved"
    ReviewReasonEnumRefunded -> "refunded"
    ReviewReasonEnumRefundedAsFraud -> "refunded_as_fraud"
    ReviewReasonEnumDisputed -> "disputed"

instance FromJSON ReviewReasonEnum where
  parseJSON = withText "ReviewReasonEnum" $ \case
    "rule" -> pure ReviewReasonEnumRule
    "manual" -> pure ReviewReasonEnumManual
    "approved" -> pure ReviewReasonEnumApproved
    "refunded" -> pure ReviewReasonEnumRefunded
    "refunded_as_fraud" -> pure ReviewReasonEnumRefundedAsFraud
    "disputed" -> pure ReviewReasonEnumDisputed
    str -> fail (show str <> " is not a known valid option for ReviewReasonEnum")

data ScheduledQueryRunObjectEnum
  = ScheduledQueryRunObjectEnumScheduledQueryRun
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ScheduledQueryRunObjectEnum where
  toJSON e = String $ case e of
    ScheduledQueryRunObjectEnumScheduledQueryRun -> "scheduled_query_run"

instance FromJSON ScheduledQueryRunObjectEnum where
  parseJSON = withText "ScheduledQueryRunObjectEnum" $ \case
    "scheduled_query_run" -> pure ScheduledQueryRunObjectEnumScheduledQueryRun
    str -> fail (show str <> " is not a known valid option for ScheduledQueryRunObjectEnum")

data SetupIntentCancellationReasonEnum
  = SetupIntentCancellationReasonEnumAbandoned
  | SetupIntentCancellationReasonEnumDuplicate
  | SetupIntentCancellationReasonEnumRequestedByCustomer
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SetupIntentCancellationReasonEnum where
  toJSON e = String $ case e of
    SetupIntentCancellationReasonEnumAbandoned -> "abandoned"
    SetupIntentCancellationReasonEnumDuplicate -> "duplicate"
    SetupIntentCancellationReasonEnumRequestedByCustomer -> "requested_by_customer"

instance FromJSON SetupIntentCancellationReasonEnum where
  parseJSON = withText "SetupIntentCancellationReasonEnum" $ \case
    "abandoned" -> pure SetupIntentCancellationReasonEnumAbandoned
    "duplicate" -> pure SetupIntentCancellationReasonEnumDuplicate
    "requested_by_customer" -> pure SetupIntentCancellationReasonEnumRequestedByCustomer
    str -> fail (show str <> " is not a known valid option for SetupIntentCancellationReasonEnum")

data SetupIntentNextActionTypeEnum
  = SetupIntentNextActionTypeEnumRedirectToUrl
  | SetupIntentNextActionTypeEnumUseStripeSdk
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SetupIntentNextActionTypeEnum where
  toJSON e = String $ case e of
    SetupIntentNextActionTypeEnumRedirectToUrl -> "redirect_to_url"
    SetupIntentNextActionTypeEnumUseStripeSdk -> "use_stripe_sdk"

instance FromJSON SetupIntentNextActionTypeEnum where
  parseJSON = withText "SetupIntentNextActionTypeEnum" $ \case
    "redirect_to_url" -> pure SetupIntentNextActionTypeEnumRedirectToUrl
    "use_stripe_sdk" -> pure SetupIntentNextActionTypeEnumUseStripeSdk
    str -> fail (show str <> " is not a known valid option for SetupIntentNextActionTypeEnum")

data SetupIntentObjectEnum
  = SetupIntentObjectEnumSetupIntent
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SetupIntentObjectEnum where
  toJSON e = String $ case e of
    SetupIntentObjectEnumSetupIntent -> "setup_intent"

instance FromJSON SetupIntentObjectEnum where
  parseJSON = withText "SetupIntentObjectEnum" $ \case
    "setup_intent" -> pure SetupIntentObjectEnumSetupIntent
    str -> fail (show str <> " is not a known valid option for SetupIntentObjectEnum")

data SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnum
  = SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAny
  | SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAutomatic
  | SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnumChallengeOnly
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnum where
  toJSON e = String $ case e of
    SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAny -> "any"
    SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAutomatic -> "automatic"
    SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnumChallengeOnly -> "challenge_only"

instance FromJSON SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnum where
  parseJSON = withText "SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnum" $ \case
    "any" -> pure SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAny
    "automatic" -> pure SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnumAutomatic
    "challenge_only" -> pure SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnumChallengeOnly
    str -> fail (show str <> " is not a known valid option for SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnum")

data SetupIntentStatusEnum
  = SetupIntentStatusEnumCanceled
  | SetupIntentStatusEnumProcessing
  | SetupIntentStatusEnumRequiresAction
  | SetupIntentStatusEnumRequiresConfirmation
  | SetupIntentStatusEnumRequiresPaymentMethod
  | SetupIntentStatusEnumSucceeded
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SetupIntentStatusEnum where
  toJSON e = String $ case e of
    SetupIntentStatusEnumCanceled -> "canceled"
    SetupIntentStatusEnumProcessing -> "processing"
    SetupIntentStatusEnumRequiresAction -> "requires_action"
    SetupIntentStatusEnumRequiresConfirmation -> "requires_confirmation"
    SetupIntentStatusEnumRequiresPaymentMethod -> "requires_payment_method"
    SetupIntentStatusEnumSucceeded -> "succeeded"

instance FromJSON SetupIntentStatusEnum where
  parseJSON = withText "SetupIntentStatusEnum" $ \case
    "canceled" -> pure SetupIntentStatusEnumCanceled
    "processing" -> pure SetupIntentStatusEnumProcessing
    "requires_action" -> pure SetupIntentStatusEnumRequiresAction
    "requires_confirmation" -> pure SetupIntentStatusEnumRequiresConfirmation
    "requires_payment_method" -> pure SetupIntentStatusEnumRequiresPaymentMethod
    "succeeded" -> pure SetupIntentStatusEnumSucceeded
    str -> fail (show str <> " is not a known valid option for SetupIntentStatusEnum")

data SkuObjectEnum
  = SkuObjectEnumSku
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SkuObjectEnum where
  toJSON e = String $ case e of
    SkuObjectEnumSku -> "sku"

instance FromJSON SkuObjectEnum where
  parseJSON = withText "SkuObjectEnum" $ \case
    "sku" -> pure SkuObjectEnumSku
    str -> fail (show str <> " is not a known valid option for SkuObjectEnum")

data SourceFlowEnum
  = SourceFlowEnumRedirect
  | SourceFlowEnumReceiver
  | SourceFlowEnumCodeVerification
  | SourceFlowEnumNone
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SourceFlowEnum where
  toJSON e = String $ case e of
    SourceFlowEnumRedirect -> "redirect"
    SourceFlowEnumReceiver -> "receiver"
    SourceFlowEnumCodeVerification -> "code_verification"
    SourceFlowEnumNone -> "none"

instance FromJSON SourceFlowEnum where
  parseJSON = withText "SourceFlowEnum" $ \case
    "redirect" -> pure SourceFlowEnumRedirect
    "receiver" -> pure SourceFlowEnumReceiver
    "code_verification" -> pure SourceFlowEnumCodeVerification
    "none" -> pure SourceFlowEnumNone
    str -> fail (show str <> " is not a known valid option for SourceFlowEnum")

data SourceMandateNotificationObjectEnum
  = SourceMandateNotificationObjectEnumSourceMandateNotification
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SourceMandateNotificationObjectEnum where
  toJSON e = String $ case e of
    SourceMandateNotificationObjectEnumSourceMandateNotification -> "source_mandate_notification"

instance FromJSON SourceMandateNotificationObjectEnum where
  parseJSON = withText "SourceMandateNotificationObjectEnum" $ \case
    "source_mandate_notification" -> pure SourceMandateNotificationObjectEnumSourceMandateNotification
    str -> fail (show str <> " is not a known valid option for SourceMandateNotificationObjectEnum")

data SourceObjectEnum
  = SourceObjectEnumSource
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SourceObjectEnum where
  toJSON e = String $ case e of
    SourceObjectEnumSource -> "source"

instance FromJSON SourceObjectEnum where
  parseJSON = withText "SourceObjectEnum" $ \case
    "source" -> pure SourceObjectEnumSource
    str -> fail (show str <> " is not a known valid option for SourceObjectEnum")

data SourceReceiverFlowRefundAttributesMethodEnum
  = SourceReceiverFlowRefundAttributesMethodEnumEmail
  | SourceReceiverFlowRefundAttributesMethodEnumManual
  | SourceReceiverFlowRefundAttributesMethodEnumNone
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SourceReceiverFlowRefundAttributesMethodEnum where
  toJSON e = String $ case e of
    SourceReceiverFlowRefundAttributesMethodEnumEmail -> "email"
    SourceReceiverFlowRefundAttributesMethodEnumManual -> "manual"
    SourceReceiverFlowRefundAttributesMethodEnumNone -> "none"

instance FromJSON SourceReceiverFlowRefundAttributesMethodEnum where
  parseJSON = withText "SourceReceiverFlowRefundAttributesMethodEnum" $ \case
    "email" -> pure SourceReceiverFlowRefundAttributesMethodEnumEmail
    "manual" -> pure SourceReceiverFlowRefundAttributesMethodEnumManual
    "none" -> pure SourceReceiverFlowRefundAttributesMethodEnumNone
    str -> fail (show str <> " is not a known valid option for SourceReceiverFlowRefundAttributesMethodEnum")

data SourceReceiverFlowRefundAttributesStatusEnum
  = SourceReceiverFlowRefundAttributesStatusEnumMissing
  | SourceReceiverFlowRefundAttributesStatusEnumRequested
  | SourceReceiverFlowRefundAttributesStatusEnumAvailable
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SourceReceiverFlowRefundAttributesStatusEnum where
  toJSON e = String $ case e of
    SourceReceiverFlowRefundAttributesStatusEnumMissing -> "missing"
    SourceReceiverFlowRefundAttributesStatusEnumRequested -> "requested"
    SourceReceiverFlowRefundAttributesStatusEnumAvailable -> "available"

instance FromJSON SourceReceiverFlowRefundAttributesStatusEnum where
  parseJSON = withText "SourceReceiverFlowRefundAttributesStatusEnum" $ \case
    "missing" -> pure SourceReceiverFlowRefundAttributesStatusEnumMissing
    "requested" -> pure SourceReceiverFlowRefundAttributesStatusEnumRequested
    "available" -> pure SourceReceiverFlowRefundAttributesStatusEnumAvailable
    str -> fail (show str <> " is not a known valid option for SourceReceiverFlowRefundAttributesStatusEnum")

data SourceStatusEnum
  = SourceStatusEnumCanceled
  | SourceStatusEnumChargeable
  | SourceStatusEnumConsumed
  | SourceStatusEnumFailed
  | SourceStatusEnumPending
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SourceStatusEnum where
  toJSON e = String $ case e of
    SourceStatusEnumCanceled -> "canceled"
    SourceStatusEnumChargeable -> "chargeable"
    SourceStatusEnumConsumed -> "consumed"
    SourceStatusEnumFailed -> "failed"
    SourceStatusEnumPending -> "pending"

instance FromJSON SourceStatusEnum where
  parseJSON = withText "SourceStatusEnum" $ \case
    "canceled" -> pure SourceStatusEnumCanceled
    "chargeable" -> pure SourceStatusEnumChargeable
    "consumed" -> pure SourceStatusEnumConsumed
    "failed" -> pure SourceStatusEnumFailed
    "pending" -> pure SourceStatusEnumPending
    str -> fail (show str <> " is not a known valid option for SourceStatusEnum")

data SourceTransactionObjectEnum
  = SourceTransactionObjectEnumSourceTransaction
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SourceTransactionObjectEnum where
  toJSON e = String $ case e of
    SourceTransactionObjectEnumSourceTransaction -> "source_transaction"

instance FromJSON SourceTransactionObjectEnum where
  parseJSON = withText "SourceTransactionObjectEnum" $ \case
    "source_transaction" -> pure SourceTransactionObjectEnumSourceTransaction
    str -> fail (show str <> " is not a known valid option for SourceTransactionObjectEnum")

data SourceTransactionStatusEnum
  = SourceTransactionStatusEnumSucceeded
  | SourceTransactionStatusEnumPending
  | SourceTransactionStatusEnumFailed
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SourceTransactionStatusEnum where
  toJSON e = String $ case e of
    SourceTransactionStatusEnumSucceeded -> "succeeded"
    SourceTransactionStatusEnumPending -> "pending"
    SourceTransactionStatusEnumFailed -> "failed"

instance FromJSON SourceTransactionStatusEnum where
  parseJSON = withText "SourceTransactionStatusEnum" $ \case
    "succeeded" -> pure SourceTransactionStatusEnumSucceeded
    "pending" -> pure SourceTransactionStatusEnumPending
    "failed" -> pure SourceTransactionStatusEnumFailed
    str -> fail (show str <> " is not a known valid option for SourceTransactionStatusEnum")

data SourceTransactionTypeEnum
  = SourceTransactionTypeEnumAchCreditTransfer
  | SourceTransactionTypeEnumAchDebit
  | SourceTransactionTypeEnumAlipay
  | SourceTransactionTypeEnumBancontact
  | SourceTransactionTypeEnumCard
  | SourceTransactionTypeEnumCardPresent
  | SourceTransactionTypeEnumEps
  | SourceTransactionTypeEnumGiropay
  | SourceTransactionTypeEnumIdeal
  | SourceTransactionTypeEnumKlarna
  | SourceTransactionTypeEnumMultibanco
  | SourceTransactionTypeEnumP24
  | SourceTransactionTypeEnumSepaDebit
  | SourceTransactionTypeEnumSofort
  | SourceTransactionTypeEnumThreeDSecure
  | SourceTransactionTypeEnumWechat
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SourceTransactionTypeEnum where
  toJSON e = String $ case e of
    SourceTransactionTypeEnumAchCreditTransfer -> "ach_credit_transfer"
    SourceTransactionTypeEnumAchDebit -> "ach_debit"
    SourceTransactionTypeEnumAlipay -> "alipay"
    SourceTransactionTypeEnumBancontact -> "bancontact"
    SourceTransactionTypeEnumCard -> "card"
    SourceTransactionTypeEnumCardPresent -> "card_present"
    SourceTransactionTypeEnumEps -> "eps"
    SourceTransactionTypeEnumGiropay -> "giropay"
    SourceTransactionTypeEnumIdeal -> "ideal"
    SourceTransactionTypeEnumKlarna -> "klarna"
    SourceTransactionTypeEnumMultibanco -> "multibanco"
    SourceTransactionTypeEnumP24 -> "p24"
    SourceTransactionTypeEnumSepaDebit -> "sepa_debit"
    SourceTransactionTypeEnumSofort -> "sofort"
    SourceTransactionTypeEnumThreeDSecure -> "three_d_secure"
    SourceTransactionTypeEnumWechat -> "wechat"

instance FromJSON SourceTransactionTypeEnum where
  parseJSON = withText "SourceTransactionTypeEnum" $ \case
    "ach_credit_transfer" -> pure SourceTransactionTypeEnumAchCreditTransfer
    "ach_debit" -> pure SourceTransactionTypeEnumAchDebit
    "alipay" -> pure SourceTransactionTypeEnumAlipay
    "bancontact" -> pure SourceTransactionTypeEnumBancontact
    "card" -> pure SourceTransactionTypeEnumCard
    "card_present" -> pure SourceTransactionTypeEnumCardPresent
    "eps" -> pure SourceTransactionTypeEnumEps
    "giropay" -> pure SourceTransactionTypeEnumGiropay
    "ideal" -> pure SourceTransactionTypeEnumIdeal
    "klarna" -> pure SourceTransactionTypeEnumKlarna
    "multibanco" -> pure SourceTransactionTypeEnumMultibanco
    "p24" -> pure SourceTransactionTypeEnumP24
    "sepa_debit" -> pure SourceTransactionTypeEnumSepaDebit
    "sofort" -> pure SourceTransactionTypeEnumSofort
    "three_d_secure" -> pure SourceTransactionTypeEnumThreeDSecure
    "wechat" -> pure SourceTransactionTypeEnumWechat
    str -> fail (show str <> " is not a known valid option for SourceTransactionTypeEnum")

data SourceTypeEnum
  = SourceTypeEnumAchCreditTransfer
  | SourceTypeEnumAchDebit
  | SourceTypeEnumAlipay
  | SourceTypeEnumBancontact
  | SourceTypeEnumCard
  | SourceTypeEnumCardPresent
  | SourceTypeEnumEps
  | SourceTypeEnumGiropay
  | SourceTypeEnumIdeal
  | SourceTypeEnumKlarna
  | SourceTypeEnumMultibanco
  | SourceTypeEnumP24
  | SourceTypeEnumSepaDebit
  | SourceTypeEnumSofort
  | SourceTypeEnumThreeDSecure
  | SourceTypeEnumWechat
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SourceTypeEnum where
  toJSON e = String $ case e of
    SourceTypeEnumAchCreditTransfer -> "ach_credit_transfer"
    SourceTypeEnumAchDebit -> "ach_debit"
    SourceTypeEnumAlipay -> "alipay"
    SourceTypeEnumBancontact -> "bancontact"
    SourceTypeEnumCard -> "card"
    SourceTypeEnumCardPresent -> "card_present"
    SourceTypeEnumEps -> "eps"
    SourceTypeEnumGiropay -> "giropay"
    SourceTypeEnumIdeal -> "ideal"
    SourceTypeEnumKlarna -> "klarna"
    SourceTypeEnumMultibanco -> "multibanco"
    SourceTypeEnumP24 -> "p24"
    SourceTypeEnumSepaDebit -> "sepa_debit"
    SourceTypeEnumSofort -> "sofort"
    SourceTypeEnumThreeDSecure -> "three_d_secure"
    SourceTypeEnumWechat -> "wechat"

instance FromJSON SourceTypeEnum where
  parseJSON = withText "SourceTypeEnum" $ \case
    "ach_credit_transfer" -> pure SourceTypeEnumAchCreditTransfer
    "ach_debit" -> pure SourceTypeEnumAchDebit
    "alipay" -> pure SourceTypeEnumAlipay
    "bancontact" -> pure SourceTypeEnumBancontact
    "card" -> pure SourceTypeEnumCard
    "card_present" -> pure SourceTypeEnumCardPresent
    "eps" -> pure SourceTypeEnumEps
    "giropay" -> pure SourceTypeEnumGiropay
    "ideal" -> pure SourceTypeEnumIdeal
    "klarna" -> pure SourceTypeEnumKlarna
    "multibanco" -> pure SourceTypeEnumMultibanco
    "p24" -> pure SourceTypeEnumP24
    "sepa_debit" -> pure SourceTypeEnumSepaDebit
    "sofort" -> pure SourceTypeEnumSofort
    "three_d_secure" -> pure SourceTypeEnumThreeDSecure
    "wechat" -> pure SourceTypeEnumWechat
    str -> fail (show str <> " is not a known valid option for SourceTypeEnum")

data StatusEnum
  = StatusEnumClosed
  | StatusEnumPending
  | StatusEnumReversed
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON StatusEnum where
  toJSON e = String $ case e of
    StatusEnumClosed -> "closed"
    StatusEnumPending -> "pending"
    StatusEnumReversed -> "reversed"

instance FromJSON StatusEnum where
  parseJSON = withText "StatusEnum" $ \case
    "closed" -> pure StatusEnumClosed
    "pending" -> pure StatusEnumPending
    "reversed" -> pure StatusEnumReversed
    str -> fail (show str <> " is not a known valid option for StatusEnum")

data SubscriptionBillingCycleAnchorEnum
  = SubscriptionBillingCycleAnchorEnumNow
  | SubscriptionBillingCycleAnchorEnumUnchanged
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionBillingCycleAnchorEnum where
  toJSON e = String $ case e of
    SubscriptionBillingCycleAnchorEnumNow -> "now"
    SubscriptionBillingCycleAnchorEnumUnchanged -> "unchanged"

instance FromJSON SubscriptionBillingCycleAnchorEnum where
  parseJSON = withText "SubscriptionBillingCycleAnchorEnum" $ \case
    "now" -> pure SubscriptionBillingCycleAnchorEnumNow
    "unchanged" -> pure SubscriptionBillingCycleAnchorEnumUnchanged
    str -> fail (show str <> " is not a known valid option for SubscriptionBillingCycleAnchorEnum")

data SubscriptionBillingEnum
  = SubscriptionBillingEnumChargeAutomatically
  | SubscriptionBillingEnumSendInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionBillingEnum where
  toJSON e = String $ case e of
    SubscriptionBillingEnumChargeAutomatically -> "charge_automatically"
    SubscriptionBillingEnumSendInvoice -> "send_invoice"

instance FromJSON SubscriptionBillingEnum where
  parseJSON = withText "SubscriptionBillingEnum" $ \case
    "charge_automatically" -> pure SubscriptionBillingEnumChargeAutomatically
    "send_invoice" -> pure SubscriptionBillingEnumSendInvoice
    str -> fail (show str <> " is not a known valid option for SubscriptionBillingEnum")

data SubscriptionCancelAtEnum
  = SubscriptionCancelAtEnum
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionCancelAtEnum where
  toJSON e = String $ case e of
    SubscriptionCancelAtEnum -> ""

instance FromJSON SubscriptionCancelAtEnum where
  parseJSON = withText "SubscriptionCancelAtEnum" $ \case
    "" -> pure SubscriptionCancelAtEnum
    str -> fail (show str <> " is not a known valid option for SubscriptionCancelAtEnum")

data SubscriptionCollectionMethodEnum
  = SubscriptionCollectionMethodEnumChargeAutomatically
  | SubscriptionCollectionMethodEnumSendInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionCollectionMethodEnum where
  toJSON e = String $ case e of
    SubscriptionCollectionMethodEnumChargeAutomatically -> "charge_automatically"
    SubscriptionCollectionMethodEnumSendInvoice -> "send_invoice"

instance FromJSON SubscriptionCollectionMethodEnum where
  parseJSON = withText "SubscriptionCollectionMethodEnum" $ \case
    "charge_automatically" -> pure SubscriptionCollectionMethodEnumChargeAutomatically
    "send_invoice" -> pure SubscriptionCollectionMethodEnumSendInvoice
    str -> fail (show str <> " is not a known valid option for SubscriptionCollectionMethodEnum")

data SubscriptionDefaultTaxRatesEnum
  = SubscriptionDefaultTaxRatesEnum
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionDefaultTaxRatesEnum where
  toJSON e = String $ case e of
    SubscriptionDefaultTaxRatesEnum -> ""

instance FromJSON SubscriptionDefaultTaxRatesEnum where
  parseJSON = withText "SubscriptionDefaultTaxRatesEnum" $ \case
    "" -> pure SubscriptionDefaultTaxRatesEnum
    str -> fail (show str <> " is not a known valid option for SubscriptionDefaultTaxRatesEnum")

data SubscriptionItemObjectEnum
  = SubscriptionItemObjectEnumSubscriptionItem
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionItemObjectEnum where
  toJSON e = String $ case e of
    SubscriptionItemObjectEnumSubscriptionItem -> "subscription_item"

instance FromJSON SubscriptionItemObjectEnum where
  parseJSON = withText "SubscriptionItemObjectEnum" $ \case
    "subscription_item" -> pure SubscriptionItemObjectEnumSubscriptionItem
    str -> fail (show str <> " is not a known valid option for SubscriptionItemObjectEnum")

data SubscriptionObjectEnum
  = SubscriptionObjectEnumSubscription
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionObjectEnum where
  toJSON e = String $ case e of
    SubscriptionObjectEnumSubscription -> "subscription"

instance FromJSON SubscriptionObjectEnum where
  parseJSON = withText "SubscriptionObjectEnum" $ \case
    "subscription" -> pure SubscriptionObjectEnumSubscription
    str -> fail (show str <> " is not a known valid option for SubscriptionObjectEnum")

data SubscriptionScheduleBillingEnum
  = SubscriptionScheduleBillingEnumChargeAutomatically
  | SubscriptionScheduleBillingEnumSendInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionScheduleBillingEnum where
  toJSON e = String $ case e of
    SubscriptionScheduleBillingEnumChargeAutomatically -> "charge_automatically"
    SubscriptionScheduleBillingEnumSendInvoice -> "send_invoice"

instance FromJSON SubscriptionScheduleBillingEnum where
  parseJSON = withText "SubscriptionScheduleBillingEnum" $ \case
    "charge_automatically" -> pure SubscriptionScheduleBillingEnumChargeAutomatically
    "send_invoice" -> pure SubscriptionScheduleBillingEnumSendInvoice
    str -> fail (show str <> " is not a known valid option for SubscriptionScheduleBillingEnum")

data SubscriptionScheduleCollectionMethodEnum
  = SubscriptionScheduleCollectionMethodEnumChargeAutomatically
  | SubscriptionScheduleCollectionMethodEnumSendInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionScheduleCollectionMethodEnum where
  toJSON e = String $ case e of
    SubscriptionScheduleCollectionMethodEnumChargeAutomatically -> "charge_automatically"
    SubscriptionScheduleCollectionMethodEnumSendInvoice -> "send_invoice"

instance FromJSON SubscriptionScheduleCollectionMethodEnum where
  parseJSON = withText "SubscriptionScheduleCollectionMethodEnum" $ \case
    "charge_automatically" -> pure SubscriptionScheduleCollectionMethodEnumChargeAutomatically
    "send_invoice" -> pure SubscriptionScheduleCollectionMethodEnumSendInvoice
    str -> fail (show str <> " is not a known valid option for SubscriptionScheduleCollectionMethodEnum")

data SubscriptionScheduleEndBehaviorEnum
  = SubscriptionScheduleEndBehaviorEnumCancel
  | SubscriptionScheduleEndBehaviorEnumRelease
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionScheduleEndBehaviorEnum where
  toJSON e = String $ case e of
    SubscriptionScheduleEndBehaviorEnumCancel -> "cancel"
    SubscriptionScheduleEndBehaviorEnumRelease -> "release"

instance FromJSON SubscriptionScheduleEndBehaviorEnum where
  parseJSON = withText "SubscriptionScheduleEndBehaviorEnum" $ \case
    "cancel" -> pure SubscriptionScheduleEndBehaviorEnumCancel
    "release" -> pure SubscriptionScheduleEndBehaviorEnumRelease
    str -> fail (show str <> " is not a known valid option for SubscriptionScheduleEndBehaviorEnum")

data SubscriptionScheduleObjectEnum
  = SubscriptionScheduleObjectEnumSubscriptionSchedule
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionScheduleObjectEnum where
  toJSON e = String $ case e of
    SubscriptionScheduleObjectEnumSubscriptionSchedule -> "subscription_schedule"

instance FromJSON SubscriptionScheduleObjectEnum where
  parseJSON = withText "SubscriptionScheduleObjectEnum" $ \case
    "subscription_schedule" -> pure SubscriptionScheduleObjectEnumSubscriptionSchedule
    str -> fail (show str <> " is not a known valid option for SubscriptionScheduleObjectEnum")

data SubscriptionSchedulePhaseConfigurationCollectionMethodEnum
  = SubscriptionSchedulePhaseConfigurationCollectionMethodEnumChargeAutomatically
  | SubscriptionSchedulePhaseConfigurationCollectionMethodEnumSendInvoice
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionSchedulePhaseConfigurationCollectionMethodEnum where
  toJSON e = String $ case e of
    SubscriptionSchedulePhaseConfigurationCollectionMethodEnumChargeAutomatically -> "charge_automatically"
    SubscriptionSchedulePhaseConfigurationCollectionMethodEnumSendInvoice -> "send_invoice"

instance FromJSON SubscriptionSchedulePhaseConfigurationCollectionMethodEnum where
  parseJSON = withText "SubscriptionSchedulePhaseConfigurationCollectionMethodEnum" $ \case
    "charge_automatically" -> pure SubscriptionSchedulePhaseConfigurationCollectionMethodEnumChargeAutomatically
    "send_invoice" -> pure SubscriptionSchedulePhaseConfigurationCollectionMethodEnumSendInvoice
    str -> fail (show str <> " is not a known valid option for SubscriptionSchedulePhaseConfigurationCollectionMethodEnum")

data SubscriptionScheduleRenewalBehaviorEnum
  = SubscriptionScheduleRenewalBehaviorEnumCancel
  | SubscriptionScheduleRenewalBehaviorEnumNone
  | SubscriptionScheduleRenewalBehaviorEnumRelease
  | SubscriptionScheduleRenewalBehaviorEnumRenew
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionScheduleRenewalBehaviorEnum where
  toJSON e = String $ case e of
    SubscriptionScheduleRenewalBehaviorEnumCancel -> "cancel"
    SubscriptionScheduleRenewalBehaviorEnumNone -> "none"
    SubscriptionScheduleRenewalBehaviorEnumRelease -> "release"
    SubscriptionScheduleRenewalBehaviorEnumRenew -> "renew"

instance FromJSON SubscriptionScheduleRenewalBehaviorEnum where
  parseJSON = withText "SubscriptionScheduleRenewalBehaviorEnum" $ \case
    "cancel" -> pure SubscriptionScheduleRenewalBehaviorEnumCancel
    "none" -> pure SubscriptionScheduleRenewalBehaviorEnumNone
    "release" -> pure SubscriptionScheduleRenewalBehaviorEnumRelease
    "renew" -> pure SubscriptionScheduleRenewalBehaviorEnumRenew
    str -> fail (show str <> " is not a known valid option for SubscriptionScheduleRenewalBehaviorEnum")

data SubscriptionScheduleRenewalIntervalIntervalEnum
  = SubscriptionScheduleRenewalIntervalIntervalEnumDay
  | SubscriptionScheduleRenewalIntervalIntervalEnumMonth
  | SubscriptionScheduleRenewalIntervalIntervalEnumWeek
  | SubscriptionScheduleRenewalIntervalIntervalEnumYear
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionScheduleRenewalIntervalIntervalEnum where
  toJSON e = String $ case e of
    SubscriptionScheduleRenewalIntervalIntervalEnumDay -> "day"
    SubscriptionScheduleRenewalIntervalIntervalEnumMonth -> "month"
    SubscriptionScheduleRenewalIntervalIntervalEnumWeek -> "week"
    SubscriptionScheduleRenewalIntervalIntervalEnumYear -> "year"

instance FromJSON SubscriptionScheduleRenewalIntervalIntervalEnum where
  parseJSON = withText "SubscriptionScheduleRenewalIntervalIntervalEnum" $ \case
    "day" -> pure SubscriptionScheduleRenewalIntervalIntervalEnumDay
    "month" -> pure SubscriptionScheduleRenewalIntervalIntervalEnumMonth
    "week" -> pure SubscriptionScheduleRenewalIntervalIntervalEnumWeek
    "year" -> pure SubscriptionScheduleRenewalIntervalIntervalEnumYear
    str -> fail (show str <> " is not a known valid option for SubscriptionScheduleRenewalIntervalIntervalEnum")

data SubscriptionScheduleStatusEnum
  = SubscriptionScheduleStatusEnumActive
  | SubscriptionScheduleStatusEnumCanceled
  | SubscriptionScheduleStatusEnumCompleted
  | SubscriptionScheduleStatusEnumNotStarted
  | SubscriptionScheduleStatusEnumReleased
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionScheduleStatusEnum where
  toJSON e = String $ case e of
    SubscriptionScheduleStatusEnumActive -> "active"
    SubscriptionScheduleStatusEnumCanceled -> "canceled"
    SubscriptionScheduleStatusEnumCompleted -> "completed"
    SubscriptionScheduleStatusEnumNotStarted -> "not_started"
    SubscriptionScheduleStatusEnumReleased -> "released"

instance FromJSON SubscriptionScheduleStatusEnum where
  parseJSON = withText "SubscriptionScheduleStatusEnum" $ \case
    "active" -> pure SubscriptionScheduleStatusEnumActive
    "canceled" -> pure SubscriptionScheduleStatusEnumCanceled
    "completed" -> pure SubscriptionScheduleStatusEnumCompleted
    "not_started" -> pure SubscriptionScheduleStatusEnumNotStarted
    "released" -> pure SubscriptionScheduleStatusEnumReleased
    str -> fail (show str <> " is not a known valid option for SubscriptionScheduleStatusEnum")

data SubscriptionStatusEnum
  = SubscriptionStatusEnumActive
  | SubscriptionStatusEnumCanceled
  | SubscriptionStatusEnumIncomplete
  | SubscriptionStatusEnumIncompleteExpired
  | SubscriptionStatusEnumPastDue
  | SubscriptionStatusEnumTrialing
  | SubscriptionStatusEnumUnpaid
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionStatusEnum where
  toJSON e = String $ case e of
    SubscriptionStatusEnumActive -> "active"
    SubscriptionStatusEnumCanceled -> "canceled"
    SubscriptionStatusEnumIncomplete -> "incomplete"
    SubscriptionStatusEnumIncompleteExpired -> "incomplete_expired"
    SubscriptionStatusEnumPastDue -> "past_due"
    SubscriptionStatusEnumTrialing -> "trialing"
    SubscriptionStatusEnumUnpaid -> "unpaid"

instance FromJSON SubscriptionStatusEnum where
  parseJSON = withText "SubscriptionStatusEnum" $ \case
    "active" -> pure SubscriptionStatusEnumActive
    "canceled" -> pure SubscriptionStatusEnumCanceled
    "incomplete" -> pure SubscriptionStatusEnumIncomplete
    "incomplete_expired" -> pure SubscriptionStatusEnumIncompleteExpired
    "past_due" -> pure SubscriptionStatusEnumPastDue
    "trialing" -> pure SubscriptionStatusEnumTrialing
    "unpaid" -> pure SubscriptionStatusEnumUnpaid
    str -> fail (show str <> " is not a known valid option for SubscriptionStatusEnum")

data SubscriptionTrialEndEnum
  = SubscriptionTrialEndEnumNow
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON SubscriptionTrialEndEnum where
  toJSON e = String $ case e of
    SubscriptionTrialEndEnumNow -> "now"

instance FromJSON SubscriptionTrialEndEnum where
  parseJSON = withText "SubscriptionTrialEndEnum" $ \case
    "now" -> pure SubscriptionTrialEndEnumNow
    str -> fail (show str <> " is not a known valid option for SubscriptionTrialEndEnum")

data TaxIdObjectEnum
  = TaxIdObjectEnumTaxId
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TaxIdObjectEnum where
  toJSON e = String $ case e of
    TaxIdObjectEnumTaxId -> "tax_id"

instance FromJSON TaxIdObjectEnum where
  parseJSON = withText "TaxIdObjectEnum" $ \case
    "tax_id" -> pure TaxIdObjectEnumTaxId
    str -> fail (show str <> " is not a known valid option for TaxIdObjectEnum")

data TaxIdTypeEnum
  = TaxIdTypeEnumAuAbn
  | TaxIdTypeEnumEuVat
  | TaxIdTypeEnumInGst
  | TaxIdTypeEnumNoVat
  | TaxIdTypeEnumNzGst
  | TaxIdTypeEnumUnknown
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TaxIdTypeEnum where
  toJSON e = String $ case e of
    TaxIdTypeEnumAuAbn -> "au_abn"
    TaxIdTypeEnumEuVat -> "eu_vat"
    TaxIdTypeEnumInGst -> "in_gst"
    TaxIdTypeEnumNoVat -> "no_vat"
    TaxIdTypeEnumNzGst -> "nz_gst"
    TaxIdTypeEnumUnknown -> "unknown"

instance FromJSON TaxIdTypeEnum where
  parseJSON = withText "TaxIdTypeEnum" $ \case
    "au_abn" -> pure TaxIdTypeEnumAuAbn
    "eu_vat" -> pure TaxIdTypeEnumEuVat
    "in_gst" -> pure TaxIdTypeEnumInGst
    "no_vat" -> pure TaxIdTypeEnumNoVat
    "nz_gst" -> pure TaxIdTypeEnumNzGst
    "unknown" -> pure TaxIdTypeEnumUnknown
    str -> fail (show str <> " is not a known valid option for TaxIdTypeEnum")

data TaxIdVerificationStatusEnum
  = TaxIdVerificationStatusEnumPending
  | TaxIdVerificationStatusEnumUnavailable
  | TaxIdVerificationStatusEnumUnverified
  | TaxIdVerificationStatusEnumVerified
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TaxIdVerificationStatusEnum where
  toJSON e = String $ case e of
    TaxIdVerificationStatusEnumPending -> "pending"
    TaxIdVerificationStatusEnumUnavailable -> "unavailable"
    TaxIdVerificationStatusEnumUnverified -> "unverified"
    TaxIdVerificationStatusEnumVerified -> "verified"

instance FromJSON TaxIdVerificationStatusEnum where
  parseJSON = withText "TaxIdVerificationStatusEnum" $ \case
    "pending" -> pure TaxIdVerificationStatusEnumPending
    "unavailable" -> pure TaxIdVerificationStatusEnumUnavailable
    "unverified" -> pure TaxIdVerificationStatusEnumUnverified
    "verified" -> pure TaxIdVerificationStatusEnumVerified
    str -> fail (show str <> " is not a known valid option for TaxIdVerificationStatusEnum")

data TaxRateObjectEnum
  = TaxRateObjectEnumTaxRate
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TaxRateObjectEnum where
  toJSON e = String $ case e of
    TaxRateObjectEnumTaxRate -> "tax_rate"

instance FromJSON TaxRateObjectEnum where
  parseJSON = withText "TaxRateObjectEnum" $ \case
    "tax_rate" -> pure TaxRateObjectEnumTaxRate
    str -> fail (show str <> " is not a known valid option for TaxRateObjectEnum")

data TerminalConnectionTokenObjectEnum
  = TerminalConnectionTokenObjectEnumTerminalConnectionToken
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TerminalConnectionTokenObjectEnum where
  toJSON e = String $ case e of
    TerminalConnectionTokenObjectEnumTerminalConnectionToken -> "terminal.connection_token"

instance FromJSON TerminalConnectionTokenObjectEnum where
  parseJSON = withText "TerminalConnectionTokenObjectEnum" $ \case
    "terminal.connection_token" -> pure TerminalConnectionTokenObjectEnumTerminalConnectionToken
    str -> fail (show str <> " is not a known valid option for TerminalConnectionTokenObjectEnum")

data TerminalLocationObjectEnum
  = TerminalLocationObjectEnumTerminalLocation
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TerminalLocationObjectEnum where
  toJSON e = String $ case e of
    TerminalLocationObjectEnumTerminalLocation -> "terminal.location"

instance FromJSON TerminalLocationObjectEnum where
  parseJSON = withText "TerminalLocationObjectEnum" $ \case
    "terminal.location" -> pure TerminalLocationObjectEnumTerminalLocation
    str -> fail (show str <> " is not a known valid option for TerminalLocationObjectEnum")

data TerminalReaderObjectEnum
  = TerminalReaderObjectEnumTerminalReader
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TerminalReaderObjectEnum where
  toJSON e = String $ case e of
    TerminalReaderObjectEnumTerminalReader -> "terminal.reader"

instance FromJSON TerminalReaderObjectEnum where
  parseJSON = withText "TerminalReaderObjectEnum" $ \case
    "terminal.reader" -> pure TerminalReaderObjectEnumTerminalReader
    str -> fail (show str <> " is not a known valid option for TerminalReaderObjectEnum")

data ThreeDSecureObjectEnum
  = ThreeDSecureObjectEnumThreeDSecure
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON ThreeDSecureObjectEnum where
  toJSON e = String $ case e of
    ThreeDSecureObjectEnumThreeDSecure -> "three_d_secure"

instance FromJSON ThreeDSecureObjectEnum where
  parseJSON = withText "ThreeDSecureObjectEnum" $ \case
    "three_d_secure" -> pure ThreeDSecureObjectEnumThreeDSecure
    str -> fail (show str <> " is not a known valid option for ThreeDSecureObjectEnum")

data TokenObjectEnum
  = TokenObjectEnumToken
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TokenObjectEnum where
  toJSON e = String $ case e of
    TokenObjectEnumToken -> "token"

instance FromJSON TokenObjectEnum where
  parseJSON = withText "TokenObjectEnum" $ \case
    "token" -> pure TokenObjectEnumToken
    str -> fail (show str <> " is not a known valid option for TokenObjectEnum")

data TopupObjectEnum
  = TopupObjectEnumTopup
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TopupObjectEnum where
  toJSON e = String $ case e of
    TopupObjectEnumTopup -> "topup"

instance FromJSON TopupObjectEnum where
  parseJSON = withText "TopupObjectEnum" $ \case
    "topup" -> pure TopupObjectEnumTopup
    str -> fail (show str <> " is not a known valid option for TopupObjectEnum")

data TopupStatusEnum
  = TopupStatusEnumCanceled
  | TopupStatusEnumFailed
  | TopupStatusEnumPending
  | TopupStatusEnumReversed
  | TopupStatusEnumSucceeded
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TopupStatusEnum where
  toJSON e = String $ case e of
    TopupStatusEnumCanceled -> "canceled"
    TopupStatusEnumFailed -> "failed"
    TopupStatusEnumPending -> "pending"
    TopupStatusEnumReversed -> "reversed"
    TopupStatusEnumSucceeded -> "succeeded"

instance FromJSON TopupStatusEnum where
  parseJSON = withText "TopupStatusEnum" $ \case
    "canceled" -> pure TopupStatusEnumCanceled
    "failed" -> pure TopupStatusEnumFailed
    "pending" -> pure TopupStatusEnumPending
    "reversed" -> pure TopupStatusEnumReversed
    "succeeded" -> pure TopupStatusEnumSucceeded
    str -> fail (show str <> " is not a known valid option for TopupStatusEnum")

data TransferObjectEnum
  = TransferObjectEnumTransfer
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TransferObjectEnum where
  toJSON e = String $ case e of
    TransferObjectEnumTransfer -> "transfer"

instance FromJSON TransferObjectEnum where
  parseJSON = withText "TransferObjectEnum" $ \case
    "transfer" -> pure TransferObjectEnumTransfer
    str -> fail (show str <> " is not a known valid option for TransferObjectEnum")

data TransferReversalObjectEnum
  = TransferReversalObjectEnumTransferReversal
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TransferReversalObjectEnum where
  toJSON e = String $ case e of
    TransferReversalObjectEnumTransferReversal -> "transfer_reversal"

instance FromJSON TransferReversalObjectEnum where
  parseJSON = withText "TransferReversalObjectEnum" $ \case
    "transfer_reversal" -> pure TransferReversalObjectEnumTransferReversal
    str -> fail (show str <> " is not a known valid option for TransferReversalObjectEnum")

data TransferScheduleIntervalEnum
  = TransferScheduleIntervalEnumManual
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TransferScheduleIntervalEnum where
  toJSON e = String $ case e of
    TransferScheduleIntervalEnumManual -> "manual"

instance FromJSON TransferScheduleIntervalEnum where
  parseJSON = withText "TransferScheduleIntervalEnum" $ \case
    "manual" -> pure TransferScheduleIntervalEnumManual
    str -> fail (show str <> " is not a known valid option for TransferScheduleIntervalEnum")

data TransferSourceTypeEnum
  = TransferSourceTypeEnumCard
  | TransferSourceTypeEnumBankAccount
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TransferSourceTypeEnum where
  toJSON e = String $ case e of
    TransferSourceTypeEnumCard -> "card"
    TransferSourceTypeEnumBankAccount -> "bank_account"

instance FromJSON TransferSourceTypeEnum where
  parseJSON = withText "TransferSourceTypeEnum" $ \case
    "card" -> pure TransferSourceTypeEnumCard
    "bank_account" -> pure TransferSourceTypeEnumBankAccount
    str -> fail (show str <> " is not a known valid option for TransferSourceTypeEnum")

data TransformUsageRoundEnum
  = TransformUsageRoundEnumDown
  | TransformUsageRoundEnumUp
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TransformUsageRoundEnum where
  toJSON e = String $ case e of
    TransformUsageRoundEnumDown -> "down"
    TransformUsageRoundEnumUp -> "up"

instance FromJSON TransformUsageRoundEnum where
  parseJSON = withText "TransformUsageRoundEnum" $ \case
    "down" -> pure TransformUsageRoundEnumDown
    "up" -> pure TransformUsageRoundEnumUp
    str -> fail (show str <> " is not a known valid option for TransformUsageRoundEnum")

data TypeEnum
  = TypeEnumGood
  | TypeEnumService
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON TypeEnum where
  toJSON e = String $ case e of
    TypeEnumGood -> "good"
    TypeEnumService -> "service"

instance FromJSON TypeEnum where
  parseJSON = withText "TypeEnum" $ \case
    "good" -> pure TypeEnumGood
    "service" -> pure TypeEnumService
    str -> fail (show str <> " is not a known valid option for TypeEnum")

data UsageRecordObjectEnum
  = UsageRecordObjectEnumUsageRecord
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON UsageRecordObjectEnum where
  toJSON e = String $ case e of
    UsageRecordObjectEnumUsageRecord -> "usage_record"

instance FromJSON UsageRecordObjectEnum where
  parseJSON = withText "UsageRecordObjectEnum" $ \case
    "usage_record" -> pure UsageRecordObjectEnumUsageRecord
    str -> fail (show str <> " is not a known valid option for UsageRecordObjectEnum")

data UsageRecordSummaryObjectEnum
  = UsageRecordSummaryObjectEnumUsageRecordSummary
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON UsageRecordSummaryObjectEnum where
  toJSON e = String $ case e of
    UsageRecordSummaryObjectEnumUsageRecordSummary -> "usage_record_summary"

instance FromJSON UsageRecordSummaryObjectEnum where
  parseJSON = withText "UsageRecordSummaryObjectEnum" $ \case
    "usage_record_summary" -> pure UsageRecordSummaryObjectEnumUsageRecordSummary
    str -> fail (show str <> " is not a known valid option for UsageRecordSummaryObjectEnum")

data WebhookEndpointObjectEnum
  = WebhookEndpointObjectEnumWebhookEndpoint
  deriving (Show, Eq, Ord, Enum, Bounded, Generic)

instance ToJSON WebhookEndpointObjectEnum where
  toJSON e = String $ case e of
    WebhookEndpointObjectEnumWebhookEndpoint -> "webhook_endpoint"

instance FromJSON WebhookEndpointObjectEnum where
  parseJSON = withText "WebhookEndpointObjectEnum" $ \case
    "webhook_endpoint" -> pure WebhookEndpointObjectEnumWebhookEndpoint
    str -> fail (show str <> " is not a known valid option for WebhookEndpointObjectEnum")


-- Describes: "account"

data Account
  = Account
    { accountId :: Id (Account)
    {- ^ Unique identifier for the object. -}
    , accountObject :: AccountObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , accountCapabilities :: AccountCapabilities
    , accountChargesEnabled :: Bool
    {- ^ Whether the account can create live charges. -}
    , accountCompany :: LegalEntityCompany
    , accountCountry :: Text
    {- ^ The account's country. -}
    , accountCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , accountDefaultCurrency :: Text
    {- ^ Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts). -}
    , accountDetailsSubmitted :: Bool
    {- ^ Whether account details have been submitted. Standard accounts cannot receive payouts before this is true. -}
    , accountExternalAccounts :: Object
    {- ^ External accounts (bank accounts and debit cards) currently attached to this account -}
    , accountIndividual :: Person
    , accountMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , accountPayoutsEnabled :: Bool
    {- ^ Whether Stripe can send payouts to this account. -}
    , accountRequirements :: AccountRequirements
    , accountTosAcceptance :: AccountTosAcceptance
    , accountType_ :: Text
    {- ^ The Stripe account type. Can be `standard`, `express`, or `custom`. -}
    , accountBusinessProfile :: Maybe (AccountBusinessProfile)
    {- ^ Optional information related to the business. -}
    , accountBusinessType :: Maybe (Text)
    {- ^ The business type. Can be `individual` or `company`. -}
    , accountEmail :: Maybe (Text)
    {- ^ The primary user's email address. -}
    , accountSettings :: Maybe (AccountSettings)
    {- ^ Options for customizing how the account functions within Stripe. -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_branding_settings"

data AccountBrandingSettings
  = AccountBrandingSettings
    { accountBrandingSettingsIcon :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An icon for the account. Must be square and at least 128px x 128px. -}
    , accountBrandingSettingsLogo :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for the account that will be used in Checkout instead of the icon and without the account's name next to it if provided. Must be at least 128px x 128px. -}
    , accountBrandingSettingsPrimaryColor :: Maybe (Text)
    {- ^ A CSS hex color value representing the primary branding color for this account -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_business_profile"

data AccountBusinessProfile
  = AccountBusinessProfile
    { accountBusinessProfileMcc :: Maybe (Text)
    {- ^ The merchant category code for the account. MCCs are used to classify businesses based on the goods or services they provide. -}
    , accountBusinessProfileName :: Maybe (Text)
    {- ^ The customer-facing business name. -}
    , accountBusinessProfileProductDescription :: Maybe (Text)
    {- ^ Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes. -}
    , accountBusinessProfileSupportAddress :: Maybe (Address)
    {- ^ A publicly available mailing address for sending support issues to. -}
    , accountBusinessProfileSupportEmail :: Maybe (Text)
    {- ^ A publicly available email address for sending support issues to. -}
    , accountBusinessProfileSupportPhone :: Maybe (Text)
    {- ^ A publicly available phone number to call with support issues. -}
    , accountBusinessProfileSupportUrl :: Maybe (Text)
    {- ^ A publicly available website for handling support issues. -}
    , accountBusinessProfileUrl :: Maybe (Text)
    {- ^ The business's publicly available website. -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_capabilities"

data AccountCapabilities
  = AccountCapabilities
    { accountCapabilitiesCardPayments :: AccountCapabilitiesCardPaymentsEnum
    {- ^ The status of the card payments capability of the account, or whether the account can directly process credit and debit card charges. -}
    , accountCapabilitiesLegacyPayments :: AccountCapabilitiesLegacyPaymentsEnum
    {- ^ The status of the legacy payments capability of the account. -}
    , accountCapabilitiesTransfers :: AccountCapabilitiesTransfersEnum
    {- ^ The status of the transfers capability of the account, or whether your platform can transfer funds to the account. -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_capability_requirements"

data AccountCapabilityRequirements
  = AccountCapabilityRequirements
    { accountCapabilityRequirementsCurrentlyDue :: Vector (Text)
    {- ^ The fields that need to be collected to keep the capability enabled. If not collected by the `current_deadline`, these fields appear in `past_due` as well, and the capability is disabled. -}
    , accountCapabilityRequirementsEventuallyDue :: Vector (Text)
    {- ^ The fields that need to be collected assuming all volume thresholds are reached. As they become required, these fields appear in `currently_due` as well, and the `current_deadline` is set. -}
    , accountCapabilityRequirementsPastDue :: Vector (Text)
    {- ^ The fields that weren't collected by the `current_deadline`. These fields need to be collected to enable the capability for the account. -}
    , accountCapabilityRequirementsPendingVerification :: Vector (Text)
    {- ^ Additional fields that may be required depending on the results of verification or review for provided requirements. If any of these fields become required, they appear in `currently_due` or `past_due`. -}
    , accountCapabilityRequirementsCurrentDeadline :: Maybe (POSIXTime)
    {- ^ The date the fields in `currently_due` must be collected by to keep the capability enabled for the account. -}
    , accountCapabilityRequirementsDisabledReason :: Maybe (Text)
    {- ^ If the capability is disabled, this string describes why. Possible values are `requirement.fields_needed`, `pending.onboarding`, `pending.review`, `rejected_fraud`, or `rejected.other`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_card_payments_settings"

data AccountCardPaymentsSettings
  = AccountCardPaymentsSettings
    { accountCardPaymentsSettingsDeclineOn :: AccountDeclineChargeOn
    , accountCardPaymentsSettingsStatementDescriptorPrefix :: Maybe (Text)
    {- ^ The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. `statement_descriptor_prefix` is useful for maximizing descriptor space for the dynamic portion. -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_dashboard_settings"

data AccountDashboardSettings
  = AccountDashboardSettings
    { accountDashboardSettingsDisplayName :: Maybe (Text)
    {- ^ The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts. -}
    , accountDashboardSettingsTimezone :: Maybe (Text)
    {- ^ The timezone used in the Stripe Dashboard for this account. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones). -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_decline_charge_on"

data AccountDeclineChargeOn
  = AccountDeclineChargeOn
    { accountDeclineChargeOnAvsFailure :: Bool
    {- ^ Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification. -}
    , accountDeclineChargeOnCvcFailure :: Bool
    {- ^ Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification. -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_link"

data AccountLink
  = AccountLink
    { accountLinkObject :: AccountLinkObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , accountLinkCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , accountLinkExpiresAt :: POSIXTime
    {- ^ The timestamp at which this account link will expire. -}
    , accountLinkUrl :: Text
    {- ^ The URL for the account link. -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_payments_settings"

data AccountPaymentsSettings
  = AccountPaymentsSettings
    { accountPaymentsSettingsStatementDescriptor :: Maybe (Text)
    {- ^ The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. -}
    , accountPaymentsSettingsStatementDescriptorKana :: Maybe (Text)
    {- ^ The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only) -}
    , accountPaymentsSettingsStatementDescriptorKanji :: Maybe (Text)
    {- ^ The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only) -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_payout_settings"

data AccountPayoutSettings
  = AccountPayoutSettings
    { accountPayoutSettingsDebitNegativeBalances :: Bool
    {- ^ A Boolean indicating if Stripe should try to reclaim negative balances from an attached bank account. See our [Understanding Connect Account Balances](https://stripe.com/docs/connect/account-balances) documentation for details. Default value is `true` for Express accounts and `false` for Custom accounts. -}
    , accountPayoutSettingsSchedule :: TransferSchedule
    , accountPayoutSettingsStatementDescriptor :: Maybe (Text)
    {- ^ The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard. -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_requirements"

data AccountRequirements
  = AccountRequirements
    { accountRequirementsCurrentlyDue :: Vector (Text)
    {- ^ The fields that need to be collected to keep the account enabled. If not collected by the `current_deadline`, these fields appear in `past_due` as well, and the account is disabled. -}
    , accountRequirementsEventuallyDue :: Vector (Text)
    {- ^ The fields that need to be collected assuming all volume thresholds are reached. As they become required, these fields appear in `currently_due` as well, and the `current_deadline` is set. -}
    , accountRequirementsPastDue :: Vector (Text)
    {- ^ The fields that weren't collected by the `current_deadline`. These fields need to be collected to re-enable the account. -}
    , accountRequirementsPendingVerification :: Vector (Text)
    {- ^ Additional fields that may be required depending on the results of verification or review for provided requirements. If any of these fields become required, they appear in `currently_due` or `past_due`. -}
    , accountRequirementsCurrentDeadline :: Maybe (POSIXTime)
    {- ^ The date the fields in `currently_due` must be collected by to keep payouts enabled for the account. These fields might block payouts sooner if the next threshold is reached before these fields are collected. -}
    , accountRequirementsDisabledReason :: Maybe (Text)
    {- ^ If the account is disabled, this string describes why the account can’t create charges or receive payouts. Can be `requirements.past_due`, `requirements.pending_verification`, `rejected.fraud`, `rejected.terms_of_service`, `rejected.listed`, `rejected.other`, `listed`, `under_review`, or `other`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "account_settings"

data AccountSettings
  = AccountSettings
    { accountSettingsBranding :: AccountBrandingSettings
    , accountSettingsCardPayments :: AccountCardPaymentsSettings
    , accountSettingsDashboard :: AccountDashboardSettings
    , accountSettingsPayments :: AccountPaymentsSettings
    , accountSettingsPayouts :: AccountPayoutSettings
    } deriving (Show, Eq, Generic)


-- Describes: "account_tos_acceptance"

data AccountTosAcceptance
  = AccountTosAcceptance
    { accountTosAcceptanceDate :: Maybe (POSIXTime)
    {- ^ The Unix timestamp marking when the Stripe Services Agreement was accepted by the account representative -}
    , accountTosAcceptanceIp :: Maybe (Text)
    {- ^ The IP address from which the Stripe Services Agreement was accepted by the account representative -}
    , accountTosAcceptanceUserAgent :: Maybe (Text)
    {- ^ The user agent of the browser from which the Stripe Services Agreement was accepted by the account representative -}
    } deriving (Show, Eq, Generic)


-- Describes: "address"

data Address
  = Address
    { addressCity :: Maybe (Text)
    {- ^ City/District/Suburb/Town/Village. -}
    , addressCountry :: Maybe (Text)
    {- ^ 2-letter country code. -}
    , addressLine1 :: Maybe (Text)
    {- ^ Address line 1 (Street address/PO Box/Company name). -}
    , addressLine2 :: Maybe (Text)
    {- ^ Address line 2 (Apartment/Suite/Unit/Building). -}
    , addressPostalCode :: Maybe (Text)
    {- ^ ZIP or postal code. -}
    , addressState :: Maybe (Text)
    {- ^ State/County/Province/Region. -}
    } deriving (Show, Eq, Generic)


-- Describes: "alipay_account"

data AlipayAccount
  = AlipayAccount
    { alipayAccountId :: Id (AlipayAccount)
    {- ^ Unique identifier for the object. -}
    , alipayAccountObject :: AlipayAccountObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , alipayAccountLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , alipayAccountCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , alipayAccountFingerprint :: Text
    {- ^ Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account. -}
    , alipayAccountMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , alipayAccountReusable :: Bool
    {- ^ True if you can create multiple payments using this account. If the account is reusable, then you can freely choose the amount of each payment. -}
    , alipayAccountUsed :: Bool
    {- ^ Whether this Alipay account object has ever been used for a payment. -}
    , alipayAccountUsername :: Text
    {- ^ The username for the Alipay account. -}
    , alipayAccountCustomer :: Maybe (AnyOf  '[Text, Customer, DeletedCustomer])
    , alipayAccountPaymentAmount :: Maybe (Int)
    {- ^ If the Alipay account object is not reusable, the exact amount that you can create a charge for. -}
    , alipayAccountPaymentCurrency :: Maybe (Text)
    {- ^ If the Alipay account object is not reusable, the exact currency that you can create a charge for. -}
    } deriving (Show, Eq, Generic)


-- Describes: "api_errors"

data ApiErrors
  = ApiErrors
    { apiErrorsCharge :: Text
    {- ^ For card errors, the ID of the failed charge. -}
    , apiErrorsCode :: Text
    {- ^ For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported. -}
    , apiErrorsDeclineCode :: Text
    {- ^ For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one. -}
    , apiErrorsDocUrl :: Text
    {- ^ A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported. -}
    , apiErrorsMessage :: Text
    {- ^ A human-readable message providing more details about the error. For card errors, these messages can be shown to your users. -}
    , apiErrorsParam :: Text
    {- ^ If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field. -}
    , apiErrorsPaymentIntent :: PaymentIntent
    , apiErrorsPaymentMethod :: PaymentMethod
    , apiErrorsSetupIntent :: SetupIntent
    , apiErrorsSource :: AnyOf  '[BankAccount, Card, Source]
    {- ^ The source object for errors returned on a request involving a source. -}
    , apiErrorsType_ :: ApiErrorsTypeEnum
    {- ^ The type of error returned. One of `api_connection_error`, `api_error`, `authentication_error`, `card_error`, `idempotency_error`, `invalid_request_error`, or `rate_limit_error` -}
    } deriving (Show, Eq, Generic)


-- Describes: "apple_pay_domain"

data ApplePayDomain
  = ApplePayDomain
    { applePayDomainId :: Id (ApplePayDomain)
    {- ^ Unique identifier for the object. -}
    , applePayDomainObject :: ApplePayDomainObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , applePayDomainLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , applePayDomainCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , applePayDomainDomainName :: Text
    } deriving (Show, Eq, Generic)


-- Describes: "application"

data Application
  = Application
    { applicationId :: Text
    {- ^ Unique identifier for the object. -}
    , applicationObject :: ApplicationObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , applicationName :: Maybe (Text)
    {- ^ The name of the application. -}
    } deriving (Show, Eq, Generic)


-- Describes: "application_fee"

data ApplicationFee
  = ApplicationFee
    { applicationFeeId :: Id (ApplicationFee)
    {- ^ Unique identifier for the object. -}
    , applicationFeeObject :: ApplicationFeeObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , applicationFeeLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , applicationFeeAccount :: Either (Text) (Account)
    {- ^ ID of the Stripe account this fee was taken from. -}
    , applicationFeeAmount :: Int
    {- ^ Amount earned, in %s. -}
    , applicationFeeAmountRefunded :: Int
    {- ^ Amount in %s refunded (can be less than the amount attribute on the fee if a partial refund was issued) -}
    , applicationFeeApplication :: Either (Text) (Application)
    {- ^ ID of the Connect application that earned the fee. -}
    , applicationFeeCharge :: Either (Text) (Charge)
    {- ^ ID of the charge that the application fee was taken from. -}
    , applicationFeeCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , applicationFeeCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , applicationFeeRefunded :: Bool
    {- ^ Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false. -}
    , applicationFeeRefunds :: Object
    {- ^ A list of refunds that have been applied to the fee. -}
    , applicationFeeBalanceTransaction :: Maybe (Either (Text) (BalanceTransaction))
    {- ^ Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds). -}
    , applicationFeeOriginatingTransaction :: Maybe (Either (Text) (Charge))
    {- ^ ID of the corresponding charge on the platform account, if this fee was the result of a charge using the `destination` parameter. -}
    } deriving (Show, Eq, Generic)


-- Describes: "balance"

data Balance
  = Balance
    { balanceObject :: BalanceObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , balanceLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , balanceAvailable :: Vector (BalanceAmount)
    {- ^ Funds that are available to be transferred or paid out, whether automatically by Stripe or explicitly via the [Transfers API](#transfers) or [Payouts API](#payouts). The available balance for each currency and payment type can be found in the `source_types` property. -}
    , balanceConnectReserved :: Vector (BalanceAmount)
    {- ^ Funds held due to negative balances on connected Custom accounts. The connect reserve balance for each currency and payment type can be found in the `source_types` property. -}
    , balancePending :: Vector (BalanceAmount)
    {- ^ Funds that are not yet available in the balance, due to the 7-day rolling pay cycle. The pending balance for each currency, and for each payment type, can be found in the `source_types` property. -}
    } deriving (Show, Eq, Generic)


-- Describes: "balance_amount"

data BalanceAmount
  = BalanceAmount
    { balanceAmountAmount :: Int
    {- ^ Balance amount. -}
    , balanceAmountCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , balanceAmountSourceTypes :: BalanceAmountBySourceType
    } deriving (Show, Eq, Generic)


-- Describes: "balance_amount_by_source_type"

data BalanceAmountBySourceType
  = BalanceAmountBySourceType
    { balanceAmountBySourceTypeBankAccount :: Int
    {- ^ Amount for bank account. -}
    , balanceAmountBySourceTypeCard :: Int
    {- ^ Amount for card. -}
    } deriving (Show, Eq, Generic)


-- Describes: "balance_transaction"

data BalanceTransaction
  = BalanceTransaction
    { balanceTransactionId :: Id (BalanceTransaction)
    {- ^ Unique identifier for the object. -}
    , balanceTransactionObject :: BalanceTransactionObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , balanceTransactionAmount :: Int
    {- ^ Gross amount of the transaction, in %s. -}
    , balanceTransactionAvailableOn :: POSIXTime
    {- ^ The date the transaction's net funds will become available in the Stripe balance. -}
    , balanceTransactionCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , balanceTransactionCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , balanceTransactionFee :: Int
    {- ^ Fees (in %s) paid for this transaction. -}
    , balanceTransactionFeeDetails :: Vector (Fee)
    {- ^ Detailed breakdown of fees (in %s) paid for this transaction. -}
    , balanceTransactionNet :: Int
    {- ^ Net amount of the transaction, in %s. -}
    , balanceTransactionStatus :: Text
    {- ^ If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`. -}
    , balanceTransactionType_ :: BalanceTransactionTypeEnum
    {- ^ Transaction type: `adjustment`, `advance`, `advance_funding`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. -}
    , balanceTransactionDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , balanceTransactionExchangeRate :: Maybe (Scientific)
    , balanceTransactionSource :: Maybe (AnyOf  '[Text, ApplicationFee, Charge, ConnectCollectionTransfer, Dispute, FeeRefund, IssuingAuthorization, IssuingTransaction, Payout, PlatformTaxFee, Refund, ReserveTransaction, Topup, Transfer, TransferReversal])
    {- ^ The Stripe object to which this transaction is related. -}
    } deriving (Show, Eq, Generic)


-- Describes: "bank_account"

data BankAccount
  = BankAccount
    { bankAccountId :: Id (BankAccount)
    {- ^ Unique identifier for the object. -}
    , bankAccountObject :: BankAccountObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , bankAccountAccountHolderType :: BankAccountAccountHolderTypeEnum
    {- ^ The type of entity that holds the account. This can be either `individual` or `company`. -}
    , bankAccountCountry :: Text
    {- ^ Two-letter ISO code representing the country the bank account is located in. -}
    , bankAccountCurrency :: Text
    {- ^ Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account. -}
    , bankAccountLast4 :: Text
    , bankAccountStatus :: Text
    {- ^ For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.

For external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated. -}
    , bankAccountAccount :: Maybe (Either (Text) (Account))
    , bankAccountAccountHolderName :: Maybe (Text)
    {- ^ The name of the person or business that owns the bank account. -}
    , bankAccountBankName :: Maybe (Text)
    {- ^ Name of the bank associated with the routing number (e.g., `WELLS FARGO`). -}
    , bankAccountCustomer :: Maybe (AnyOf  '[Text, Customer, DeletedCustomer])
    , bankAccountDefaultForCurrency :: Maybe (Bool)
    {- ^ Whether this bank account is the default external account for its currency. -}
    , bankAccountFingerprint :: Maybe (Text)
    {- ^ Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same. -}
    , bankAccountMetadata :: Maybe (Object)
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , bankAccountRoutingNumber :: Maybe (Text)
    {- ^ The routing transit number for the bank account. -}
    } deriving (Show, Eq, Generic)


-- Describes: "billing_details"

data BillingDetails
  = BillingDetails
    { billingDetailsAddress :: Maybe (Address)
    {- ^ Billing address. -}
    , billingDetailsEmail :: Maybe (Text)
    {- ^ Email address. -}
    , billingDetailsName :: Maybe (Text)
    {- ^ Full name. -}
    , billingDetailsPhone :: Maybe (Text)
    {- ^ Billing phone number (including extension). -}
    } deriving (Show, Eq, Generic)


-- Describes: "bitcoin_receiver"

data BitcoinReceiver
  = BitcoinReceiver
    { bitcoinReceiverId :: Id (BitcoinReceiver)
    {- ^ Unique identifier for the object. -}
    , bitcoinReceiverObject :: BitcoinReceiverObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , bitcoinReceiverLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , bitcoinReceiverActive :: Bool
    {- ^ True when this bitcoin receiver has received a non-zero amount of bitcoin. -}
    , bitcoinReceiverAmount :: Int
    {- ^ The amount of `currency` that you are collecting as payment. -}
    , bitcoinReceiverAmountReceived :: Int
    {- ^ The amount of `currency` to which `bitcoin_amount_received` has been converted. -}
    , bitcoinReceiverBitcoinAmount :: Int
    {- ^ The amount of bitcoin that the customer should send to fill the receiver. The `bitcoin_amount` is denominated in Satoshi: there are 10^8 Satoshi in one bitcoin. -}
    , bitcoinReceiverBitcoinAmountReceived :: Int
    {- ^ The amount of bitcoin that has been sent by the customer to this receiver. -}
    , bitcoinReceiverBitcoinUri :: Text
    {- ^ This URI can be displayed to the customer as a clickable link (to activate their bitcoin client) or as a QR code (for mobile wallets). -}
    , bitcoinReceiverCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , bitcoinReceiverCurrency :: Text
    {- ^ Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) to which the bitcoin will be converted. -}
    , bitcoinReceiverFilled :: Bool
    {- ^ This flag is initially false and updates to true when the customer sends the `bitcoin_amount` to this receiver. -}
    , bitcoinReceiverInboundAddress :: Text
    {- ^ A bitcoin address that is specific to this receiver. The customer can send bitcoin to this address to fill the receiver. -}
    , bitcoinReceiverMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , bitcoinReceiverTransactions :: Object
    {- ^ A list with one entry for each time that the customer sent bitcoin to the receiver. Hidden when viewing the receiver with a publishable key. -}
    , bitcoinReceiverUncapturedFunds :: Bool
    {- ^ This receiver contains uncaptured funds that can be used for a payment or refunded. -}
    , bitcoinReceiverCustomer :: Maybe (Text)
    , bitcoinReceiverDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , bitcoinReceiverEmail :: Maybe (Text)
    {- ^ The customer's email address, set by the API call that creates the receiver. -}
    , bitcoinReceiverPayment :: Maybe (Text)
    {- ^ The ID of the payment created from the receiver, if any. Hidden when viewing the receiver with a publishable key. -}
    , bitcoinReceiverRefundAddress :: Maybe (Text)
    , bitcoinReceiverUsedForPayment :: Maybe (Bool)
    } deriving (Show, Eq, Generic)


-- Describes: "bitcoin_transaction"

data BitcoinTransaction
  = BitcoinTransaction
    { bitcoinTransactionId :: Id (BitcoinTransaction)
    {- ^ Unique identifier for the object. -}
    , bitcoinTransactionObject :: BitcoinTransactionObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , bitcoinTransactionAmount :: Int
    {- ^ The amount of `currency` that the transaction was converted to in real-time. -}
    , bitcoinTransactionBitcoinAmount :: Int
    {- ^ The amount of bitcoin contained in the transaction. -}
    , bitcoinTransactionCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , bitcoinTransactionCurrency :: Text
    {- ^ Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) to which this transaction was converted. -}
    , bitcoinTransactionReceiver :: Text
    {- ^ The receiver to which this transaction was sent. -}
    } deriving (Show, Eq, Generic)


-- Describes: "capability"

data Capability
  = Capability
    { capabilityId :: Id (Capability)
    {- ^ The identifier for the capability. -}
    , capabilityObject :: CapabilityObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , capabilityAccount :: Either (Text) (Account)
    {- ^ The account for which the capability enables functionality. -}
    , capabilityRequested :: Bool
    {- ^ Whether the capability has been requested. -}
    , capabilityRequirements :: AccountCapabilityRequirements
    , capabilityStatus :: CapabilityStatusEnum
    {- ^ The status of the capability. Can be `active`, `inactive`, `pending`, or `unrequested`. -}
    , capabilityRequestedAt :: Maybe (POSIXTime)
    {- ^ Time at which the capability was requested. Measured in seconds since the Unix epoch. -}
    } deriving (Show, Eq, Generic)


-- Describes: "card"

data Card
  = Card
    { cardId :: Id (Card)
    {- ^ Unique identifier for the object. -}
    , cardObject :: CardObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , cardAvailablePayoutMethods :: Vector (CardAvailablePayoutMethodsEnum)
    {- ^ A set of available payout methods for this card. Will be either `["standard"]` or `["standard", "instant"]`. Only values from this set should be passed as the `method` when creating a transfer. -}
    , cardBrand :: Text
    {- ^ Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`. -}
    , cardExpMonth :: Int
    {- ^ Two-digit number representing the card's expiration month. -}
    , cardExpYear :: Int
    {- ^ Four-digit number representing the card's expiration year. -}
    , cardFunding :: Text
    {- ^ Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`. -}
    , cardLast4 :: Text
    {- ^ The last four digits of the card. -}
    , cardMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , cardAccount :: Maybe (Either (Text) (Account))
    {- ^ The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead. -}
    , cardAddressCity :: Maybe (Text)
    {- ^ City/District/Suburb/Town/Village. -}
    , cardAddressCountry :: Maybe (Text)
    {- ^ Billing address country, if provided when creating card. -}
    , cardAddressLine1 :: Maybe (Text)
    {- ^ Address line 1 (Street address/PO Box/Company name). -}
    , cardAddressLine1Check :: Maybe (Text)
    {- ^ If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. -}
    , cardAddressLine2 :: Maybe (Text)
    {- ^ Address line 2 (Apartment/Suite/Unit/Building). -}
    , cardAddressState :: Maybe (Text)
    {- ^ State/County/Province/Region. -}
    , cardAddressZip :: Maybe (Text)
    {- ^ ZIP or postal code. -}
    , cardAddressZipCheck :: Maybe (Text)
    {- ^ If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. -}
    , cardCountry :: Maybe (Text)
    {- ^ Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected. -}
    , cardCurrency :: Maybe (Text)
    , cardCustomer :: Maybe (AnyOf  '[Text, Customer, DeletedCustomer])
    {- ^ The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead. -}
    , cardCvcCheck :: Maybe (Text)
    {- ^ If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. -}
    , cardDefaultForCurrency :: Maybe (Bool)
    {- ^ Whether this card is the default external account for its currency. -}
    , cardDynamicLast4 :: Maybe (Text)
    {- ^ (For tokenized numbers only.) The last four digits of the device account number. -}
    , cardFingerprint :: Maybe (Text)
    {- ^ Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. -}
    , cardName :: Maybe (Text)
    {- ^ Cardholder name. -}
    , cardRecipient :: Maybe (Either (Text) (Recipient))
    {- ^ The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead. -}
    , cardTokenizationMethod :: Maybe (Text)
    {- ^ If the card number is tokenized, this is the method that was used. Can be `apple_pay` or `google_pay`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "charge"

data Charge
  = Charge
    { chargeId :: Id (Charge)
    {- ^ Unique identifier for the object. -}
    , chargeObject :: ChargeObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , chargeLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , chargeAmount :: Int
    {- ^ A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99). -}
    , chargeAmountRefunded :: Int
    {- ^ Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued). -}
    , chargeBillingDetails :: BillingDetails
    , chargeCaptured :: Bool
    {- ^ If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured. -}
    , chargeCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , chargeCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , chargeMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , chargePaid :: Bool
    {- ^ `true` if the charge succeeded, or was successfully authorized for later capture. -}
    , chargeReceiptUrl :: Text
    {- ^ This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt. -}
    , chargeRefunded :: Bool
    {- ^ Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false. -}
    , chargeRefunds :: Object
    {- ^ A list of refunds that have been applied to the charge. -}
    , chargeStatus :: Text
    {- ^ The status of the payment is either `succeeded`, `pending`, or `failed`. -}
    , chargeTransfer :: Either (Text) (Transfer)
    {- ^ ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter). -}
    , chargeApplication :: Maybe (Either (Text) (Application))
    {- ^ ID of the Connect application that created the charge. -}
    , chargeApplicationFee :: Maybe (Either (Text) (ApplicationFee))
    {- ^ The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details. -}
    , chargeApplicationFeeAmount :: Maybe (Int)
    {- ^ The amount of the application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details. -}
    , chargeBalanceTransaction :: Maybe (Either (Text) (BalanceTransaction))
    {- ^ ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes). -}
    , chargeCustomer :: Maybe (AnyOf  '[Text, Customer, DeletedCustomer])
    {- ^ ID of the customer this charge is for if one exists. -}
    , chargeDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , chargeDispute :: Maybe (Either (Text) (Dispute))
    {- ^ Details about the dispute if the charge has been disputed. -}
    , chargeFailureCode :: Maybe (Text)
    {- ^ Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes). -}
    , chargeFailureMessage :: Maybe (Text)
    {- ^ Message to user further explaining reason for charge failure if available. -}
    , chargeFraudDetails :: Maybe (ChargeFraudDetails)
    {- ^ Information on fraud assessments for the charge. -}
    , chargeInvoice :: Maybe (Either (Text) (Invoice))
    {- ^ ID of the invoice this charge is for if one exists. -}
    , chargeOnBehalfOf :: Maybe (Either (Text) (Account))
    {- ^ The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details. -}
    , chargeOrder :: Maybe (Either (Text) (Order))
    {- ^ ID of the order this charge is for if one exists. -}
    , chargeOutcome :: Maybe (ChargeOutcome)
    {- ^ Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details. -}
    , chargePaymentIntent :: Maybe (Text)
    {- ^ ID of the PaymentIntent associated with this charge, if one exists. -}
    , chargePaymentMethod :: Maybe (Text)
    {- ^ ID of the payment method used in this charge. -}
    , chargePaymentMethodDetails :: Maybe (PaymentMethodDetails)
    {- ^ Details about the payment method at the time of the transaction. -}
    , chargeReceiptEmail :: Maybe (Text)
    {- ^ This is the email address that the receipt for this charge was sent to. -}
    , chargeReceiptNumber :: Maybe (Text)
    {- ^ This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent. -}
    , chargeReview :: Maybe (Either (Text) (Review))
    {- ^ ID of the review associated with this charge if one exists. -}
    , chargeShipping :: Maybe (Shipping)
    {- ^ Shipping information for the charge. -}
    , chargeSourceTransfer :: Maybe (Either (Text) (Transfer))
    {- ^ The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details. -}
    , chargeStatementDescriptor :: Maybe (Text)
    {- ^ For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters. -}
    , chargeStatementDescriptorSuffix :: Maybe (Text)
    {- ^ Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor. -}
    , chargeTransferData :: Maybe (ChargeTransferData)
    {- ^ An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details. -}
    , chargeTransferGroup :: Maybe (Text)
    {- ^ A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#grouping-transactions) for details. -}
    } deriving (Show, Eq, Generic)


-- Describes: "charge_fraud_details"

data ChargeFraudDetails
  = ChargeFraudDetails
    { chargeFraudDetailsStripeReport :: Text
    {- ^ Assessments from Stripe. If set, the value is `fraudulent`. -}
    , chargeFraudDetailsUserReport :: Text
    {- ^ Assessments reported by you. If set, possible values of are `safe` and `fraudulent`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "charge_outcome"

data ChargeOutcome
  = ChargeOutcome
    { chargeOutcomeRiskLevel :: Text
    {- ^ Stripe's evaluation of the riskiness of the payment. Possible values for evaluated payments are `normal`, `elevated`, `highest`. For non-card payments, and card-based payments predating the public assignment of risk levels, this field will have the value `not_assessed`. In the event of an error in the evaluation, this field will have the value `unknown`. -}
    , chargeOutcomeRiskScore :: Int
    {- ^ Stripe's evaluation of the riskiness of the payment. Possible values for evaluated payments are between 0 and 100. For non-card payments, card-based payments predating the public assignment of risk scores, or in the event of an error during evaluation, this field will not be present. This field is only available with Radar for Fraud Teams. -}
    , chargeOutcomeRule :: Either (Text) (Rule)
    {- ^ The ID of the Radar rule that matched the payment, if applicable. -}
    , chargeOutcomeType_ :: Text
    {- ^ Possible values are `authorized`, `manual_review`, `issuer_declined`, `blocked`, and `invalid`. See [understanding declines](https://stripe.com/docs/declines) and [Radar reviews](radar/review) for details. -}
    , chargeOutcomeNetworkStatus :: Maybe (Text)
    {- ^ Possible values are `approved_by_network`, `declined_by_network`, `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval` indicates the payment was [blocked by Stripe](https://stripe.com/docs/declines#blocked-payments) after bank authorization, and may temporarily appear as "pending" on a cardholder's statement. -}
    , chargeOutcomeReason :: Maybe (Text)
    {- ^ An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https://stripe.com/docs/declines) for more details. -}
    , chargeOutcomeSellerMessage :: Maybe (Text)
    {- ^ A human-readable description of the outcome type and reason, designed for you (the recipient of the payment), not your customer. -}
    } deriving (Show, Eq, Generic)


-- Describes: "charge_transfer_data"

data ChargeTransferData
  = ChargeTransferData
    { chargeTransferDataDestination :: Either (Text) (Account)
    {- ^ ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request. -}
    , chargeTransferDataAmount :: Maybe (Int)
    {- ^ The amount transferred to the destination account, if specified. By default, the entire charge amount is transferred to the destination account. -}
    } deriving (Show, Eq, Generic)


-- Describes: "checkout_session_custom_display_item_description"

data CheckoutSessionCustomDisplayItemDescription
  = CheckoutSessionCustomDisplayItemDescription
    { checkoutSessionCustomDisplayItemDescriptionImages :: Vector (Text)
    {- ^ The images of the line item. -}
    , checkoutSessionCustomDisplayItemDescriptionName :: Text
    {- ^ The name of the line item. -}
    , checkoutSessionCustomDisplayItemDescriptionDescription :: Maybe (Text)
    {- ^ The description of the line item. -}
    } deriving (Show, Eq, Generic)


-- Describes: "checkout_session_display_item"

data CheckoutSessionDisplayItem
  = CheckoutSessionDisplayItem
    { checkoutSessionDisplayItemAmount :: Int
    {- ^ Amount for the display item. -}
    , checkoutSessionDisplayItemCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , checkoutSessionDisplayItemCustom :: CheckoutSessionCustomDisplayItemDescription
    , checkoutSessionDisplayItemPlan :: Plan
    , checkoutSessionDisplayItemQuantity :: Int
    {- ^ Quantity of the display item being purchased. -}
    , checkoutSessionDisplayItemSku :: Sku
    , checkoutSessionDisplayItemType_ :: CheckoutSessionDisplayItemTypeEnum
    {- ^ The type of display item. One of `custom`, `plan` or `sku` -}
    } deriving (Show, Eq, Generic)


-- Describes: "connect_collection_transfer"

data ConnectCollectionTransfer
  = ConnectCollectionTransfer
    { connectCollectionTransferId :: Text
    {- ^ Unique identifier for the object. -}
    , connectCollectionTransferObject :: ConnectCollectionTransferObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , connectCollectionTransferLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , connectCollectionTransferAmount :: Int
    {- ^ Amount transferred, in %s. -}
    , connectCollectionTransferCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , connectCollectionTransferDestination :: Either (Text) (Account)
    {- ^ ID of the account that funds are being collected for. -}
    } deriving (Show, Eq, Generic)


-- Describes: "country_spec"

data CountrySpec
  = CountrySpec
    { countrySpecId :: Id (CountrySpec)
    {- ^ Unique identifier for the object. Represented as the ISO country code for this country. -}
    , countrySpecObject :: CountrySpecObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , countrySpecDefaultCurrency :: Text
    {- ^ The default currency for this country. This applies to both payment methods and bank accounts. -}
    , countrySpecSupportedBankAccountCurrencies :: Object
    {- ^ Currencies that can be accepted in the specific country (for transfers). -}
    , countrySpecSupportedPaymentCurrencies :: Vector (Text)
    {- ^ Currencies that can be accepted in the specified country (for payments). -}
    , countrySpecSupportedPaymentMethods :: Vector (Text)
    {- ^ Payment methods available in the specified country. You may need to enable some payment methods (e.g., [ACH](https://stripe.com/docs/ach)) on your account before they appear in this list. The `stripe` payment method refers to [charging through your platform](https://stripe.com/docs/connect/destination-charges). -}
    , countrySpecSupportedTransferCountries :: Vector (Text)
    {- ^ Countries that can accept transfers from the specified country. -}
    , countrySpecVerificationFields :: CountrySpecVerificationFields
    } deriving (Show, Eq, Generic)


-- Describes: "country_spec_verification_field_details"

data CountrySpecVerificationFieldDetails
  = CountrySpecVerificationFieldDetails
    { countrySpecVerificationFieldDetailsAdditional :: Vector (Text)
    {- ^ Additional fields which are only required for some users. -}
    , countrySpecVerificationFieldDetailsMinimum :: Vector (Text)
    {- ^ Fields which every account must eventually provide. -}
    } deriving (Show, Eq, Generic)


-- Describes: "country_spec_verification_fields"

data CountrySpecVerificationFields
  = CountrySpecVerificationFields
    { countrySpecVerificationFieldsCompany :: CountrySpecVerificationFieldDetails
    , countrySpecVerificationFieldsIndividual :: CountrySpecVerificationFieldDetails
    } deriving (Show, Eq, Generic)


-- Describes: "coupon"

data Coupon
  = Coupon
    { couponId :: Id (Coupon)
    {- ^ Unique identifier for the object. -}
    , couponObject :: CouponObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , couponLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , couponCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , couponDuration :: CouponDurationEnum
    {- ^ One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount. -}
    , couponMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , couponTimesRedeemed :: Int
    {- ^ Number of times this coupon has been applied to a customer. -}
    , couponValid :: Bool
    {- ^ Taking account of the above properties, whether this coupon can still be applied to a customer. -}
    , couponAmountOff :: Maybe (Int)
    {- ^ Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer. -}
    , couponCurrency :: Maybe (Text)
    {- ^ If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off. -}
    , couponDurationInMonths :: Maybe (Int)
    {- ^ If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`. -}
    , couponMaxRedemptions :: Maybe (Int)
    {- ^ Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid. -}
    , couponName :: Maybe (Text)
    {- ^ Name of the coupon displayed to customers on for instance invoices or receipts. -}
    , couponPercentOff :: Maybe (Scientific)
    {- ^ Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead. -}
    , couponRedeemBy :: Maybe (POSIXTime)
    {- ^ Date after which the coupon can no longer be redeemed. -}
    } deriving (Show, Eq, Generic)


-- Describes: "credit_note"

data CreditNote
  = CreditNote
    { creditNoteId :: Id (CreditNote)
    {- ^ Unique identifier for the object. -}
    , creditNoteObject :: CreditNoteObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , creditNoteLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , creditNoteAmount :: Int
    {- ^ The integer amount in **%s** representing the total amount of the credit note, including tax. -}
    , creditNoteCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , creditNoteCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , creditNoteCustomer :: Either (Text) (Customer)
    {- ^ ID of the customer. -}
    , creditNoteInvoice :: Either (Text) (Invoice)
    {- ^ ID of the invoice. -}
    , creditNoteMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , creditNoteNumber :: Text
    {- ^ A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice. -}
    , creditNotePdf :: Text
    {- ^ The link to download the PDF of the credit note. -}
    , creditNoteReason :: CreditNoteReasonEnum
    {- ^ Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory` -}
    , creditNoteStatus :: CreditNoteStatusEnum
    {- ^ Status of this credit note, one of `issued` or `void`. Learn more about [voiding credit notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding). -}
    , creditNoteType_ :: CreditNoteTypeEnum
    {- ^ Type of this credit note, one of `post_payment` or `pre_payment`. A `pre_payment` credit note means it was issued when the invoice was open. A `post_payment` credit note means it was issued when the invoice was paid. -}
    , creditNoteCustomerBalanceTransaction :: Maybe (Either (Text) (CustomerBalanceTransaction))
    {- ^ Customer balance transaction related to this credit note. -}
    , creditNoteMemo :: Maybe (Text)
    {- ^ Customer-facing text that appears on the credit note PDF. -}
    , creditNoteRefund :: Maybe (Either (Text) (Refund))
    {- ^ Refund related to this credit note. -}
    , creditNoteVoidedAt :: Maybe (POSIXTime)
    {- ^ The time that the credit note was voided. -}
    } deriving (Show, Eq, Generic)


-- Describes: "customer"

data Customer
  = Customer
    { customerId :: Id (Customer)
    {- ^ Unique identifier for the object. -}
    , customerObject :: CustomerObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , customerLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , customerAccountBalance :: Int
    {- ^ This field has been renamed to `balance` and will be removed in a future API version. -}
    , customerCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , customerInvoiceSettings :: InvoiceSettingCustomerSetting
    , customerMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , customerPreferredLocales :: Vector (Text)
    {- ^ The customer's preferred locales (languages), ordered by preference. -}
    , customerSources :: Object
    {- ^ The customer's payment sources, if any. -}
    , customerSubscriptions :: Object
    {- ^ The customer's current subscriptions, if any. -}
    , customerTaxExempt :: CustomerTaxExemptEnum
    {- ^ Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **"Reverse charge"**. -}
    , customerTaxIds :: Object
    {- ^ The customer's tax IDs. -}
    , customerAddress :: Maybe (Address)
    {- ^ The customer's address. -}
    , customerBalance :: Maybe (Int)
    {- ^ Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized. -}
    , customerCurrency :: Maybe (Text)
    {- ^ Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes. -}
    , customerDefaultSource :: Maybe (AnyOf  '[Text, AlipayAccount, BankAccount, BitcoinReceiver, Card, Source])
    {- ^ ID of the default payment source for the customer. -}
    , customerDelinquent :: Maybe (Bool)
    {- ^ When the customer's latest invoice is billed by charging automatically, delinquent is true if the invoice's latest charge is failed. When the customer's latest invoice is billed by sending an invoice, delinquent is true if the invoice is not paid by its due date. -}
    , customerDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , customerDiscount :: Maybe (Discount)
    {- ^ Describes the current discount active on the customer, if there is one. -}
    , customerEmail :: Maybe (Text)
    {- ^ The customer's email address. -}
    , customerInvoicePrefix :: Maybe (Text)
    {- ^ The prefix for the customer used to generate unique invoice numbers. -}
    , customerName :: Maybe (Text)
    {- ^ The customer's full name or business name. -}
    , customerPhone :: Maybe (Text)
    {- ^ The customer's phone number. -}
    , customerShipping :: Maybe (Shipping)
    {- ^ Mailing and shipping address for the customer. Appears on invoices emailed to this customer. -}
    , customerTaxInfo :: Maybe (TaxInfo)
    {- ^ The customer's tax information. Appears on invoices emailed to this customer. This field has been deprecated and will be removed in a future API version, for further information view the [migration guide](https://stripe.com/docs/billing/migration/taxes#moving-from-taxinfo-to-customer-tax-ids). -}
    , customerTaxInfoVerification :: Maybe (TaxInfoVerification)
    {- ^ Describes the status of looking up the tax ID provided in `tax_info`. This field has been deprecated and will be removed in a future API version, for further information view the [migration guide](https://stripe.com/docs/billing/migration/taxes#moving-from-taxinfo-to-customer-tax-ids). -}
    } deriving (Show, Eq, Generic)


-- Describes: "customer_balance_transaction"

data CustomerBalanceTransaction
  = CustomerBalanceTransaction
    { customerBalanceTransactionId :: Id (CustomerBalanceTransaction)
    {- ^ Unique identifier for the object. -}
    , customerBalanceTransactionObject :: CustomerBalanceTransactionObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , customerBalanceTransactionLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , customerBalanceTransactionAmount :: Int
    {- ^ The amount of the transaction. A negative value is a credit for the customer's balance, and a positive value is a debit to the customer's `balance`. -}
    , customerBalanceTransactionCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , customerBalanceTransactionCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , customerBalanceTransactionCustomer :: Either (Text) (Customer)
    {- ^ The ID of the customer the transaction belongs to. -}
    , customerBalanceTransactionEndingBalance :: Int
    {- ^ The customer's `balance` after the transaction was applied. A negative value decreases the amount due on the customer's next invoice. A positive value increases the amount due on the customer's next invoice. -}
    , customerBalanceTransactionType_ :: CustomerBalanceTransactionTypeEnum
    {- ^ Transaction type: `adjustment`, `applied_to_invoice`, `credit_note`, `initial`, `invoice_too_large`, `invoice_too_small`, or `unspent_receiver_credit`. See the [Customer Balance page](https://stripe.com/docs/billing/customer/balance#types) to learn more about transaction types. -}
    , customerBalanceTransactionCreditNote :: Maybe (Either (Text) (CreditNote))
    {- ^ The ID of the credit note (if any) related to the transaction. -}
    , customerBalanceTransactionDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , customerBalanceTransactionInvoice :: Maybe (Either (Text) (Invoice))
    {- ^ The ID of the invoice (if any) related to the transaction. -}
    , customerBalanceTransactionMetadata :: Maybe (Object)
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_account"

data DeletedAccount
  = DeletedAccount
    { deletedAccountId :: Id (DeletedAccount)
    {- ^ Unique identifier for the object. -}
    , deletedAccountObject :: DeletedAccountObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedAccountDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_alipay_account"

data DeletedAlipayAccount
  = DeletedAlipayAccount
    { deletedAlipayAccountId :: Text
    {- ^ Unique identifier for the object. -}
    , deletedAlipayAccountObject :: DeletedAlipayAccountObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedAlipayAccountDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_apple_pay_domain"

data DeletedApplePayDomain
  = DeletedApplePayDomain
    { deletedApplePayDomainId :: Id (DeletedApplePayDomain)
    {- ^ Unique identifier for the object. -}
    , deletedApplePayDomainObject :: DeletedApplePayDomainObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedApplePayDomainDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_bank_account"

data DeletedBankAccount
  = DeletedBankAccount
    { deletedBankAccountId :: Text
    {- ^ Unique identifier for the object. -}
    , deletedBankAccountObject :: DeletedBankAccountObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedBankAccountDeleted :: Bool
    {- ^ Always true for a deleted object -}
    , deletedBankAccountCurrency :: Maybe (Text)
    {- ^ Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account. -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_bitcoin_receiver"

data DeletedBitcoinReceiver
  = DeletedBitcoinReceiver
    { deletedBitcoinReceiverId :: Text
    {- ^ Unique identifier for the object. -}
    , deletedBitcoinReceiverObject :: DeletedBitcoinReceiverObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedBitcoinReceiverDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_card"

data DeletedCard
  = DeletedCard
    { deletedCardId :: Text
    {- ^ Unique identifier for the object. -}
    , deletedCardObject :: DeletedCardObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedCardDeleted :: Bool
    {- ^ Always true for a deleted object -}
    , deletedCardCurrency :: Maybe (Text)
    {- ^ Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account. -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_coupon"

data DeletedCoupon
  = DeletedCoupon
    { deletedCouponId :: Id (DeletedCoupon)
    {- ^ Unique identifier for the object. -}
    , deletedCouponObject :: DeletedCouponObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedCouponDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_customer"

data DeletedCustomer
  = DeletedCustomer
    { deletedCustomerId :: Id (DeletedCustomer)
    {- ^ Unique identifier for the object. -}
    , deletedCustomerObject :: DeletedCustomerObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedCustomerDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_discount"

data DeletedDiscount
  = DeletedDiscount
    { deletedDiscountObject :: DeletedDiscountObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedDiscountDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_external_account"

data DeletedExternalAccount
  = DeletedExternalAccount
    {
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_invoice"

data DeletedInvoice
  = DeletedInvoice
    { deletedInvoiceId :: Id (DeletedInvoice)
    {- ^ Unique identifier for the object. -}
    , deletedInvoiceObject :: DeletedInvoiceObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedInvoiceDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_invoiceitem"

data DeletedInvoiceitem
  = DeletedInvoiceitem
    { deletedInvoiceitemId :: Id (DeletedInvoiceitem)
    {- ^ Unique identifier for the object. -}
    , deletedInvoiceitemObject :: DeletedInvoiceitemObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedInvoiceitemDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_payment_source"

data DeletedPaymentSource
  = DeletedPaymentSource
    {
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_person"

data DeletedPerson
  = DeletedPerson
    { deletedPersonId :: Id (DeletedPerson)
    {- ^ Unique identifier for the object. -}
    , deletedPersonObject :: DeletedPersonObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedPersonDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_plan"

data DeletedPlan
  = DeletedPlan
    { deletedPlanId :: Id (DeletedPlan)
    {- ^ Unique identifier for the object. -}
    , deletedPlanObject :: DeletedPlanObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedPlanDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_product"

data DeletedProduct
  = DeletedProduct
    { deletedProductId :: Id (DeletedProduct)
    {- ^ Unique identifier for the object. -}
    , deletedProductObject :: DeletedProductObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedProductDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_recipient"

data DeletedRecipient
  = DeletedRecipient
    { deletedRecipientId :: Id (DeletedRecipient)
    {- ^ Unique identifier for the object. -}
    , deletedRecipientObject :: DeletedRecipientObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedRecipientDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_sku"

data DeletedSku
  = DeletedSku
    { deletedSkuId :: Id (DeletedSku)
    {- ^ Unique identifier for the object. -}
    , deletedSkuObject :: DeletedSkuObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedSkuDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_subscription_item"

data DeletedSubscriptionItem
  = DeletedSubscriptionItem
    { deletedSubscriptionItemId :: Id (DeletedSubscriptionItem)
    {- ^ Unique identifier for the object. -}
    , deletedSubscriptionItemObject :: DeletedSubscriptionItemObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedSubscriptionItemDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_tax_id"

data DeletedTaxId
  = DeletedTaxId
    { deletedTaxIdId :: Id (DeletedTaxId)
    {- ^ Unique identifier for the object. -}
    , deletedTaxIdObject :: DeletedTaxIdObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedTaxIdDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "deleted_webhook_endpoint"

data DeletedWebhookEndpoint
  = DeletedWebhookEndpoint
    { deletedWebhookEndpointId :: Id (DeletedWebhookEndpoint)
    {- ^ Unique identifier for the object. -}
    , deletedWebhookEndpointObject :: DeletedWebhookEndpointObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , deletedWebhookEndpointDeleted :: Bool
    {- ^ Always true for a deleted object -}
    } deriving (Show, Eq, Generic)


-- Describes: "delivery_estimate"

data DeliveryEstimate
  = DeliveryEstimate
    { deliveryEstimateDate :: Text
    {- ^ If `type` is `"exact"`, `date` will be the expected delivery date in the format YYYY-MM-DD. -}
    , deliveryEstimateEarliest :: Text
    {- ^ If `type` is `"range"`, `earliest` will be be the earliest delivery date in the format YYYY-MM-DD. -}
    , deliveryEstimateLatest :: Text
    {- ^ If `type` is `"range"`, `latest` will be the latest delivery date in the format YYYY-MM-DD. -}
    , deliveryEstimateType_ :: Text
    {- ^ The type of estimate. Must be either `"range"` or `"exact"`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "discount"

data Discount
  = Discount
    { discountObject :: DiscountObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , discountCoupon :: Coupon
    , discountStart :: POSIXTime
    {- ^ Date that the coupon was applied. -}
    , discountCustomer :: Maybe (AnyOf  '[Text, Customer, DeletedCustomer])
    , discountEnd :: Maybe (POSIXTime)
    {- ^ If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null. -}
    , discountSubscription :: Maybe (Text)
    {- ^ The subscription that this coupon is applied to, if it is applied to a particular subscription. -}
    } deriving (Show, Eq, Generic)


-- Describes: "dispute"

data Dispute
  = Dispute
    { disputeId :: Id (Dispute)
    {- ^ Unique identifier for the object. -}
    , disputeObject :: DisputeObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , disputeLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , disputeAmount :: Int
    {- ^ Disputed amount. Usually the amount of the charge, but can differ (usually because of currency fluctuation or because only part of the order is disputed). -}
    , disputeBalanceTransactions :: Vector (BalanceTransaction)
    {- ^ List of zero, one, or two balance transactions that show funds withdrawn and reinstated to your Stripe account as a result of this dispute. -}
    , disputeCharge :: Either (Text) (Charge)
    {- ^ ID of the charge that was disputed. -}
    , disputeCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , disputeCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , disputeEvidence :: DisputeEvidence
    , disputeEvidenceDetails :: DisputeEvidenceDetails
    , disputeIsChargeRefundable :: Bool
    {- ^ If true, it is still possible to refund the disputed payment. Once the payment has been fully refunded, no further funds will be withdrawn from your Stripe account as a result of this dispute. -}
    , disputeMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , disputeReason :: Text
    {- ^ Reason given by cardholder for dispute. Possible values are `bank_cannot_process`, `check_returned`, `credit_not_processed`, `customer_initiated`, `debit_not_authorized`, `duplicate`, `fraudulent`, `general`, `incorrect_account_details`, `insufficient_funds`, `product_not_received`, `product_unacceptable`, `subscription_canceled`, or `unrecognized`. Read more about [dispute reasons](https://stripe.com/docs/disputes/categories). -}
    , disputeStatus :: DisputeStatusEnum
    {- ^ Current status of dispute. Possible values are `warning_needs_response`, `warning_under_review`, `warning_closed`, `needs_response`, `under_review`, `charge_refunded`, `won`, or `lost`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "dispute_evidence"

data DisputeEvidence
  = DisputeEvidence
    { disputeEvidenceAccessActivityLog :: Maybe (Text)
    {- ^ Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity. -}
    , disputeEvidenceBillingAddress :: Maybe (Text)
    {- ^ The billing address provided by the customer. -}
    , disputeEvidenceCancellationPolicy :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your subscription cancellation policy, as shown to the customer. -}
    , disputeEvidenceCancellationPolicyDisclosure :: Maybe (Text)
    {- ^ An explanation of how and when the customer was shown your refund policy prior to purchase. -}
    , disputeEvidenceCancellationRebuttal :: Maybe (Text)
    {- ^ A justification for why the customer's subscription was not canceled. -}
    , disputeEvidenceCustomerCommunication :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service. -}
    , disputeEvidenceCustomerEmailAddress :: Maybe (Text)
    {- ^ The email address of the customer. -}
    , disputeEvidenceCustomerName :: Maybe (Text)
    {- ^ The name of the customer. -}
    , disputeEvidenceCustomerPurchaseIp :: Maybe (Text)
    {- ^ The IP address that the customer used when making the purchase. -}
    , disputeEvidenceCustomerSignature :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant document or contract showing the customer's signature. -}
    , disputeEvidenceDuplicateChargeDocumentation :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate. -}
    , disputeEvidenceDuplicateChargeExplanation :: Maybe (Text)
    {- ^ An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate. -}
    , disputeEvidenceDuplicateChargeId :: Maybe (Text)
    {- ^ The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge. -}
    , disputeEvidenceProductDescription :: Maybe (Text)
    {- ^ A description of the product or service that was sold. -}
    , disputeEvidenceReceipt :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any receipt or message sent to the customer notifying them of the charge. -}
    , disputeEvidenceRefundPolicy :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer. -}
    , disputeEvidenceRefundPolicyDisclosure :: Maybe (Text)
    {- ^ Documentation demonstrating that the customer was shown your refund policy prior to purchase. -}
    , disputeEvidenceRefundRefusalExplanation :: Maybe (Text)
    {- ^ A justification for why the customer is not entitled to a refund. -}
    , disputeEvidenceServiceDate :: Maybe (Text)
    {- ^ The date on which the customer received or began receiving the purchased service, in a clear human-readable format. -}
    , disputeEvidenceServiceDocumentation :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement. -}
    , disputeEvidenceShippingAddress :: Maybe (Text)
    {- ^ The address to which a physical product was shipped. You should try to include as complete address information as possible. -}
    , disputeEvidenceShippingCarrier :: Maybe (Text)
    {- ^ The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas. -}
    , disputeEvidenceShippingDate :: Maybe (Text)
    {- ^ The date on which a physical product began its route to the shipping address, in a clear human-readable format. -}
    , disputeEvidenceShippingDocumentation :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible. -}
    , disputeEvidenceShippingTrackingNumber :: Maybe (Text)
    {- ^ The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas. -}
    , disputeEvidenceUncategorizedFile :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements. -}
    , disputeEvidenceUncategorizedText :: Maybe (Text)
    {- ^ Any additional evidence or statements. -}
    } deriving (Show, Eq, Generic)


-- Describes: "dispute_evidence_details"

data DisputeEvidenceDetails
  = DisputeEvidenceDetails
    { disputeEvidenceDetailsHasEvidence :: Bool
    {- ^ Whether evidence has been staged for this dispute. -}
    , disputeEvidenceDetailsPastDue :: Bool
    {- ^ Whether the last evidence submission was submitted past the due date. Defaults to `false` if no evidence submissions have occurred. If `true`, then delivery of the latest evidence is *not* guaranteed. -}
    , disputeEvidenceDetailsSubmissionCount :: Int
    {- ^ The number of times evidence has been submitted. Typically, you may only submit evidence once. -}
    , disputeEvidenceDetailsDueBy :: Maybe (POSIXTime)
    {- ^ Date by which evidence must be submitted in order to successfully challenge dispute. Will be null if the customer's bank or credit card company doesn't allow a response for this particular dispute. -}
    } deriving (Show, Eq, Generic)


-- Describes: "ephemeral_key"

data EphemeralKey
  = EphemeralKey
    { ephemeralKeyId :: Id (EphemeralKey)
    {- ^ Unique identifier for the object. -}
    , ephemeralKeyObject :: EphemeralKeyObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , ephemeralKeyLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , ephemeralKeyCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , ephemeralKeyExpires :: POSIXTime
    {- ^ Time at which the key will expire. Measured in seconds since the Unix epoch. -}
    , ephemeralKeySecret :: Text
    {- ^ The key's secret. You can use this value to make authorized requests to the Stripe API. -}
    } deriving (Show, Eq, Generic)


-- Describes: "error"
{- | An error response from the Stripe API -}
data Error
  = Error
    { errorError :: ApiErrors
    } deriving (Show, Eq, Generic)


-- Describes: "event"

data Event
  = Event
    { eventId :: Id (Event)
    {- ^ Unique identifier for the object. -}
    , eventObject :: EventObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , eventLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , eventCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , eventData_ :: NotificationEventData
    , eventPendingWebhooks :: Int
    {- ^ Number of webhooks that have yet to be successfully delivered (i.e., to return a 20x response) to the URLs you've specified. -}
    , eventType_ :: Text
    {- ^ Description of the event (e.g., `invoice.created` or `charge.refunded`). -}
    , eventApiVersion :: Maybe (Text)
    {- ^ The Stripe API version used to render `data`. *Note: This property is populated only for events on or after October 31, 2014*. -}
    , eventRequest :: Maybe (NotificationEventRequest)
    {- ^ Information on the API request that instigated the event. -}
    } deriving (Show, Eq, Generic)


-- Describes: "exchange_rate"

data ExchangeRate
  = ExchangeRate
    { exchangeRateId :: Id (ExchangeRate)
    {- ^ Unique identifier for the object. Represented as the three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) in lowercase. -}
    , exchangeRateObject :: ExchangeRateObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , exchangeRateRates :: Object
    {- ^ Hash where the keys are supported currencies and the values are the exchange rate at which the base id currency converts to the key currency. -}
    } deriving (Show, Eq, Generic)


-- Describes: "external_account"

data ExternalAccount
  = ExternalAccount
    {
    } deriving (Show, Eq, Generic)


-- Describes: "fee"

data Fee
  = Fee
    { feeAmount :: Int
    {- ^ Amount of the fee, in cents. -}
    , feeCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , feeType_ :: FeeTypeEnum
    {- ^ Type of the fee, one of: `application_fee`, `stripe_fee` or `tax`. -}
    , feeApplication :: Maybe (Text)
    , feeDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    } deriving (Show, Eq, Generic)


-- Describes: "fee_refund"

data FeeRefund
  = FeeRefund
    { feeRefundId :: Id (FeeRefund)
    {- ^ Unique identifier for the object. -}
    , feeRefundObject :: FeeRefundObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , feeRefundAmount :: Int
    {- ^ Amount, in %s. -}
    , feeRefundCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , feeRefundCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , feeRefundFee :: Either (Text) (ApplicationFee)
    {- ^ ID of the application fee that was refunded. -}
    , feeRefundMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , feeRefundBalanceTransaction :: Maybe (Either (Text) (BalanceTransaction))
    {- ^ Balance transaction that describes the impact on your account balance. -}
    } deriving (Show, Eq, Generic)


-- Describes: "file"

data File
  = File
    { fileId :: Id (File)
    {- ^ Unique identifier for the object. -}
    , fileObject :: FileObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , fileCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , filePurpose :: Text
    {- ^ The purpose of the file. Possible values are `business_icon`, `business_logo`, `customer_signature`, `dispute_evidence`, `finance_report_run`, `identity_document`, `pci_document`, `sigma_scheduled_query`, or `tax_document_user_upload`. -}
    , fileSize :: Int
    {- ^ The size in bytes of the file object. -}
    , fileFilename :: Maybe (Text)
    {- ^ A filename for the file, suitable for saving to a filesystem. -}
    , fileLinks :: Maybe (Object)
    , fileTitle :: Maybe (Text)
    {- ^ A user friendly title for the document. -}
    , fileType_ :: Maybe (Text)
    {- ^ The type of the file returned (e.g., `csv`, `pdf`, `jpg`, or `png`). -}
    , fileUrl :: Maybe (Text)
    {- ^ The URL from which the file can be downloaded using your live secret API key. -}
    } deriving (Show, Eq, Generic)


-- Describes: "file_link"

data FileLink
  = FileLink
    { fileLinkId :: Id (FileLink)
    {- ^ Unique identifier for the object. -}
    , fileLinkObject :: FileLinkObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , fileLinkLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , fileLinkCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , fileLinkExpired :: Bool
    {- ^ Whether this link is already expired. -}
    , fileLinkFile :: Either (Text) (File)
    {- ^ The file object this link points to. -}
    , fileLinkMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , fileLinkExpiresAt :: Maybe (POSIXTime)
    {- ^ Time at which the link expires. -}
    , fileLinkUrl :: Maybe (Text)
    {- ^ The publicly accessible URL to download the file. -}
    } deriving (Show, Eq, Generic)


-- Describes: "financial_reporting_finance_report_run_run_parameters"

data FinancialReportingFinanceReportRunRunParameters
  = FinancialReportingFinanceReportRunRunParameters
    { financialReportingFinanceReportRunRunParametersColumns :: Vector (Text)
    {- ^ The set of output columns requested for inclusion in the report run. -}
    , financialReportingFinanceReportRunRunParametersConnectedAccount :: Text
    {- ^ Connected account ID by which to filter the report run. -}
    , financialReportingFinanceReportRunRunParametersCurrency :: Text
    {- ^ Currency of objects to be included in the report run. -}
    , financialReportingFinanceReportRunRunParametersIntervalEnd :: POSIXTime
    {- ^ Ending timestamp of data to be included in the report run (exclusive). -}
    , financialReportingFinanceReportRunRunParametersIntervalStart :: POSIXTime
    {- ^ Starting timestamp of data to be included in the report run. -}
    , financialReportingFinanceReportRunRunParametersPayout :: Text
    {- ^ Payout ID by which to filter the report run. -}
    , financialReportingFinanceReportRunRunParametersReportingCategory :: Text
    {- ^ Category of balance transactions to be included in the report run. -}
    } deriving (Show, Eq, Generic)


-- Describes: "inventory"

data Inventory
  = Inventory
    { inventoryType_ :: Text
    {- ^ Inventory type. Possible values are `finite`, `bucket` (not quantified), and `infinite`. -}
    , inventoryQuantity :: Maybe (Int)
    {- ^ The count of inventory available. Will be present if and only if `type` is `finite`. -}
    , inventoryValue :: Maybe (Text)
    {- ^ An indicator of the inventory available. Possible values are `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if `type` is `bucket`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoice"

data Invoice
  = Invoice
    { invoiceId :: Id (Invoice)
    {- ^ Unique identifier for the object. -}
    , invoiceObject :: InvoiceObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , invoiceLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , invoiceAmountDue :: Int
    {- ^ Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`. -}
    , invoiceAmountPaid :: Int
    {- ^ The amount, in %s, that was paid. -}
    , invoiceAmountRemaining :: Int
    {- ^ The amount remaining, in %s, that is due. -}
    , invoiceAttemptCount :: Int
    {- ^ Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule. -}
    , invoiceAttempted :: Bool
    {- ^ Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users. -}
    , invoiceAutoAdvance :: Bool
    {- ^ Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action. -}
    , invoiceBilling :: InvoiceBillingEnum
    {- ^ This field has been renamed to `collection_method` and will be removed in a future API version. -}
    , invoiceBillingReason :: InvoiceBillingReasonEnum
    {- ^ Indicates the reason why the invoice was created. `subscription_cycle` indicates an invoice created by a subscription advancing into a new period. `subscription_create` indicates an invoice created due to creating a subscription. `subscription_update` indicates an invoice created due to updating a subscription. `subscription` is set for all old invoices to indicate either a change to a subscription or a period advancement. `manual` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The `upcoming` value is reserved for simulated invoices per the upcoming invoice endpoint. `subscription_threshold` indicates an invoice created due to a billing threshold being reached. -}
    , invoiceCollectionMethod :: InvoiceCollectionMethodEnum
    {- ^ Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. -}
    , invoiceCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , invoiceCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , invoiceCustomFields :: Vector (InvoiceSettingCustomField)
    {- ^ Custom fields displayed on the invoice. -}
    , invoiceCustomer :: AnyOf  '[Text, Customer, DeletedCustomer]
    , invoiceCustomerTaxExempt :: InvoiceCustomerTaxExemptEnum
    {- ^ The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated. -}
    , invoiceCustomerTaxIds :: Vector (InvoicesResourceInvoiceTaxId)
    {- ^ The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated. -}
    , invoiceDefaultTaxRates :: Vector (TaxRate)
    {- ^ The tax rates applied to this invoice, if any. -}
    , invoiceLines :: Object
    {- ^ The individual line items that make up the invoice. `lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any. -}
    , invoicePaid :: Bool
    {- ^ Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance. -}
    , invoicePeriodEnd :: POSIXTime
    {- ^ End of the usage period during which invoice items were added to this invoice. -}
    , invoicePeriodStart :: POSIXTime
    {- ^ Start of the usage period during which invoice items were added to this invoice. -}
    , invoicePostPaymentCreditNotesAmount :: Int
    {- ^ Total amount of all post-payment credit notes issued for this invoice. -}
    , invoicePrePaymentCreditNotesAmount :: Int
    {- ^ Total amount of all pre-payment credit notes issued for this invoice. -}
    , invoiceStartingBalance :: Int
    {- ^ Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance. -}
    , invoiceStatus :: InvoiceStatusEnum
    {- ^ The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview) -}
    , invoiceStatusTransitions :: InvoicesStatusTransitions
    , invoiceSubscriptionProrationDate :: Int
    {- ^ Only set for upcoming invoices that preview prorations. The time used to calculate prorations. -}
    , invoiceSubtotal :: Int
    {- ^ Total of all subscriptions, invoice items, and prorations on the invoice before any discount or tax is applied. -}
    , invoiceThresholdReason :: InvoiceThresholdReason
    , invoiceTotal :: Int
    {- ^ Total after discounts and taxes. -}
    , invoiceTotalTaxAmounts :: Vector (InvoiceTaxAmount)
    {- ^ The aggregate amounts calculated per tax rate for all line items. -}
    , invoiceAccountCountry :: Maybe (Text)
    {- ^ The country of the business associated with this invoice, most often the business creating the invoice. -}
    , invoiceAccountName :: Maybe (Text)
    {- ^ The public name of the business associated with this invoice, most often the business creating the invoice. -}
    , invoiceApplicationFeeAmount :: Maybe (Int)
    {- ^ The fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid. -}
    , invoiceCharge :: Maybe (Either (Text) (Charge))
    {- ^ ID of the latest charge generated for this invoice, if any. -}
    , invoiceCustomerAddress :: Maybe (Address)
    {- ^ The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated. -}
    , invoiceCustomerEmail :: Maybe (Text)
    {- ^ The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated. -}
    , invoiceCustomerName :: Maybe (Text)
    {- ^ The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated. -}
    , invoiceCustomerPhone :: Maybe (Text)
    {- ^ The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated. -}
    , invoiceCustomerShipping :: Maybe (Shipping)
    {- ^ The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated. -}
    , invoiceDefaultPaymentMethod :: Maybe (Either (Text) (PaymentMethod))
    {- ^ ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings. -}
    , invoiceDefaultSource :: Maybe (AnyOf  '[Text, AlipayAccount, BankAccount, BitcoinReceiver, Card, Source])
    {- ^ ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source. -}
    , invoiceDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard. -}
    , invoiceDiscount :: Maybe (Discount)
    , invoiceDueDate :: Maybe (POSIXTime)
    {- ^ The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`. -}
    , invoiceEndingBalance :: Maybe (Int)
    {- ^ Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null. -}
    , invoiceFooter :: Maybe (Text)
    {- ^ Footer displayed on the invoice. -}
    , invoiceHostedInvoiceUrl :: Maybe (Text)
    {- ^ The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null. -}
    , invoiceInvoicePdf :: Maybe (Text)
    {- ^ The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null. -}
    , invoiceMetadata :: Maybe (Object)
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , invoiceNextPaymentAttempt :: Maybe (POSIXTime)
    {- ^ The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`. -}
    , invoiceNumber :: Maybe (Text)
    {- ^ A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified. -}
    , invoicePaymentIntent :: Maybe (Either (Text) (PaymentIntent))
    {- ^ The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent. -}
    , invoiceReceiptNumber :: Maybe (Text)
    {- ^ This is the transaction number that appears on email receipts sent for this invoice. -}
    , invoiceStatementDescriptor :: Maybe (Text)
    {- ^ Extra information about an invoice for the customer's credit card statement. -}
    , invoiceSubscription :: Maybe (Either (Text) (Subscription))
    {- ^ The subscription that this invoice was prepared for, if any. -}
    , invoiceTax :: Maybe (Int)
    {- ^ The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice. -}
    , invoiceTaxPercent :: Maybe (Scientific)
    {- ^ This percentage of the subtotal has been added to the total amount of the invoice, including invoice line items and discounts. This field is inherited from the subscription's `tax_percent` field, but can be changed before the invoice is paid. This field defaults to null. -}
    , invoiceWebhooksDeliveredAt :: Maybe (POSIXTime)
    {- ^ The time at which webhooks for this invoice were successfully delivered (if the invoice had no webhooks to deliver, this will match `created`). Invoice payment is delayed until webhooks are delivered, or until all webhook delivery attempts have been exhausted. -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoice_item_threshold_reason"

data InvoiceItemThresholdReason
  = InvoiceItemThresholdReason
    { invoiceItemThresholdReasonLineItemIds :: Vector (Text)
    {- ^ The IDs of the line items that triggered the threshold invoice. -}
    , invoiceItemThresholdReasonUsageGte :: Int
    {- ^ The quantity threshold boundary that applied to the given line item. -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoice_line_item_period"

data InvoiceLineItemPeriod
  = InvoiceLineItemPeriod
    { invoiceLineItemPeriodEnd :: Int
    {- ^ End of the line item's billing period -}
    , invoiceLineItemPeriodStart :: Int
    {- ^ Start of the line item's billing period -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoice_setting_custom_field"

data InvoiceSettingCustomField
  = InvoiceSettingCustomField
    { invoiceSettingCustomFieldName :: Text
    {- ^ The name of the custom field. -}
    , invoiceSettingCustomFieldValue :: Text
    {- ^ The value of the custom field. -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoice_setting_customer_setting"

data InvoiceSettingCustomerSetting
  = InvoiceSettingCustomerSetting
    { invoiceSettingCustomerSettingCustomFields :: Vector (InvoiceSettingCustomField)
    {- ^ Default custom fields to be displayed on invoices for this customer. -}
    , invoiceSettingCustomerSettingDefaultPaymentMethod :: Maybe (Either (Text) (PaymentMethod))
    {- ^ ID of the default payment method used for subscriptions and invoices for the customer. -}
    , invoiceSettingCustomerSettingFooter :: Maybe (Text)
    {- ^ Default footer to be displayed on invoices for this customer. -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoice_setting_subscription_schedule_setting"

data InvoiceSettingSubscriptionScheduleSetting
  = InvoiceSettingSubscriptionScheduleSetting
    { invoiceSettingSubscriptionScheduleSettingDaysUntilDue :: Maybe (Int)
    {- ^ Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoice_tax_amount"

data InvoiceTaxAmount
  = InvoiceTaxAmount
    { invoiceTaxAmountAmount :: Int
    {- ^ The amount, in %s, of the tax. -}
    , invoiceTaxAmountInclusive :: Bool
    {- ^ Whether this tax amount is inclusive or exclusive. -}
    , invoiceTaxAmountTaxRate :: Either (Text) (TaxRate)
    {- ^ The tax rate that was applied to get this tax amount. -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoice_threshold_reason"

data InvoiceThresholdReason
  = InvoiceThresholdReason
    { invoiceThresholdReasonItemReasons :: Vector (InvoiceItemThresholdReason)
    {- ^ Indicates which line items triggered a threshold invoice. -}
    , invoiceThresholdReasonAmountGte :: Maybe (Int)
    {- ^ The total invoice amount threshold boundary if it triggered the threshold invoice. -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoiceitem"

data Invoiceitem
  = Invoiceitem
    { invoiceitemId :: Id (Invoiceitem)
    {- ^ Unique identifier for the object. -}
    , invoiceitemObject :: InvoiceitemObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , invoiceitemLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , invoiceitemAmount :: Int
    {- ^ Amount (in the `currency` specified) of the invoice item. This should always be equal to `unit_amount * quantity`. -}
    , invoiceitemCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , invoiceitemCustomer :: AnyOf  '[Text, Customer, DeletedCustomer]
    {- ^ The ID of the customer who will be billed when this invoice item is billed. -}
    , invoiceitemDate :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , invoiceitemDiscountable :: Bool
    {- ^ If true, discounts will apply to this invoice item. Always false for prorations. -}
    , invoiceitemMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , invoiceitemPeriod :: InvoiceLineItemPeriod
    , invoiceitemProration :: Bool
    {- ^ Whether the invoice item was created automatically as a proration adjustment when the customer switched plans. -}
    , invoiceitemQuantity :: Int
    {- ^ Quantity of units for the invoice item. If the invoice item is a proration, the quantity of the subscription that the proration was computed for. -}
    , invoiceitemSubscriptionItem :: Text
    {- ^ The subscription item that this invoice item has been created for, if any. -}
    , invoiceitemTaxRates :: Vector (TaxRate)
    {- ^ The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item. -}
    , invoiceitemUnifiedProration :: Bool
    {- ^ For prorations this indicates whether Stripe automatically grouped multiple related debit and credit line items into a single combined line item. -}
    , invoiceitemDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , invoiceitemInvoice :: Maybe (Either (Text) (Invoice))
    {- ^ The ID of the invoice this invoice item belongs to. -}
    , invoiceitemPlan :: Maybe (Plan)
    {- ^ If the invoice item is a proration, the plan of the subscription that the proration was computed for. -}
    , invoiceitemSubscription :: Maybe (Either (Text) (Subscription))
    {- ^ The subscription that this invoice item has been created for, if any. -}
    , invoiceitemUnitAmount :: Maybe (Int)
    {- ^ Unit Amount (in the `currency` specified) of the invoice item. -}
    , invoiceitemUnitAmountDecimal :: Maybe (Scientific)
    {- ^ Same as `unit_amount`, but contains a decimal value with at most 12 decimal places. -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoices_resource_invoice_tax_id"

data InvoicesResourceInvoiceTaxId
  = InvoicesResourceInvoiceTaxId
    { invoicesResourceInvoiceTaxIdType_ :: InvoicesResourceInvoiceTaxIdTypeEnum
    {- ^ The type of the tax ID, one of `au_abn`, `eu_vat`, `in_gst`, `no_vat`, `nz_gst`, or `unknown` -}
    , invoicesResourceInvoiceTaxIdValue :: Maybe (Text)
    {- ^ The value of the tax ID. -}
    } deriving (Show, Eq, Generic)


-- Describes: "invoices_status_transitions"

data InvoicesStatusTransitions
  = InvoicesStatusTransitions
    { invoicesStatusTransitionsFinalizedAt :: Maybe (POSIXTime)
    {- ^ The time that the invoice draft was finalized. -}
    , invoicesStatusTransitionsMarkedUncollectibleAt :: Maybe (POSIXTime)
    {- ^ The time that the invoice was marked uncollectible. -}
    , invoicesStatusTransitionsPaidAt :: Maybe (POSIXTime)
    {- ^ The time that the invoice was paid. -}
    , invoicesStatusTransitionsVoidedAt :: Maybe (POSIXTime)
    {- ^ The time that the invoice was voided. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuer_fraud_record"

data IssuerFraudRecord
  = IssuerFraudRecord
    { issuerFraudRecordId :: Id (IssuerFraudRecord)
    {- ^ Unique identifier for the object. -}
    , issuerFraudRecordObject :: IssuerFraudRecordObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , issuerFraudRecordLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , issuerFraudRecordActionable :: Bool
    {- ^ An IFR is actionable if it has not received a dispute and has not been fully refunded. You may wish to proactively refund a charge that receives an IFR, in order to avoid receiving a dispute later. -}
    , issuerFraudRecordCharge :: Either (Text) (Charge)
    {- ^ ID of the charge this issuer fraud record is for, optionally expanded. -}
    , issuerFraudRecordCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , issuerFraudRecordFraudType :: IssuerFraudRecordFraudTypeEnum
    {- ^ The type of fraud labelled by the issuer. One of `card_never_received`, `fraudulent_card_application`, `made_with_counterfeit_card`, `made_with_lost_card`, `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`. -}
    , issuerFraudRecordHasLiabilityShift :: Bool
    {- ^ If true, the associated charge is subject to [liability shift](https://stripe.com/docs/sources/three-d-secure#disputed-payments). -}
    , issuerFraudRecordPostDate :: Int
    {- ^ The timestamp at which the card issuer posted the issuer fraud record. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_authorization_merchant_data"

data IssuingAuthorizationMerchantData
  = IssuingAuthorizationMerchantData
    { issuingAuthorizationMerchantDataCategory :: Text
    {- ^ A categorization of the seller's type of business. See our [merchant categories guide](https://stripe.com/docs/issuing/merchant-categories) for a list of possible values. -}
    , issuingAuthorizationMerchantDataNetworkId :: Text
    {- ^ Identifier assigned to the seller by the card brand -}
    , issuingAuthorizationMerchantDataCity :: Maybe (Text)
    {- ^ City where the seller is located -}
    , issuingAuthorizationMerchantDataCountry :: Maybe (Text)
    {- ^ Country where the seller is located -}
    , issuingAuthorizationMerchantDataName :: Maybe (Text)
    {- ^ Name of the seller -}
    , issuingAuthorizationMerchantDataPostalCode :: Maybe (Text)
    {- ^ Postal code where the seller is located -}
    , issuingAuthorizationMerchantDataState :: Maybe (Text)
    {- ^ State where the seller is located -}
    , issuingAuthorizationMerchantDataUrl :: Maybe (Text)
    {- ^ The url an online purchase was made from -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_authorization_request"

data IssuingAuthorizationRequest
  = IssuingAuthorizationRequest
    { issuingAuthorizationRequestApproved :: Bool
    {- ^ Whether this request was approved. -}
    , issuingAuthorizationRequestAuthorizedAmount :: Int
    {- ^ The amount that was authorized at the time of this request -}
    , issuingAuthorizationRequestAuthorizedCurrency :: Text
    {- ^ The currency that was presented to the cardholder for the authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , issuingAuthorizationRequestCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , issuingAuthorizationRequestHeldAmount :: Int
    {- ^ The amount Stripe held from your account to fund the authorization, if the request was approved -}
    , issuingAuthorizationRequestHeldCurrency :: Text
    {- ^ The currency of the [held amount](https://stripe.com/docs/api#issuing_authorization_object-held_amount) -}
    , issuingAuthorizationRequestReason :: IssuingAuthorizationRequestReasonEnum
    {- ^ One of `authentication_failed`, `authorization_controls`, `card_active`, `card_inactive`, `insufficient_funds`, `account_compliance_disabled`, `account_inactive`, `suspected_fraud`, `webhook_approved`, `webhook_declined`, or `webhook_timeout`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_authorization_verification_data"

data IssuingAuthorizationVerificationData
  = IssuingAuthorizationVerificationData
    { issuingAuthorizationVerificationDataAddressLine1Check :: IssuingAuthorizationVerificationDataAddressLine1CheckEnum
    {- ^ One of `match`, `mismatch`, or `not_provided`. -}
    , issuingAuthorizationVerificationDataAddressZipCheck :: IssuingAuthorizationVerificationDataAddressZipCheckEnum
    {- ^ One of `match`, `mismatch`, or `not_provided`. -}
    , issuingAuthorizationVerificationDataAuthentication :: IssuingAuthorizationVerificationDataAuthenticationEnum
    {- ^ One of `success`, `failure`, `exempt`, or `none`. -}
    , issuingAuthorizationVerificationDataCvcCheck :: IssuingAuthorizationVerificationDataCvcCheckEnum
    {- ^ One of `match`, `mismatch`, or `not_provided`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_card_authorization_controls"

data IssuingCardAuthorizationControls
  = IssuingCardAuthorizationControls
    { issuingCardAuthorizationControlsAllowedCategories :: Vector (IssuingCardAuthorizationControlsAllowedCategoriesEnum)
    {- ^ Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations permitted on this card. -}
    , issuingCardAuthorizationControlsBlockedCategories :: Vector (IssuingCardAuthorizationControlsBlockedCategoriesEnum)
    {- ^ Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to always decline on this card. -}
    , issuingCardAuthorizationControlsSpendingLimits :: Vector (IssuingCardSpendingLimit)
    {- ^ Limit the spending with rules based on time intervals and categories. -}
    , issuingCardAuthorizationControlsCurrency :: Maybe (Text)
    {- ^ The currency of the card. See [max_amount](https://stripe.com/docs/api#issuing_card_object-authorization_controls-max_amount) -}
    , issuingCardAuthorizationControlsMaxAmount :: Maybe (Int)
    {- ^ Maximum amount allowed per authorization on this card, in the currency of the card. Authorization amounts in a different currency will be converted to the card's currency when evaluating this control. -}
    , issuingCardAuthorizationControlsMaxApprovals :: Maybe (Int)
    {- ^ Maximum count of approved authorizations on this card. Counts all authorizations retroactively. -}
    , issuingCardAuthorizationControlsSpendingLimitsCurrency :: Maybe (Text)
    {- ^ Currency for the amounts within spending_limits. Locked to the currency of the card. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_card_pin"

data IssuingCardPin
  = IssuingCardPin
    { issuingCardPinStatus :: IssuingCardPinStatusEnum
    {- ^ The status of the pin. One of `blocked` or `active`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_card_shipping"

data IssuingCardShipping
  = IssuingCardShipping
    { issuingCardShippingAddress :: Address
    , issuingCardShippingName :: Text
    {- ^ Recipient name. -}
    , issuingCardShippingStatus :: IssuingCardShippingStatusEnum
    {- ^ The delivery status of the card. One of `pending`, `shipped`, `delivered`, `returned`, `failure`, or `canceled`. -}
    , issuingCardShippingType_ :: IssuingCardShippingTypeEnum
    {- ^ One of `bulk` or `individual`. Bulk shipments will be grouped and mailed together, while individual ones will not. -}
    , issuingCardShippingCarrier :: Maybe (Text)
    {- ^ The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. -}
    , issuingCardShippingEta :: Maybe (POSIXTime)
    {- ^ A unix timestamp representing a best estimate of when the card will be delivered. -}
    , issuingCardShippingTrackingNumber :: Maybe (Text)
    {- ^ A tracking number for a card shipment. -}
    , issuingCardShippingTrackingUrl :: Maybe (Text)
    {- ^ A link to the shipping carrier's site where you can view detailed information about a card shipment. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_card_spending_limit"

data IssuingCardSpendingLimit
  = IssuingCardSpendingLimit
    { issuingCardSpendingLimitAmount :: Int
    {- ^ Maximum amount allowed to spend per time interval. -}
    , issuingCardSpendingLimitCategories :: Vector (IssuingCardSpendingLimitCategoriesEnum)
    {- ^ Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) on which to apply the spending limit. Leave this blank to limit all charges. -}
    , issuingCardSpendingLimitInterval :: IssuingCardSpendingLimitIntervalEnum
    {- ^ The time interval with which to apply this spending limit towards. Allowed values are `per_authorization`, `daily`, `weekly`, `monthly`, `yearly`, or `all_time`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_cardholder_address"

data IssuingCardholderAddress
  = IssuingCardholderAddress
    { issuingCardholderAddressAddress :: Address
    , issuingCardholderAddressName :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_cardholder_authorization_controls"

data IssuingCardholderAuthorizationControls
  = IssuingCardholderAuthorizationControls
    { issuingCardholderAuthorizationControlsAllowedCategories :: Vector (IssuingCardholderAuthorizationControlsAllowedCategoriesEnum)
    {- ^ Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations permitted on this card. -}
    , issuingCardholderAuthorizationControlsBlockedCategories :: Vector (IssuingCardholderAuthorizationControlsBlockedCategoriesEnum)
    {- ^ Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to always decline on this card. -}
    , issuingCardholderAuthorizationControlsSpendingLimits :: Vector (IssuingCardholderSpendingLimit)
    {- ^ Limit the spending with rules based on time intervals and categories. -}
    , issuingCardholderAuthorizationControlsSpendingLimitsCurrency :: Maybe (Text)
    {- ^ Currency for the amounts within spending_limits. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_cardholder_spending_limit"

data IssuingCardholderSpendingLimit
  = IssuingCardholderSpendingLimit
    { issuingCardholderSpendingLimitAmount :: Int
    {- ^ Maximum amount allowed to spend per time interval. -}
    , issuingCardholderSpendingLimitCategories :: Vector (IssuingCardholderSpendingLimitCategoriesEnum)
    {- ^ Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) on which to apply the spending limit. Leave this blank to limit all charges. -}
    , issuingCardholderSpendingLimitInterval :: IssuingCardholderSpendingLimitIntervalEnum
    {- ^ The time interval with which to apply this spending limit towards. Allowed values are `per_authorization`, `daily`, `weekly`, `monthly`, `yearly`, or `all_time`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_dispute_evidence"

data IssuingDisputeEvidence
  = IssuingDisputeEvidence
    { issuingDisputeEvidenceFraudulent :: Maybe (IssuingDisputeFraudulentEvidence)
    {- ^ Evidence to support a fraudulent dispute. This will only be present if your dispute's `reason` is `fraudulent`. -}
    , issuingDisputeEvidenceOther :: Maybe (IssuingDisputeOtherEvidence)
    {- ^ Evidence to support an uncategorized dispute. This will only be present if your dispute's `reason` is `other`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_dispute_fraudulent_evidence"

data IssuingDisputeFraudulentEvidence
  = IssuingDisputeFraudulentEvidence
    { issuingDisputeFraudulentEvidenceDisputeExplanation :: Maybe (Text)
    {- ^ Brief freeform text explaining why you are disputing this transaction. -}
    , issuingDisputeFraudulentEvidenceUncategorizedFile :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional file evidence supporting your dispute. -}
    } deriving (Show, Eq, Generic)


-- Describes: "issuing_dispute_other_evidence"

data IssuingDisputeOtherEvidence
  = IssuingDisputeOtherEvidence
    { issuingDisputeOtherEvidenceDisputeExplanation :: Text
    {- ^ Brief freeform text explaining why you are disputing this transaction. -}
    , issuingDisputeOtherEvidenceUncategorizedFile :: Maybe (Either (Text) (File))
    {- ^ (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional file evidence supporting your dispute. -}
    } deriving (Show, Eq, Generic)


-- Describes: "legal_entity_company"

data LegalEntityCompany
  = LegalEntityCompany
    { legalEntityCompanyAddress :: Address
    , legalEntityCompanyDirectorsProvided :: Bool
    {- ^ Whether the company's directors have been provided. This Boolean will be `true` if you've manually indicated that all directors are provided via [the `directors_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided). -}
    , legalEntityCompanyOwnersProvided :: Bool
    {- ^ Whether the company's owners have been provided. This Boolean will be `true` if you've manually indicated that all owners are provided via [the `owners_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided), or if Stripe determined that all owners were provided. Stripe determines ownership requirements using both the number of owners provided and their total percent ownership (calculated by adding the `percent_ownership` of each owner together). -}
    , legalEntityCompanyTaxIdProvided :: Bool
    {- ^ Whether the company's business ID number was provided. -}
    , legalEntityCompanyTaxIdRegistrar :: Text
    {- ^ The jurisdiction in which the `tax_id` is registered (Germany-based companies only). -}
    , legalEntityCompanyVatIdProvided :: Bool
    {- ^ Whether the company's business VAT number was provided. -}
    , legalEntityCompanyAddressKana :: Maybe (LegalEntityJapanAddress)
    {- ^ The Kana variation of the company's primary address (Japan only). -}
    , legalEntityCompanyAddressKanji :: Maybe (LegalEntityJapanAddress)
    {- ^ The Kanji variation of the company's primary address (Japan only). -}
    , legalEntityCompanyName :: Maybe (Text)
    {- ^ The company's legal name. -}
    , legalEntityCompanyNameKana :: Maybe (Text)
    {- ^ The Kana variation of the company's legal name (Japan only). -}
    , legalEntityCompanyNameKanji :: Maybe (Text)
    {- ^ The Kanji variation of the company's legal name (Japan only). -}
    , legalEntityCompanyPhone :: Maybe (Text)
    {- ^ The company's phone number (used for verification). -}
    , legalEntityCompanyVerification :: Maybe (LegalEntityCompanyVerification)
    {- ^ Information on the verification state of the company. -}
    } deriving (Show, Eq, Generic)


-- Describes: "legal_entity_company_verification"

data LegalEntityCompanyVerification
  = LegalEntityCompanyVerification
    { legalEntityCompanyVerificationDocument :: LegalEntityCompanyVerificationDocument
    } deriving (Show, Eq, Generic)


-- Describes: "legal_entity_company_verification_document"

data LegalEntityCompanyVerificationDocument
  = LegalEntityCompanyVerificationDocument
    { legalEntityCompanyVerificationDocumentDetailsCode :: LegalEntityCompanyVerificationDocumentDetailsCodeEnum
    {- ^ One of `document_corrupt`, `document_expired`, `document_failed_copy`, `document_failed_greyscale`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_not_readable`, `document_not_uploaded`, `document_type_not_supported`, or `document_too_large`. A machine-readable code specifying the verification state for this document. -}
    , legalEntityCompanyVerificationDocumentBack :: Maybe (Either (Text) (File))
    {- ^ The back of a document returned by a [file upload](#create_file) with a `purpose` value of `additional_verification`. -}
    , legalEntityCompanyVerificationDocumentDetails :: Maybe (Text)
    {- ^ A user-displayable string describing the verification state of this document. -}
    , legalEntityCompanyVerificationDocumentFront :: Maybe (Either (Text) (File))
    {- ^ The front of a document returned by a [file upload](#create_file) with a `purpose` value of `additional_verification`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "legal_entity_dob"

data LegalEntityDob
  = LegalEntityDob
    { legalEntityDobDay :: Maybe (Int)
    {- ^ The day of birth, between 1 and 31. -}
    , legalEntityDobMonth :: Maybe (Int)
    {- ^ The month of birth, between 1 and 12. -}
    , legalEntityDobYear :: Maybe (Int)
    {- ^ The four-digit year of birth. -}
    } deriving (Show, Eq, Generic)


-- Describes: "legal_entity_japan_address"

data LegalEntityJapanAddress
  = LegalEntityJapanAddress
    { legalEntityJapanAddressCity :: Maybe (Text)
    {- ^ City/Ward. -}
    , legalEntityJapanAddressCountry :: Maybe (Text)
    {- ^ Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)). -}
    , legalEntityJapanAddressLine1 :: Maybe (Text)
    {- ^ Block/Building number. -}
    , legalEntityJapanAddressLine2 :: Maybe (Text)
    {- ^ Building details. -}
    , legalEntityJapanAddressPostalCode :: Maybe (Text)
    {- ^ Zip/Postal Code. -}
    , legalEntityJapanAddressState :: Maybe (Text)
    {- ^ Prefecture. -}
    , legalEntityJapanAddressTown :: Maybe (Text)
    {- ^ Town/cho-me. -}
    } deriving (Show, Eq, Generic)


-- Describes: "legal_entity_person_verification"

data LegalEntityPersonVerification
  = LegalEntityPersonVerification
    { legalEntityPersonVerificationDetailsCode :: LegalEntityPersonVerificationDetailsCodeEnum
    {- ^ One of `scan_name_mismatch`, `failed_keyed_identity`, or `failed_other`. A machine-readable code specifying the verification state for the person. -}
    , legalEntityPersonVerificationDocument :: LegalEntityPersonVerificationDocument
    , legalEntityPersonVerificationStatus :: Text
    {- ^ The state of verification for the person. Possible values are `unverified`, `pending`, or `verified`. -}
    , legalEntityPersonVerificationAdditionalDocument :: Maybe (LegalEntityPersonVerificationDocument)
    {- ^ A document showing address, either a passport, local ID card, or utility bill from a well-known utility company. -}
    , legalEntityPersonVerificationDetails :: Maybe (Text)
    {- ^ A user-displayable string describing the verification state for the person. For example, this may say "Provided identity information could not be verified". -}
    } deriving (Show, Eq, Generic)


-- Describes: "legal_entity_person_verification_document"

data LegalEntityPersonVerificationDocument
  = LegalEntityPersonVerificationDocument
    { legalEntityPersonVerificationDocumentDetailsCode :: LegalEntityPersonVerificationDocumentDetailsCodeEnum
    {- ^ One of `document_corrupt`, `document_failed_copy`, `document_not_readable`, `document_failed_greyscale`, `document_not_uploaded`, `document_id_type_not_supported`, `document_id_country_not_supported`, `document_failed_other`, `document_fraudulent`, `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`, `document_photo_mismatch`, `document_too_large`, or `document_failed_test_mode`. A machine-readable code specifying the verification state for this document. -}
    , legalEntityPersonVerificationDocumentBack :: Maybe (Either (Text) (File))
    {- ^ The back of an ID returned by a [file upload](#create_file) with a `purpose` value of `identity_document`. -}
    , legalEntityPersonVerificationDocumentDetails :: Maybe (Text)
    {- ^ A user-displayable string describing the verification state of this document. For example, if a document is uploaded and the picture is too fuzzy, this may say "Identity document is too unclear to read". -}
    , legalEntityPersonVerificationDocumentFront :: Maybe (Either (Text) (File))
    {- ^ The front of an ID returned by a [file upload](#create_file) with a `purpose` value of `identity_document`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "light_account_logout"

data LightAccountLogout
  = LightAccountLogout
    {
    } deriving (Show, Eq, Generic)


-- Describes: "line_item"

data LineItem
  = LineItem
    { lineItemId :: Id (LineItem)
    {- ^ Unique identifier for the object. -}
    , lineItemObject :: LineItemObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , lineItemLivemode :: Bool
    {- ^ Whether this is a test line item. -}
    , lineItemAmount :: Int
    {- ^ The amount, in %s. -}
    , lineItemCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , lineItemDiscountable :: Bool
    {- ^ If true, discounts will apply to this line item. Always false for prorations. -}
    , lineItemInvoiceItem :: Text
    , lineItemMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with `type=subscription` this will reflect the metadata of the subscription that caused the line item to be created. -}
    , lineItemPeriod :: InvoiceLineItemPeriod
    , lineItemProration :: Bool
    {- ^ Whether this is a proration. -}
    , lineItemSubscriptionItem :: Text
    {- ^ The subscription item that generated this invoice item. Left empty if the line item is not an explicit result of a subscription. -}
    , lineItemTaxAmounts :: Vector (InvoiceTaxAmount)
    {- ^ The amount of tax calculated per tax rate for this line item -}
    , lineItemTaxRates :: Vector (TaxRate)
    {- ^ The tax rates which apply to the line item. -}
    , lineItemType_ :: LineItemTypeEnum
    {- ^ A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`. -}
    , lineItemUnifiedProration :: Bool
    {- ^ For prorations this indicates whether Stripe automatically grouped multiple related debit and credit line items into a single combined line item. -}
    , lineItemDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , lineItemPlan :: Maybe (Plan)
    {- ^ The plan of the subscription, if the line item is a subscription or a proration. -}
    , lineItemQuantity :: Maybe (Int)
    {- ^ The quantity of the subscription, if the line item is a subscription or a proration. -}
    , lineItemSubscription :: Maybe (Text)
    {- ^ The subscription that the invoice item pertains to, if any. -}
    } deriving (Show, Eq, Generic)


-- Describes: "login_link"

data LoginLink
  = LoginLink
    { loginLinkObject :: LoginLinkObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , loginLinkCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , loginLinkUrl :: Text
    {- ^ The URL for the login link. -}
    } deriving (Show, Eq, Generic)


-- Describes: "notification_event_data"

data NotificationEventData
  = NotificationEventData
    { notificationEventDataObject :: Object
    {- ^ Object containing the API resource relevant to the event. For example, an `invoice.created` event will have a full [invoice object](#invoice_object) as the value of the object key. -}
    , notificationEventDataPreviousAttributes :: Object
    {- ^ Object containing the names of the attributes that have changed, and their previous values (sent along only with *.updated events). -}
    } deriving (Show, Eq, Generic)


-- Describes: "notification_event_request"

data NotificationEventRequest
  = NotificationEventRequest
    { notificationEventRequestId :: Maybe (Text)
    {- ^ ID of the API request that caused the event. If null, the event was automatic (e.g., Stripe's automatic subscription handling). Request logs are available in the [dashboard](https://dashboard.stripe.com/logs), but currently not in the API. -}
    , notificationEventRequestIdempotencyKey :: Maybe (Text)
    {- ^ The idempotency key transmitted during the request, if any. *Note: This property is populated only for events on or after May 23, 2017*. -}
    } deriving (Show, Eq, Generic)


-- Describes: "order"

data Order
  = Order
    { orderId :: Id (Order)
    {- ^ Unique identifier for the object. -}
    , orderObject :: OrderObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , orderLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , orderAmount :: Int
    {- ^ A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the order. -}
    , orderCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , orderCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , orderExternalCouponCode :: Text
    , orderItems :: Vector (OrderItem)
    {- ^ List of items constituting the order. An order can have up to 25 items. -}
    , orderMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , orderShippingMethods :: Vector (ShippingMethod)
    {- ^ A list of supported shipping methods for this order. The desired shipping method can be specified either by updating the order, or when paying it. -}
    , orderStatus :: OrderStatusEnum
    {- ^ Current order status. One of `created`, `paid`, `canceled`, `fulfilled`, or `returned`. More details in the [Orders Guide](https://stripe.com/docs/orders/guide#understanding-order-statuses). -}
    , orderUpstreamId :: Text
    {- ^ The user's order ID if it is different from the Stripe order ID. -}
    , orderAmountReturned :: Maybe (Int)
    , orderApplication :: Maybe (Text)
    {- ^ ID of the Connect Application that created the order. -}
    , orderApplicationFee :: Maybe (Int)
    , orderCharge :: Maybe (Either (Text) (Charge))
    {- ^ The ID of the payment used to pay for the order. Present if the order status is `paid`, `fulfilled`, or `refunded`. -}
    , orderCustomer :: Maybe (AnyOf  '[Text, Customer, DeletedCustomer])
    {- ^ The customer used for the order. -}
    , orderEmail :: Maybe (Text)
    {- ^ The email address of the customer placing the order. -}
    , orderReturns :: Maybe (Object)
    , orderSelectedShippingMethod :: Maybe (Text)
    {- ^ The shipping method that is currently selected for this order, if any. If present, it is equal to one of the `id`s of shipping methods in the `shipping_methods` array. At order creation time, if there are multiple shipping methods, Stripe will automatically selected the first method. -}
    , orderShipping :: Maybe (Shipping)
    {- ^ The shipping address for the order. Present if the order is for goods to be shipped. -}
    , orderStatusTransitions :: Maybe (StatusTransitions)
    {- ^ The timestamps at which the order status was updated. -}
    , orderUpdated :: Maybe (POSIXTime)
    } deriving (Show, Eq, Generic)


-- Describes: "order_item"

data OrderItem
  = OrderItem
    { orderItemObject :: OrderItemObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , orderItemAmount :: Int
    {- ^ A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the line item. -}
    , orderItemCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , orderItemDescription :: Text
    {- ^ Description of the line item, meant to be displayable to the user (e.g., `"Express shipping"`). -}
    , orderItemType_ :: OrderItemTypeEnum
    {- ^ The type of line item. One of `sku`, `tax`, `shipping`, or `discount`. -}
    , orderItemParent :: Maybe (Either (Text) (Sku))
    {- ^ The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU). -}
    , orderItemQuantity :: Maybe (Int)
    {- ^ A positive integer representing the number of instances of `parent` that are included in this order item. Applicable/present only if `type` is `sku`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "order_return"

data OrderReturn
  = OrderReturn
    { orderReturnId :: Id (OrderReturn)
    {- ^ Unique identifier for the object. -}
    , orderReturnObject :: OrderReturnObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , orderReturnLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , orderReturnAmount :: Int
    {- ^ A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the returned line item. -}
    , orderReturnCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , orderReturnCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , orderReturnItems :: Vector (OrderItem)
    {- ^ The items included in this order return. -}
    , orderReturnOrder :: Maybe (Either (Text) (Order))
    {- ^ The order that this return includes items from. -}
    , orderReturnRefund :: Maybe (Either (Text) (Refund))
    {- ^ The ID of the refund issued for this return. -}
    } deriving (Show, Eq, Generic)


-- Describes: "package_dimensions"

data PackageDimensions
  = PackageDimensions
    { packageDimensionsHeight :: Scientific
    {- ^ Height, in inches. -}
    , packageDimensionsLength :: Scientific
    {- ^ Length, in inches. -}
    , packageDimensionsWeight :: Scientific
    {- ^ Weight, in ounces. -}
    , packageDimensionsWidth :: Scientific
    {- ^ Width, in inches. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_intent"

data PaymentIntent
  = PaymentIntent
    { paymentIntentId :: Id (PaymentIntent)
    {- ^ Unique identifier for the object. -}
    , paymentIntentObject :: PaymentIntentObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , paymentIntentLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , paymentIntentAmount :: Int
    {- ^ Amount intended to be collected by this PaymentIntent. -}
    , paymentIntentAmountCapturable :: Int
    {- ^ Amount that can be captured from this PaymentIntent. -}
    , paymentIntentAmountReceived :: Int
    {- ^ Amount that was collected by this PaymentIntent. -}
    , paymentIntentCancellationReason :: PaymentIntentCancellationReasonEnum
    {- ^ Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`). -}
    , paymentIntentCaptureMethod :: PaymentIntentCaptureMethodEnum
    {- ^ One of `automatic` (default) or `manual`.

When the capture method is `automatic`, Stripe automatically captures funds when the customer authorizes the payment.

Change `capture_method` to manual if you wish to [separate authorization and capture](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#separate-authorization-and-capture) for payment methods that support this. -}
    , paymentIntentCharges :: Object
    {- ^ Charges that were created by this PaymentIntent, if any. -}
    , paymentIntentConfirmationMethod :: PaymentIntentConfirmationMethodEnum
    {- ^ One of `automatic` (default) or `manual`.

When the confirmation method is `automatic`, a PaymentIntent can be confirmed using a publishable key. After `next_action`s are handled, no additional confirmation is required to complete the payment.

When the confirmation method is `manual`, all payment attempts must be made using a secret key. The PaymentIntent returns to the `requires_confirmation` state after handling `next_action`s, and requires your server to initiate each payment attempt with an explicit confirmation.

Learn more about the different [confirmation flows](https://stripe.com/docs/payments/payment-intents/use-cases#one-time-payments). -}
    , paymentIntentCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , paymentIntentCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , paymentIntentMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. For more information, see the [documentation](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata). -}
    , paymentIntentPaymentMethodTypes :: Vector (Text)
    {- ^ The list of payment method types (e.g. card) that this PaymentIntent is allowed to use. -}
    , paymentIntentStatus :: PaymentIntentStatusEnum
    {- ^ Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses). -}
    , paymentIntentApplication :: Maybe (Either (Text) (Application))
    {- ^ ID of the Connect application that created the PaymentIntent. -}
    , paymentIntentApplicationFeeAmount :: Maybe (Int)
    {- ^ The amount of the application fee (if any) for the resulting payment. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts) for details. -}
    , paymentIntentCanceledAt :: Maybe (POSIXTime)
    {- ^ Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch. -}
    , paymentIntentClientSecret :: Maybe (Text)
    {- ^ The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. 

The client secret can be used to complete a payment from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.

Please refer to our [quickstart guide](https://stripe.com/docs/payments/payment-intents/web) to learn about how `client_secret` should be handled. -}
    , paymentIntentCustomer :: Maybe (AnyOf  '[Text, Customer, DeletedCustomer])
    {- ^ ID of the Customer this PaymentIntent belongs to, if one exists.

If present, payment methods used with this PaymentIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this PaymentIntent. -}
    , paymentIntentDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , paymentIntentInvoice :: Maybe (Either (Text) (Invoice))
    {- ^ ID of the invoice that created this PaymentIntent, if it exists. -}
    , paymentIntentLastPaymentError :: Maybe (ApiErrors)
    {- ^ The payment error encountered in the previous PaymentIntent confirmation. -}
    , paymentIntentNextAction :: Maybe (PaymentIntentNextAction)
    {- ^ If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source. -}
    , paymentIntentOnBehalfOf :: Maybe (Either (Text) (Account))
    {- ^ The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts) for details. -}
    , paymentIntentPaymentMethod :: Maybe (Either (Text) (PaymentMethod))
    {- ^ ID of the payment method used in this PaymentIntent. -}
    , paymentIntentPaymentMethodOptions :: Maybe (PaymentIntentPaymentMethodOptions)
    {- ^ Payment-method-specific configuration for this PaymentIntent. -}
    , paymentIntentReceiptEmail :: Maybe (Text)
    {- ^ Email address that the receipt for the resulting payment will be sent to. -}
    , paymentIntentReview :: Maybe (Either (Text) (Review))
    {- ^ ID of the review associated with this PaymentIntent, if any. -}
    , paymentIntentSetupFutureUsage :: Maybe (Text)
    {- ^ Indicates that you intend to make future payments with this PaymentIntent's payment method.

If present, the payment method used with this PaymentIntent can be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer, even after the transaction completes.

Use `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. See [Saving card details after a payment](https://stripe.com/docs/payments/cards/saving-cards-after-payment) to learn more.

Stripe uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules. For example, if your customer is impacted by [SCA](https://stripe.com/docs/strong-customer-authentication), using `off_session` will ensure that they are authenticated while processing this PaymentIntent. You will then be able to collect [off-session payments](https://stripe.com/docs/payments/cards/charging-saved-cards#off-session-payments-with-saved-cards) for this customer. -}
    , paymentIntentShipping :: Maybe (Shipping)
    {- ^ Shipping information for this PaymentIntent. -}
    , paymentIntentStatementDescriptor :: Maybe (Text)
    {- ^ For non-card charges, you can use this value as the complete description that appears on your customers’ statements. Must contain at least one letter, maximum 22 characters. -}
    , paymentIntentStatementDescriptorSuffix :: Maybe (Text)
    {- ^ Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor. -}
    , paymentIntentTransferData :: Maybe (TransferData)
    {- ^ The data with which to automatically create a Transfer when the payment is finalized. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts) for details. -}
    , paymentIntentTransferGroup :: Maybe (Text)
    {- ^ A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/payment-intents/use-cases#connected-accounts) for details. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_intent_next_action"

data PaymentIntentNextAction
  = PaymentIntentNextAction
    { paymentIntentNextActionRedirectToUrl :: PaymentIntentNextActionRedirectToUrl
    , paymentIntentNextActionType_ :: PaymentIntentNextActionTypeEnum
    {- ^ Type of the next action to perform, one of `redirect_to_url` or `use_stripe_sdk`. -}
    , paymentIntentNextActionUseStripeSdk :: Object
    {- ^ When confirming a PaymentIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_intent_next_action_redirect_to_url"

data PaymentIntentNextActionRedirectToUrl
  = PaymentIntentNextActionRedirectToUrl
    { paymentIntentNextActionRedirectToUrlReturnUrl :: Maybe (Text)
    {- ^ If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion. -}
    , paymentIntentNextActionRedirectToUrlUrl :: Maybe (Text)
    {- ^ The URL you must redirect your customer to in order to authenticate the payment. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_intent_payment_method_options"

data PaymentIntentPaymentMethodOptions
  = PaymentIntentPaymentMethodOptions
    { paymentIntentPaymentMethodOptionsCard :: PaymentIntentPaymentMethodOptionsCard
    } deriving (Show, Eq, Generic)


-- Describes: "payment_intent_payment_method_options_card"

data PaymentIntentPaymentMethodOptionsCard
  = PaymentIntentPaymentMethodOptionsCard
    { paymentIntentPaymentMethodOptionsCardRequestThreeDSecure :: PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureEnum
    {- ^ We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Permitted values include: `automatic` or `any`. If not provided, defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method"

data PaymentMethod
  = PaymentMethod
    { paymentMethodId :: Id (PaymentMethod)
    {- ^ Unique identifier for the object. -}
    , paymentMethodObject :: PaymentMethodObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , paymentMethodLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , paymentMethodBillingDetails :: BillingDetails
    , paymentMethodCard :: PaymentMethodCard
    , paymentMethodCardPresent :: PaymentMethodCardPresent
    , paymentMethodCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , paymentMethodMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , paymentMethodType_ :: PaymentMethodTypeEnum
    {- ^ The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type. -}
    , paymentMethodCustomer :: Maybe (Either (Text) (Customer))
    {- ^ The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card"

data PaymentMethodCard
  = PaymentMethodCard
    { paymentMethodCardBrand :: Text
    {- ^ Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`. -}
    , paymentMethodCardExpMonth :: Int
    {- ^ Two-digit number representing the card's expiration month. -}
    , paymentMethodCardExpYear :: Int
    {- ^ Four-digit number representing the card's expiration year. -}
    , paymentMethodCardFunding :: Text
    {- ^ Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`. -}
    , paymentMethodCardLast4 :: Text
    {- ^ The last four digits of the card. -}
    , paymentMethodCardChecks :: Maybe (PaymentMethodCardChecks)
    {- ^ Checks on Card address and CVC if provided. -}
    , paymentMethodCardCountry :: Maybe (Text)
    {- ^ Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected. -}
    , paymentMethodCardFingerprint :: Maybe (Text)
    {- ^ Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. -}
    , paymentMethodCardGeneratedFrom :: Maybe (PaymentMethodCardGeneratedCard)
    {- ^ Details of the original PaymentMethod that created this object. -}
    , paymentMethodCardThreeDSecureUsage :: Maybe (ThreeDSecureUsage)
    {- ^ Contains details on how this Card maybe be used for 3D Secure authentication. -}
    , paymentMethodCardWallet :: Maybe (PaymentMethodCardWallet)
    {- ^ If this Card is part of a card wallet, this contains the details of the card wallet. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card_checks"

data PaymentMethodCardChecks
  = PaymentMethodCardChecks
    { paymentMethodCardChecksAddressLine1Check :: Maybe (Text)
    {- ^ If a address line1 was provided, results of the check, one of 'pass', 'failed', 'unavailable' or 'unchecked'. -}
    , paymentMethodCardChecksAddressPostalCodeCheck :: Maybe (Text)
    {- ^ If a address postal code was provided, results of the check, one of 'pass', 'failed', 'unavailable' or 'unchecked'. -}
    , paymentMethodCardChecksCvcCheck :: Maybe (Text)
    {- ^ If a CVC was provided, results of the check, one of 'pass', 'failed', 'unavailable' or 'unchecked'. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card_generated_card"

data PaymentMethodCardGeneratedCard
  = PaymentMethodCardGeneratedCard
    { paymentMethodCardGeneratedCardCharge :: Maybe (Text)
    {- ^ The charge that created this object. -}
    , paymentMethodCardGeneratedCardPaymentMethodDetails :: Maybe (PaymentMethodDetails)
    {- ^ Transaction-specific details of the payment method used in the payment. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card_present"

data PaymentMethodCardPresent
  = PaymentMethodCardPresent
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card_wallet"

data PaymentMethodCardWallet
  = PaymentMethodCardWallet
    { paymentMethodCardWalletAmexExpressCheckout :: PaymentMethodCardWalletAmexExpressCheckout
    , paymentMethodCardWalletApplePay :: PaymentMethodCardWalletApplePay
    , paymentMethodCardWalletGooglePay :: PaymentMethodCardWalletGooglePay
    , paymentMethodCardWalletMasterpass :: PaymentMethodCardWalletMasterpass
    , paymentMethodCardWalletSamsungPay :: PaymentMethodCardWalletSamsungPay
    , paymentMethodCardWalletType_ :: PaymentMethodCardWalletTypeEnum
    {- ^ The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type. -}
    , paymentMethodCardWalletVisaCheckout :: PaymentMethodCardWalletVisaCheckout
    , paymentMethodCardWalletDynamicLast4 :: Maybe (Text)
    {- ^ (For tokenized numbers only.) The last four digits of the device account number. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card_wallet_amex_express_checkout"

data PaymentMethodCardWalletAmexExpressCheckout
  = PaymentMethodCardWalletAmexExpressCheckout
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card_wallet_apple_pay"

data PaymentMethodCardWalletApplePay
  = PaymentMethodCardWalletApplePay
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card_wallet_google_pay"

data PaymentMethodCardWalletGooglePay
  = PaymentMethodCardWalletGooglePay
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card_wallet_masterpass"

data PaymentMethodCardWalletMasterpass
  = PaymentMethodCardWalletMasterpass
    { paymentMethodCardWalletMasterpassBillingAddress :: Maybe (Address)
    {- ^ Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodCardWalletMasterpassEmail :: Maybe (Text)
    {- ^ Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodCardWalletMasterpassName :: Maybe (Text)
    {- ^ Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodCardWalletMasterpassShippingAddress :: Maybe (Address)
    {- ^ Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card_wallet_samsung_pay"

data PaymentMethodCardWalletSamsungPay
  = PaymentMethodCardWalletSamsungPay
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_card_wallet_visa_checkout"

data PaymentMethodCardWalletVisaCheckout
  = PaymentMethodCardWalletVisaCheckout
    { paymentMethodCardWalletVisaCheckoutBillingAddress :: Maybe (Address)
    {- ^ Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodCardWalletVisaCheckoutEmail :: Maybe (Text)
    {- ^ Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodCardWalletVisaCheckoutName :: Maybe (Text)
    {- ^ Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodCardWalletVisaCheckoutShippingAddress :: Maybe (Address)
    {- ^ Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details"

data PaymentMethodDetails
  = PaymentMethodDetails
    { paymentMethodDetailsAchCreditTransfer :: PaymentMethodDetailsAchCreditTransfer
    , paymentMethodDetailsAchDebit :: PaymentMethodDetailsAchDebit
    , paymentMethodDetailsAlipay :: PaymentMethodDetailsAlipay
    , paymentMethodDetailsBancontact :: PaymentMethodDetailsBancontact
    , paymentMethodDetailsCard :: PaymentMethodDetailsCard
    , paymentMethodDetailsCardPresent :: PaymentMethodDetailsCardPresent
    , paymentMethodDetailsEps :: PaymentMethodDetailsEps
    , paymentMethodDetailsGiropay :: PaymentMethodDetailsGiropay
    , paymentMethodDetailsIdeal :: PaymentMethodDetailsIdeal
    , paymentMethodDetailsKlarna :: PaymentMethodDetailsKlarna
    , paymentMethodDetailsMultibanco :: PaymentMethodDetailsMultibanco
    , paymentMethodDetailsP24 :: PaymentMethodDetailsP24
    , paymentMethodDetailsSepaDebit :: PaymentMethodDetailsSepaDebit
    , paymentMethodDetailsSofort :: PaymentMethodDetailsSofort
    , paymentMethodDetailsStripeAccount :: PaymentMethodDetailsStripeAccount
    , paymentMethodDetailsType_ :: PaymentMethodDetailsTypeEnum
    {- ^ The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.
An additional hash is included on `payment_method_details` with a name matching this value.
It contains information specific to the payment method. -}
    , paymentMethodDetailsWechat :: PaymentMethodDetailsWechat
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_ach_credit_transfer"

data PaymentMethodDetailsAchCreditTransfer
  = PaymentMethodDetailsAchCreditTransfer
    { paymentMethodDetailsAchCreditTransferAccountNumber :: Maybe (Text)
    {- ^ Account number to transfer funds to. -}
    , paymentMethodDetailsAchCreditTransferBankName :: Maybe (Text)
    {- ^ Name of the bank associated with the routing number. -}
    , paymentMethodDetailsAchCreditTransferRoutingNumber :: Maybe (Text)
    {- ^ Routing transit number for the bank account to transfer funds to. -}
    , paymentMethodDetailsAchCreditTransferSwiftCode :: Maybe (Text)
    {- ^ SWIFT code of the bank associated with the routing number. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_ach_debit"

data PaymentMethodDetailsAchDebit
  = PaymentMethodDetailsAchDebit
    { paymentMethodDetailsAchDebitAccountHolderType :: PaymentMethodDetailsAchDebitAccountHolderTypeEnum
    {- ^ Type of entity that holds the account. This can be either `individual` or `company`. -}
    , paymentMethodDetailsAchDebitBankName :: Maybe (Text)
    {- ^ Name of the bank associated with the bank account. -}
    , paymentMethodDetailsAchDebitCountry :: Maybe (Text)
    {- ^ Two-letter ISO code representing the country the bank account is located in. -}
    , paymentMethodDetailsAchDebitFingerprint :: Maybe (Text)
    {- ^ Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same. -}
    , paymentMethodDetailsAchDebitLast4 :: Maybe (Text)
    {- ^ Last four digits of the bank account number. -}
    , paymentMethodDetailsAchDebitRoutingNumber :: Maybe (Text)
    {- ^ Routing transit number of the bank account. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_alipay"

data PaymentMethodDetailsAlipay
  = PaymentMethodDetailsAlipay
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_bancontact"

data PaymentMethodDetailsBancontact
  = PaymentMethodDetailsBancontact
    { paymentMethodDetailsBancontactPreferredLanguage :: PaymentMethodDetailsBancontactPreferredLanguageEnum
    {- ^ Preferred language of the Bancontact authorization page that the customer is redirected to.
Can be one of `en`, `de`, `fr`, or `nl` -}
    , paymentMethodDetailsBancontactBankCode :: Maybe (Text)
    {- ^ Bank code of bank associated with the bank account. -}
    , paymentMethodDetailsBancontactBankName :: Maybe (Text)
    {- ^ Name of the bank associated with the bank account. -}
    , paymentMethodDetailsBancontactBic :: Maybe (Text)
    {- ^ Bank Identifier Code of the bank associated with the bank account. -}
    , paymentMethodDetailsBancontactIbanLast4 :: Maybe (Text)
    {- ^ Last four characters of the IBAN. -}
    , paymentMethodDetailsBancontactVerifiedName :: Maybe (Text)
    {- ^ Owner's verified full name. Values are verified or provided by Bancontact directly
(if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card"

data PaymentMethodDetailsCard
  = PaymentMethodDetailsCard
    { paymentMethodDetailsCardBrand :: Maybe (Text)
    {- ^ Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`. -}
    , paymentMethodDetailsCardChecks :: Maybe (PaymentMethodDetailsCardChecks)
    {- ^ Check results by Card networks on Card address and CVC at time of payment. -}
    , paymentMethodDetailsCardCountry :: Maybe (Text)
    {- ^ Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected. -}
    , paymentMethodDetailsCardExpMonth :: Maybe (Int)
    {- ^ Two-digit number representing the card's expiration month. -}
    , paymentMethodDetailsCardExpYear :: Maybe (Int)
    {- ^ Four-digit number representing the card's expiration year. -}
    , paymentMethodDetailsCardFingerprint :: Maybe (Text)
    {- ^ Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. -}
    , paymentMethodDetailsCardFunding :: Maybe (Text)
    {- ^ Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`. -}
    , paymentMethodDetailsCardLast4 :: Maybe (Text)
    {- ^ The last four digits of the card. -}
    , paymentMethodDetailsCardThreeDSecure :: Maybe (ThreeDSecureDetails)
    {- ^ Populated if this transaction used 3D Secure authentication. -}
    , paymentMethodDetailsCardWallet :: Maybe (PaymentMethodDetailsCardWallet)
    {- ^ If this Card is part of a card wallet, this contains the details of the card wallet. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card_checks"

data PaymentMethodDetailsCardChecks
  = PaymentMethodDetailsCardChecks
    { paymentMethodDetailsCardChecksAddressLine1Check :: Maybe (Text)
    {- ^ If a address line1 was provided, results of the check, one of 'pass', 'failed', 'unavailable' or 'unchecked'. -}
    , paymentMethodDetailsCardChecksAddressPostalCodeCheck :: Maybe (Text)
    {- ^ If a address postal code was provided, results of the check, one of 'pass', 'failed', 'unavailable' or 'unchecked'. -}
    , paymentMethodDetailsCardChecksCvcCheck :: Maybe (Text)
    {- ^ If a CVC was provided, results of the check, one of 'pass', 'failed', 'unavailable' or 'unchecked'. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card_present"

data PaymentMethodDetailsCardPresent
  = PaymentMethodDetailsCardPresent
    { paymentMethodDetailsCardPresentBrand :: Maybe (Text)
    {- ^ Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`. -}
    , paymentMethodDetailsCardPresentCountry :: Maybe (Text)
    {- ^ Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected. -}
    , paymentMethodDetailsCardPresentEmvAuthData :: Maybe (Text)
    {- ^ Authorization response cryptogram. -}
    , paymentMethodDetailsCardPresentExpMonth :: Maybe (Int)
    {- ^ Two-digit number representing the card's expiration month. -}
    , paymentMethodDetailsCardPresentExpYear :: Maybe (Int)
    {- ^ Four-digit number representing the card's expiration year. -}
    , paymentMethodDetailsCardPresentFingerprint :: Maybe (Text)
    {- ^ Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. -}
    , paymentMethodDetailsCardPresentFunding :: Maybe (Text)
    {- ^ Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`. -}
    , paymentMethodDetailsCardPresentGeneratedCard :: Maybe (Text)
    {- ^ ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod. -}
    , paymentMethodDetailsCardPresentLast4 :: Maybe (Text)
    {- ^ The last four digits of the card. -}
    , paymentMethodDetailsCardPresentReadMethod :: Maybe (Text)
    {- ^ How were card details read in this transaction. Can be contact_emv, contactless_emv, magnetic_stripe_fallback, magnetic_stripe_track2, or contactless_magstripe_mode -}
    , paymentMethodDetailsCardPresentReceipt :: Maybe (PaymentMethodDetailsCardPresentReceipt)
    {- ^ A collection of fields required to be displayed on receipts. Only required for EMV transactions. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card_present_receipt"

data PaymentMethodDetailsCardPresentReceipt
  = PaymentMethodDetailsCardPresentReceipt
    { paymentMethodDetailsCardPresentReceiptApplicationCryptogram :: Maybe (Text)
    {- ^ EMV tag 9F26, cryptogram generated by the integrated circuit chip. -}
    , paymentMethodDetailsCardPresentReceiptApplicationPreferredName :: Maybe (Text)
    {- ^ Mnenomic of the Application Identifier. -}
    , paymentMethodDetailsCardPresentReceiptAuthorizationCode :: Maybe (Text)
    {- ^ Identifier for this transaction. -}
    , paymentMethodDetailsCardPresentReceiptAuthorizationResponseCode :: Maybe (Text)
    {- ^ EMV tag 8A. A code returned by the card issuer. -}
    , paymentMethodDetailsCardPresentReceiptCardholderVerificationMethod :: Maybe (Text)
    {- ^ How the cardholder verified ownership of the card. -}
    , paymentMethodDetailsCardPresentReceiptDedicatedFileName :: Maybe (Text)
    {- ^ EMV tag 84. Similar to the application identifier stored on the integrated circuit chip. -}
    , paymentMethodDetailsCardPresentReceiptTerminalVerificationResults :: Maybe (Text)
    {- ^ The outcome of a series of EMV functions performed by the card reader. -}
    , paymentMethodDetailsCardPresentReceiptTransactionStatusInformation :: Maybe (Text)
    {- ^ An indication of various EMV functions performed during the transaction. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card_wallet"

data PaymentMethodDetailsCardWallet
  = PaymentMethodDetailsCardWallet
    { paymentMethodDetailsCardWalletAmexExpressCheckout :: PaymentMethodDetailsCardWalletAmexExpressCheckout
    , paymentMethodDetailsCardWalletApplePay :: PaymentMethodDetailsCardWalletApplePay
    , paymentMethodDetailsCardWalletGooglePay :: PaymentMethodDetailsCardWalletGooglePay
    , paymentMethodDetailsCardWalletMasterpass :: PaymentMethodDetailsCardWalletMasterpass
    , paymentMethodDetailsCardWalletSamsungPay :: PaymentMethodDetailsCardWalletSamsungPay
    , paymentMethodDetailsCardWalletType_ :: PaymentMethodDetailsCardWalletTypeEnum
    {- ^ The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type. -}
    , paymentMethodDetailsCardWalletVisaCheckout :: PaymentMethodDetailsCardWalletVisaCheckout
    , paymentMethodDetailsCardWalletDynamicLast4 :: Maybe (Text)
    {- ^ (For tokenized numbers only.) The last four digits of the device account number. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card_wallet_amex_express_checkout"

data PaymentMethodDetailsCardWalletAmexExpressCheckout
  = PaymentMethodDetailsCardWalletAmexExpressCheckout
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card_wallet_apple_pay"

data PaymentMethodDetailsCardWalletApplePay
  = PaymentMethodDetailsCardWalletApplePay
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card_wallet_google_pay"

data PaymentMethodDetailsCardWalletGooglePay
  = PaymentMethodDetailsCardWalletGooglePay
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card_wallet_masterpass"

data PaymentMethodDetailsCardWalletMasterpass
  = PaymentMethodDetailsCardWalletMasterpass
    { paymentMethodDetailsCardWalletMasterpassBillingAddress :: Maybe (Address)
    {- ^ Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodDetailsCardWalletMasterpassEmail :: Maybe (Text)
    {- ^ Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodDetailsCardWalletMasterpassName :: Maybe (Text)
    {- ^ Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodDetailsCardWalletMasterpassShippingAddress :: Maybe (Address)
    {- ^ Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card_wallet_samsung_pay"

data PaymentMethodDetailsCardWalletSamsungPay
  = PaymentMethodDetailsCardWalletSamsungPay
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_card_wallet_visa_checkout"

data PaymentMethodDetailsCardWalletVisaCheckout
  = PaymentMethodDetailsCardWalletVisaCheckout
    { paymentMethodDetailsCardWalletVisaCheckoutBillingAddress :: Maybe (Address)
    {- ^ Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodDetailsCardWalletVisaCheckoutEmail :: Maybe (Text)
    {- ^ Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodDetailsCardWalletVisaCheckoutName :: Maybe (Text)
    {- ^ Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , paymentMethodDetailsCardWalletVisaCheckoutShippingAddress :: Maybe (Address)
    {- ^ Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_eps"

data PaymentMethodDetailsEps
  = PaymentMethodDetailsEps
    { paymentMethodDetailsEpsVerifiedName :: Maybe (Text)
    {- ^ Owner's verified full name. Values are verified or provided by EPS directly
(if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_giropay"

data PaymentMethodDetailsGiropay
  = PaymentMethodDetailsGiropay
    { paymentMethodDetailsGiropayBankCode :: Maybe (Text)
    {- ^ Bank code of bank associated with the bank account. -}
    , paymentMethodDetailsGiropayBankName :: Maybe (Text)
    {- ^ Name of the bank associated with the bank account. -}
    , paymentMethodDetailsGiropayBic :: Maybe (Text)
    {- ^ Bank Identifier Code of the bank associated with the bank account. -}
    , paymentMethodDetailsGiropayVerifiedName :: Maybe (Text)
    {- ^ Owner's verified full name. Values are verified or provided by Giropay directly
(if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_ideal"

data PaymentMethodDetailsIdeal
  = PaymentMethodDetailsIdeal
    { paymentMethodDetailsIdealBank :: PaymentMethodDetailsIdealBankEnum
    {- ^ The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`, `regiobank`, `sns_bank`, `triodos_bank`, or `van_lanschot`. -}
    , paymentMethodDetailsIdealBic :: PaymentMethodDetailsIdealBicEnum
    {- ^ The Bank Identifier Code of the customer's bank. -}
    , paymentMethodDetailsIdealIbanLast4 :: Maybe (Text)
    {- ^ Last four characters of the IBAN. -}
    , paymentMethodDetailsIdealVerifiedName :: Maybe (Text)
    {- ^ Owner's verified full name. Values are verified or provided by iDEAL directly
(if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_klarna"

data PaymentMethodDetailsKlarna
  = PaymentMethodDetailsKlarna
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_multibanco"

data PaymentMethodDetailsMultibanco
  = PaymentMethodDetailsMultibanco
    { paymentMethodDetailsMultibancoEntity :: Maybe (Text)
    {- ^ Entity number associated with this Multibanco payment. -}
    , paymentMethodDetailsMultibancoReference :: Maybe (Text)
    {- ^ Reference number associated with this Multibanco payment. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_p24"

data PaymentMethodDetailsP24
  = PaymentMethodDetailsP24
    { paymentMethodDetailsP24Reference :: Maybe (Text)
    {- ^ Unique reference for this Przelewy24 payment. -}
    , paymentMethodDetailsP24VerifiedName :: Maybe (Text)
    {- ^ Owner's verified full name. Values are verified or provided by Przelewy24 directly
(if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_sepa_debit"

data PaymentMethodDetailsSepaDebit
  = PaymentMethodDetailsSepaDebit
    { paymentMethodDetailsSepaDebitBankCode :: Maybe (Text)
    {- ^ Bank code of bank associated with the bank account. -}
    , paymentMethodDetailsSepaDebitBranchCode :: Maybe (Text)
    {- ^ Branch code of bank associated with the bank account. -}
    , paymentMethodDetailsSepaDebitCountry :: Maybe (Text)
    {- ^ Two-letter ISO code representing the country the bank account is located in. -}
    , paymentMethodDetailsSepaDebitFingerprint :: Maybe (Text)
    {- ^ Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same. -}
    , paymentMethodDetailsSepaDebitLast4 :: Maybe (Text)
    {- ^ Last four characters of the IBAN. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_sofort"

data PaymentMethodDetailsSofort
  = PaymentMethodDetailsSofort
    { paymentMethodDetailsSofortBankCode :: Maybe (Text)
    {- ^ Bank code of bank associated with the bank account. -}
    , paymentMethodDetailsSofortBankName :: Maybe (Text)
    {- ^ Name of the bank associated with the bank account. -}
    , paymentMethodDetailsSofortBic :: Maybe (Text)
    {- ^ Bank Identifier Code of the bank associated with the bank account. -}
    , paymentMethodDetailsSofortCountry :: Maybe (Text)
    {- ^ Two-letter ISO code representing the country the bank account is located in. -}
    , paymentMethodDetailsSofortIbanLast4 :: Maybe (Text)
    {- ^ Last four characters of the IBAN. -}
    , paymentMethodDetailsSofortVerifiedName :: Maybe (Text)
    {- ^ Owner's verified full name. Values are verified or provided by SOFORT directly
(if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_stripe_account"

data PaymentMethodDetailsStripeAccount
  = PaymentMethodDetailsStripeAccount
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_method_details_wechat"

data PaymentMethodDetailsWechat
  = PaymentMethodDetailsWechat
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payment_source"

data PaymentSource
  = PaymentSource
    {
    } deriving (Show, Eq, Generic)


-- Describes: "payout"

data Payout
  = Payout
    { payoutId :: Id (Payout)
    {- ^ Unique identifier for the object. -}
    , payoutObject :: PayoutObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , payoutLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , payoutAmount :: Int
    {- ^ Amount (in %s) to be transferred to your bank account or debit card. -}
    , payoutArrivalDate :: POSIXTime
    {- ^ Date the payout is expected to arrive in the bank. This factors in delays like weekends or bank holidays. -}
    , payoutAutomatic :: Bool
    {- ^ Returns `true` if the payout was created by an [automated payout schedule](https://stripe.com/docs/payouts#payout-schedule), and `false` if it was [requested manually](https://stripe.com/docs/payouts#manual-payouts). -}
    , payoutCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , payoutCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , payoutMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , payoutMethod :: Text
    {- ^ The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces](/blog/instant-payouts-for-marketplaces) for more information.) -}
    , payoutSourceType :: PayoutSourceTypeEnum
    {- ^ The source balance this payout came from. One of `card` or `bank_account`. -}
    , payoutStatus :: Text
    {- ^ Current status of the payout (`paid`, `pending`, `in_transit`, `canceled` or `failed`). A payout will be `pending` until it is submitted to the bank, at which point it becomes `in_transit`. It will then change to `paid` if the transaction goes through. If it does not go through successfully, its status will change to `failed` or `canceled`. -}
    , payoutType_ :: PayoutTypeEnum
    {- ^ Can be `bank_account` or `card`. -}
    , payoutBalanceTransaction :: Maybe (Either (Text) (BalanceTransaction))
    {- ^ ID of the balance transaction that describes the impact of this payout on your account balance. -}
    , payoutDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , payoutDestination :: Maybe (AnyOf  '[Text, BankAccount, Card, DeletedBankAccount, DeletedCard])
    {- ^ ID of the bank account or card the payout was sent to. -}
    , payoutFailureBalanceTransaction :: Maybe (Either (Text) (BalanceTransaction))
    {- ^ If the payout failed or was canceled, this will be the ID of the balance transaction that reversed the initial balance transaction, and puts the funds from the failed payout back in your balance. -}
    , payoutFailureCode :: Maybe (Text)
    {- ^ Error code explaining reason for payout failure if available. See [Types of payout failures](https://stripe.com/docs/api#payout_failures) for a list of failure codes. -}
    , payoutFailureMessage :: Maybe (Text)
    {- ^ Message to user further explaining reason for payout failure if available. -}
    , payoutStatementDescriptor :: Maybe (Text)
    {- ^ Extra information about a payout to be displayed on the user's bank statement. -}
    } deriving (Show, Eq, Generic)


-- Describes: "period"

data Period
  = Period
    { periodEnd :: Maybe (POSIXTime)
    {- ^ The end date of this usage period. All usage up to and including this point in time is included. -}
    , periodStart :: Maybe (POSIXTime)
    {- ^ The start date of this usage period. All usage after this point in time is included. -}
    } deriving (Show, Eq, Generic)


-- Describes: "person"

data Person
  = Person
    { personId :: Id (Person)
    {- ^ Unique identifier for the object. -}
    , personObject :: PersonObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , personAccount :: Text
    , personAddress :: Address
    , personCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , personDob :: LegalEntityDob
    , personIdNumberProvided :: Bool
    , personMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , personRelationship :: PersonRelationship
    , personSsnLast4Provided :: Bool
    , personVerification :: LegalEntityPersonVerification
    , personAddressKana :: Maybe (LegalEntityJapanAddress)
    , personAddressKanji :: Maybe (LegalEntityJapanAddress)
    , personEmail :: Maybe (Text)
    , personFirstName :: Maybe (Text)
    , personFirstNameKana :: Maybe (Text)
    , personFirstNameKanji :: Maybe (Text)
    , personGender :: Maybe (Text)
    , personLastName :: Maybe (Text)
    , personLastNameKana :: Maybe (Text)
    , personLastNameKanji :: Maybe (Text)
    , personMaidenName :: Maybe (Text)
    , personPhone :: Maybe (Text)
    , personRequirements :: Maybe (PersonRequirements)
    } deriving (Show, Eq, Generic)


-- Describes: "person_relationship"

data PersonRelationship
  = PersonRelationship
    { personRelationshipAccountOpener :: Maybe (Bool)
    {- ^ Whether the person opened the account. This person provides information about themselves, and general information about the account. -}
    , personRelationshipDirector :: Maybe (Bool)
    {- ^ Whether the person is a director of the account's legal entity. Currently only required for accounts in the EU. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations. -}
    , personRelationshipExecutive :: Maybe (Bool)
    {- ^ Whether the person has significant responsibility to control, manage, or direct the organization. -}
    , personRelationshipOwner :: Maybe (Bool)
    {- ^ Whether the person is an owner of the account’s legal entity. -}
    , personRelationshipPercentOwnership :: Maybe (Scientific)
    {- ^ The percent owned by the person of the account's legal entity. -}
    , personRelationshipTitle :: Maybe (Text)
    {- ^ The person's title (e.g., CEO, Support Engineer). -}
    } deriving (Show, Eq, Generic)


-- Describes: "person_requirements"

data PersonRequirements
  = PersonRequirements
    { personRequirementsCurrentlyDue :: Vector (Text)
    {- ^ Fields that need to be collected to keep the person's account enabled. If not collected by the account's `current_deadline`, these fields appear in `past_due` as well, and the account is disabled. -}
    , personRequirementsEventuallyDue :: Vector (Text)
    {- ^ Fields that need to be collected assuming all volume thresholds are reached. As fields are needed, they are moved to `currently_due` and the account's `current_deadline` is set. -}
    , personRequirementsPastDue :: Vector (Text)
    {- ^ Fields that weren't collected by the account's `current_deadline`. These fields need to be collected to enable payouts for the person's account. -}
    , personRequirementsPendingVerification :: Vector (Text)
    {- ^ Additional fields that may be required depending on the results of verification or review for provided requirements. If any of these fields become required, they appear in `currently_due` or `past_due`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "plan"

data Plan
  = Plan
    { planId :: Id (Plan)
    {- ^ Unique identifier for the object. -}
    , planObject :: PlanObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , planLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , planActive :: Bool
    {- ^ Whether the plan is currently available for new subscriptions. -}
    , planAggregateUsage :: PlanAggregateUsageEnum
    {- ^ Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for picking the last usage record reported within a period, `last_ever` for picking the last usage record ever (across period bounds) or `max` which picks the usage record with the maximum reported usage during a period. Defaults to `sum`. -}
    , planBillingScheme :: PlanBillingSchemeEnum
    {- ^ Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes. -}
    , planCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , planCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , planInterval :: PlanIntervalEnum
    {- ^ One of `day`, `week`, `month` or `year`. The frequency with which a subscription should be billed. -}
    , planIntervalCount :: Int
    {- ^ The number of intervals (specified in the `interval` property) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. -}
    , planMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , planTiers :: Vector (PlanTier)
    {- ^ Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. -}
    , planTiersMode :: PlanTiersModeEnum
    {- ^ Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows. -}
    , planUsageType :: PlanUsageTypeEnum
    {- ^ Configures how the quantity per period should be determined, can be either `metered` or `licensed`. `licensed` will automatically bill the `quantity` set for a plan when adding it to a subscription, `metered` will aggregate the total usage based on usage records. Defaults to `licensed`. -}
    , planAmount :: Maybe (Int)
    {- ^ The amount in %s to be charged on the interval specified. -}
    , planAmountDecimal :: Maybe (Scientific)
    {- ^ Same as `amount`, but contains a decimal value with at most 12 decimal places. -}
    , planNickname :: Maybe (Text)
    {- ^ A brief description of the plan, hidden from customers. -}
    , planProduct :: Maybe (AnyOf  '[Text, Product, DeletedProduct])
    {- ^ The product whose pricing this plan determines. -}
    , planTransformUsage :: Maybe (TransformUsage)
    {- ^ Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`. -}
    , planTrialPeriodDays :: Maybe (Int)
    {- ^ Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan). -}
    } deriving (Show, Eq, Generic)


-- Describes: "plan_tier"

data PlanTier
  = PlanTier
    { planTierFlatAmount :: Maybe (Int)
    {- ^ Price for the entire tier. -}
    , planTierFlatAmountDecimal :: Maybe (Scientific)
    {- ^ Same as `flat_amount`, but contains a decimal value with at most 12 decimal places. -}
    , planTierUnitAmount :: Maybe (Int)
    {- ^ Per unit price for units relevant to the tier. -}
    , planTierUnitAmountDecimal :: Maybe (Scientific)
    {- ^ Same as `unit_amount`, but contains a decimal value with at most 12 decimal places. -}
    , planTierUpTo :: Maybe (Int)
    {- ^ Up to and including to this quantity will be contained in the tier. -}
    } deriving (Show, Eq, Generic)


-- Describes: "platform_tax_fee"

data PlatformTaxFee
  = PlatformTaxFee
    { platformTaxFeeId :: Text
    {- ^ Unique identifier for the object. -}
    , platformTaxFeeObject :: PlatformTaxFeeObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , platformTaxFeeAccount :: Text
    {- ^ The Connected account that incurred this charge. -}
    , platformTaxFeeSourceTransaction :: Text
    {- ^ The payment object that caused this tax to be inflicted. -}
    , platformTaxFeeType_ :: Text
    {- ^ The type of tax (VAT). -}
    } deriving (Show, Eq, Generic)


-- Describes: "product"

data Product
  = Product
    { productId :: Id (Product)
    {- ^ Unique identifier for the object. -}
    , productObject :: ProductObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , productLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , productAttributes :: Vector (Text)
    {- ^ A list of up to 5 attributes that each SKU can provide values for (e.g., `["color", "size"]`). Only applicable to products of `type=good`. -}
    , productCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , productDeactivateOn :: Vector (Text)
    {- ^ An array of connect application identifiers that cannot purchase this product. Only applicable to products of `type=good`. -}
    , productImages :: Vector (Text)
    {- ^ A list of up to 8 URLs of images for this product, meant to be displayable to the customer. Only applicable to products of `type=good`. -}
    , productMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , productName :: Text
    {- ^ The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types. -}
    , productType_ :: ProductTypeEnum
    {- ^ The type of the product. The product is either of type `good`, which is eligible for use with Orders and SKUs, or `service`, which is eligible for use with Subscriptions and Plans. -}
    , productUpdated :: POSIXTime
    , productActive :: Maybe (Bool)
    {- ^ Whether the product is currently available for purchase. -}
    , productCaption :: Maybe (Text)
    {- ^ A short one-line description of the product, meant to be displayable to the customer. Only applicable to products of `type=good`. -}
    , productDescription :: Maybe (Text)
    {- ^ The product's description, meant to be displayable to the customer. Only applicable to products of `type=good`. -}
    , productPackageDimensions :: Maybe (PackageDimensions)
    {- ^ The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. Only applicable to products of `type=good`. -}
    , productShippable :: Maybe (Bool)
    {- ^ Whether this product is a shipped good. Only applicable to products of `type=good`. -}
    , productStatementDescriptor :: Maybe (Text)
    {- ^ Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only available on products of type=`service`. -}
    , productUnitLabel :: Maybe (Text)
    {- ^ A label that represents units of this product, such as seat(s), in Stripe and on customers’ receipts and invoices. Only available on products of type=`service`. -}
    , productUrl :: Maybe (Text)
    {- ^ A URL of a publicly-accessible webpage for this product. Only applicable to products of `type=good`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "radar_review_resource_location"

data RadarReviewResourceLocation
  = RadarReviewResourceLocation
    { radarReviewResourceLocationCity :: Maybe (Text)
    {- ^ The city where the payment originated. -}
    , radarReviewResourceLocationCountry :: Maybe (Text)
    {- ^ Two-letter ISO code representing the country where the payment originated. -}
    , radarReviewResourceLocationLatitude :: Maybe (Scientific)
    {- ^ The geographic latitude where the payment originated. -}
    , radarReviewResourceLocationLongitude :: Maybe (Scientific)
    {- ^ The geographic longitude where the payment originated. -}
    , radarReviewResourceLocationRegion :: Maybe (Text)
    {- ^ The state/county/province/region where the payment originated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "radar_review_resource_session"

data RadarReviewResourceSession
  = RadarReviewResourceSession
    { radarReviewResourceSessionBrowser :: Maybe (Text)
    {- ^ The browser used in this browser session (e.g., `Chrome`). -}
    , radarReviewResourceSessionDevice :: Maybe (Text)
    {- ^ Information about the device used for the browser session (e.g., `Samsung SM-G930T`). -}
    , radarReviewResourceSessionPlatform :: Maybe (Text)
    {- ^ The platform for the browser session (e.g., `Macintosh`). -}
    , radarReviewResourceSessionVersion :: Maybe (Text)
    {- ^ The version for the browser session (e.g., `61.0.3163.100`). -}
    } deriving (Show, Eq, Generic)


-- Describes: "recipient"

data Recipient
  = Recipient
    { recipientId :: Id (Recipient)
    {- ^ Unique identifier for the object. -}
    , recipientObject :: RecipientObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , recipientLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , recipientCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , recipientMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , recipientRolledBackFrom :: Either (Text) (Account)
    , recipientType_ :: RecipientTypeEnum
    {- ^ Type of the recipient, one of `individual` or `corporation`. -}
    , recipientActiveAccount :: Maybe (BankAccount)
    {- ^ Hash describing the current account on the recipient, if there is one. -}
    , recipientCards :: Maybe (Object)
    , recipientDefaultCard :: Maybe (Either (Text) (Card))
    {- ^ The default card to use for creating transfers to this recipient. -}
    , recipientDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , recipientEmail :: Maybe (Text)
    , recipientMigratedTo :: Maybe (Either (Text) (Account))
    {- ^ The ID of the [Custom account](https://stripe.com/docs/connect/custom-accounts) this recipient was migrated to. If set, the recipient can no longer be updated, nor can transfers be made to it: use the Custom account instead. -}
    , recipientName :: Maybe (Text)
    {- ^ Full, legal name of the recipient. -}
    } deriving (Show, Eq, Generic)


-- Describes: "refund"

data Refund
  = Refund
    { refundId :: Id (Refund)
    {- ^ Unique identifier for the object. -}
    , refundObject :: RefundObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , refundAmount :: Int
    {- ^ Amount, in %s. -}
    , refundCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , refundCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , refundDescription :: Text
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. (Available on non-card refunds only) -}
    , refundFailureBalanceTransaction :: Either (Text) (BalanceTransaction)
    {- ^ If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction. -}
    , refundFailureReason :: Text
    {- ^ If the refund failed, the reason for refund failure if known. Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`, or `unknown`. -}
    , refundMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , refundBalanceTransaction :: Maybe (Either (Text) (BalanceTransaction))
    {- ^ Balance transaction that describes the impact on your account balance. -}
    , refundCharge :: Maybe (Either (Text) (Charge))
    {- ^ ID of the charge that was refunded. -}
    , refundReason :: Maybe (Text)
    {- ^ Reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`. -}
    , refundReceiptNumber :: Maybe (Text)
    {- ^ This is the transaction number that appears on email receipts sent for this refund. -}
    , refundSourceTransferReversal :: Maybe (Either (Text) (TransferReversal))
    {- ^ The transfer reversal that is associated with the refund. Only present if the charge came from another Stripe account. See the Connect documentation for details. -}
    , refundStatus :: Maybe (Text)
    {- ^ Status of the refund. For credit card refunds, this can be `pending`, `succeeded`, or `failed`. For other types of refunds, it can be `pending`, `succeeded`, `failed`, or `canceled`. Refer to our [refunds](https://stripe.com/docs/refunds#failed-refunds) documentation for more details. -}
    , refundTransferReversal :: Maybe (Either (Text) (TransferReversal))
    {- ^ If the accompanying transfer was reversed, the transfer reversal object. Only applicable if the charge was created using the destination parameter. -}
    } deriving (Show, Eq, Generic)


-- Describes: "reserve_transaction"

data ReserveTransaction
  = ReserveTransaction
    { reserveTransactionId :: Text
    {- ^ Unique identifier for the object. -}
    , reserveTransactionObject :: ReserveTransactionObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , reserveTransactionAmount :: Int
    , reserveTransactionCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , reserveTransactionDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    } deriving (Show, Eq, Generic)


-- Describes: "review"

data Review
  = Review
    { reviewId :: Id (Review)
    {- ^ Unique identifier for the object. -}
    , reviewObject :: ReviewObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , reviewLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , reviewClosedReason :: ReviewClosedReasonEnum
    {- ^ The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, or `disputed`. -}
    , reviewCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , reviewOpen :: Bool
    {- ^ If `true`, the review needs action. -}
    , reviewOpenedReason :: ReviewOpenedReasonEnum
    {- ^ The reason the review was opened. One of `rule` or `manual`. -}
    , reviewPaymentIntent :: Either (Text) (PaymentIntent)
    {- ^ The PaymentIntent ID associated with this review, if one exists. -}
    , reviewReason :: ReviewReasonEnum
    {- ^ The reason the review is currently open or closed. One of `rule`, `manual`, `approved`, `refunded`, `refunded_as_fraud`, or `disputed`. -}
    , reviewBillingZip :: Maybe (Text)
    {- ^ The ZIP or postal code of the card used, if applicable. -}
    , reviewCharge :: Maybe (Either (Text) (Charge))
    {- ^ The charge associated with this review. -}
    , reviewIpAddress :: Maybe (Text)
    {- ^ The IP address where the payment originated. -}
    , reviewIpAddressLocation :: Maybe (RadarReviewResourceLocation)
    {- ^ Information related to the location of the payment. Note that this information is an approximation and attempts to locate the nearest population center - it should not be used to determine a specific address. -}
    , reviewSession :: Maybe (RadarReviewResourceSession)
    {- ^ Information related to the browsing session of the user who initiated the payment. -}
    } deriving (Show, Eq, Generic)


-- Describes: "rule"

data Rule
  = Rule
    { ruleId :: Text
    {- ^ Unique identifier for the object. -}
    , ruleAction :: Text
    {- ^ The action taken on the payment. -}
    , rulePredicate :: Text
    {- ^ The predicate to evaluate the payment against. -}
    } deriving (Show, Eq, Generic)


-- Describes: "scheduled_query_run"

data ScheduledQueryRun
  = ScheduledQueryRun
    { scheduledQueryRunId :: Id (ScheduledQueryRun)
    {- ^ Unique identifier for the object. -}
    , scheduledQueryRunObject :: ScheduledQueryRunObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , scheduledQueryRunLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , scheduledQueryRunCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , scheduledQueryRunDataLoadTime :: POSIXTime
    {- ^ When the query was run, Sigma contained a snapshot of your Stripe data at this time. -}
    , scheduledQueryRunError :: SigmaScheduledQueryRunError
    , scheduledQueryRunResultAvailableUntil :: POSIXTime
    {- ^ Time at which the result expires and is no longer available for download. -}
    , scheduledQueryRunSql :: Text
    {- ^ SQL for the query. -}
    , scheduledQueryRunStatus :: Text
    {- ^ The query's execution status, which will be `completed` for successful runs, and `canceled`, `failed`, or `timed_out` otherwise. -}
    , scheduledQueryRunTitle :: Text
    {- ^ Title of the query. -}
    , scheduledQueryRunFile :: Maybe (File)
    {- ^ The file object representing the results of the query. -}
    } deriving (Show, Eq, Generic)


-- Describes: "setup_intent"

data SetupIntent
  = SetupIntent
    { setupIntentId :: Id (SetupIntent)
    {- ^ Unique identifier for the object. -}
    , setupIntentObject :: SetupIntentObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , setupIntentLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , setupIntentCancellationReason :: SetupIntentCancellationReasonEnum
    {- ^ Reason for cancellation of this SetupIntent, one of `abandoned`, `requested_by_customer`, or `duplicate`. -}
    , setupIntentCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , setupIntentMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , setupIntentPaymentMethodTypes :: Vector (Text)
    {- ^ The list of payment method types (e.g. card) that this SetupIntent is allowed to set up. -}
    , setupIntentStatus :: SetupIntentStatusEnum
    {- ^ [Status](https://stripe.com/docs/payments/intents#intent-statuses) of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `canceled`, or `succeeded`. -}
    , setupIntentUsage :: Text
    {- ^ Indicates how the payment method is intended to be used in the future.

Use `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`. -}
    , setupIntentApplication :: Maybe (Either (Text) (Application))
    {- ^ ID of the Connect application that created the SetupIntent. -}
    , setupIntentClientSecret :: Maybe (Text)
    {- ^ The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.

The client secret can be used to complete payment setup from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret. -}
    , setupIntentCustomer :: Maybe (AnyOf  '[Text, Customer, DeletedCustomer])
    {- ^ ID of the Customer this SetupIntent belongs to, if one exists.

If present, payment methods used with this SetupIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this SetupIntent. -}
    , setupIntentDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , setupIntentLastSetupError :: Maybe (ApiErrors)
    {- ^ The error encountered in the previous SetupIntent confirmation. -}
    , setupIntentNextAction :: Maybe (SetupIntentNextAction)
    {- ^ If present, this property tells you what actions you need to take in order for your customer to continue payment setup. -}
    , setupIntentOnBehalfOf :: Maybe (Either (Text) (Account))
    {- ^ The account (if any) for which the setup is intended. -}
    , setupIntentPaymentMethod :: Maybe (Either (Text) (PaymentMethod))
    {- ^ ID of the payment method used with this SetupIntent. -}
    , setupIntentPaymentMethodOptions :: Maybe (SetupIntentPaymentMethodOptions)
    {- ^ Payment-method-specific configuration for this SetupIntent. -}
    } deriving (Show, Eq, Generic)


-- Describes: "setup_intent_next_action"

data SetupIntentNextAction
  = SetupIntentNextAction
    { setupIntentNextActionRedirectToUrl :: SetupIntentNextActionRedirectToUrl
    , setupIntentNextActionType_ :: SetupIntentNextActionTypeEnum
    {- ^ Type of the next action to perform, one of `redirect_to_url` or `use_stripe_sdk`. -}
    , setupIntentNextActionUseStripeSdk :: Object
    {- ^ When confirming a SetupIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js. -}
    } deriving (Show, Eq, Generic)


-- Describes: "setup_intent_next_action_redirect_to_url"

data SetupIntentNextActionRedirectToUrl
  = SetupIntentNextActionRedirectToUrl
    { setupIntentNextActionRedirectToUrlReturnUrl :: Maybe (Text)
    {- ^ If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion. -}
    , setupIntentNextActionRedirectToUrlUrl :: Maybe (Text)
    {- ^ The URL you must redirect your customer to in order to authenticate. -}
    } deriving (Show, Eq, Generic)


-- Describes: "setup_intent_payment_method_options"

data SetupIntentPaymentMethodOptions
  = SetupIntentPaymentMethodOptions
    { setupIntentPaymentMethodOptionsCard :: SetupIntentPaymentMethodOptionsCard
    } deriving (Show, Eq, Generic)


-- Describes: "setup_intent_payment_method_options_card"

data SetupIntentPaymentMethodOptionsCard
  = SetupIntentPaymentMethodOptionsCard
    { setupIntentPaymentMethodOptionsCardRequestThreeDSecure :: SetupIntentPaymentMethodOptionsCardRequestThreeDSecureEnum
    {- ^ We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Permitted values include: `automatic` or `any`. If not provided, defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine. -}
    } deriving (Show, Eq, Generic)


-- Describes: "shipping"

data Shipping
  = Shipping
    { shippingAddress :: Address
    , shippingCarrier :: Maybe (Text)
    {- ^ The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. -}
    , shippingName :: Maybe (Text)
    {- ^ Recipient name. -}
    , shippingPhone :: Maybe (Text)
    {- ^ Recipient phone (including extension). -}
    , shippingTrackingNumber :: Maybe (Text)
    {- ^ The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas. -}
    } deriving (Show, Eq, Generic)


-- Describes: "shipping_method"

data ShippingMethod
  = ShippingMethod
    { shippingMethodId :: Text
    {- ^ Unique identifier for the object. -}
    , shippingMethodAmount :: Int
    {- ^ A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the line item. -}
    , shippingMethodCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , shippingMethodDescription :: Text
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , shippingMethodDeliveryEstimate :: Maybe (DeliveryEstimate)
    {- ^ The estimated delivery date for the given shipping method. Can be either a specific date or a range. -}
    } deriving (Show, Eq, Generic)


-- Describes: "sigma_scheduled_query_run_error"

data SigmaScheduledQueryRunError
  = SigmaScheduledQueryRunError
    { sigmaScheduledQueryRunErrorMessage :: Text
    {- ^ Information about the run failure. -}
    } deriving (Show, Eq, Generic)


-- Describes: "sku"

data Sku
  = Sku
    { skuId :: Id (Sku)
    {- ^ Unique identifier for the object. -}
    , skuObject :: SkuObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , skuLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , skuActive :: Bool
    {- ^ Whether the SKU is available for purchase. -}
    , skuAttributes :: Object
    {- ^ A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `["size", "gender"]`, a valid SKU has the following dictionary of attributes: `{"size": "Medium", "gender": "Unisex"}`. -}
    , skuCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , skuCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , skuInventory :: Inventory
    , skuMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , skuPrice :: Int
    {- ^ The cost of the item as a positive integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100, Japanese Yen being a zero-decimal currency). -}
    , skuProduct :: Either (Text) (Product)
    {- ^ The ID of the product this SKU is associated with. The product must be currently active. -}
    , skuUpdated :: POSIXTime
    , skuImage :: Maybe (Text)
    {- ^ The URL of an image for this SKU, meant to be displayable to the customer. -}
    , skuPackageDimensions :: Maybe (PackageDimensions)
    {- ^ The dimensions of this SKU for shipping purposes. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source"

data Source
  = Source
    { sourceId :: Id (Source)
    {- ^ Unique identifier for the object. -}
    , sourceObject :: SourceObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , sourceLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , sourceAchCreditTransfer :: SourceTypeAchCreditTransfer
    , sourceAchDebit :: SourceTypeAchDebit
    , sourceAlipay :: SourceTypeAlipay
    , sourceBancontact :: SourceTypeBancontact
    , sourceCard :: SourceTypeCard
    , sourceCardPresent :: SourceTypeCardPresent
    , sourceClientSecret :: Text
    {- ^ The client secret of the source. Used for client-side retrieval using a publishable key. -}
    , sourceCodeVerification :: SourceCodeVerificationFlow
    , sourceCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , sourceCustomer :: Text
    {- ^ The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer. -}
    , sourceEps :: SourceTypeEps
    , sourceFlow :: SourceFlowEnum
    {- ^ The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. -}
    , sourceGiropay :: SourceTypeGiropay
    , sourceIdeal :: SourceTypeIdeal
    , sourceKlarna :: SourceTypeKlarna
    , sourceMultibanco :: SourceTypeMultibanco
    , sourceP24 :: SourceTypeP24
    , sourceReceiver :: SourceReceiverFlow
    , sourceRedirect :: SourceRedirectFlow
    , sourceSepaDebit :: SourceTypeSepaDebit
    , sourceSofort :: SourceTypeSofort
    , sourceSourceOrder :: SourceOrder
    , sourceStatus :: SourceStatusEnum
    {- ^ The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge. -}
    , sourceThreeDSecure :: SourceTypeThreeDSecure
    , sourceType_ :: SourceTypeEnum
    {- ^ The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used. -}
    , sourceWechat :: SourceTypeWechat
    , sourceAmount :: Maybe (Int)
    {- ^ A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources. -}
    , sourceCurrency :: Maybe (Text)
    {- ^ Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources. -}
    , sourceMetadata :: Maybe (Object)
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , sourceOwner :: Maybe (SourceOwner)
    {- ^ Information about the owner of the payment instrument that may be used or required by particular source types. -}
    , sourceStatementDescriptor :: Maybe (Text)
    {- ^ Extra information about a source. This will appear on your customer's statement every time you charge the source. -}
    , sourceUsage :: Maybe (Text)
    {- ^ Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_code_verification_flow"

data SourceCodeVerificationFlow
  = SourceCodeVerificationFlow
    { sourceCodeVerificationFlowAttemptsRemaining :: Int
    {- ^ The number of attempts remaining to authenticate the source object with a verification code. -}
    , sourceCodeVerificationFlowStatus :: Text
    {- ^ The status of the code verification, either `pending` (awaiting verification, `attempts_remaining` should be greater than 0), `succeeded` (successful verification) or `failed` (failed verification, cannot be verified anymore as `attempts_remaining` should be 0). -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_mandate_notification"

data SourceMandateNotification
  = SourceMandateNotification
    { sourceMandateNotificationId :: Id (SourceMandateNotification)
    {- ^ Unique identifier for the object. -}
    , sourceMandateNotificationObject :: SourceMandateNotificationObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , sourceMandateNotificationLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , sourceMandateNotificationBacsDebit :: SourceMandateNotificationBacsDebitData
    , sourceMandateNotificationCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , sourceMandateNotificationReason :: Text
    {- ^ The reason of the mandate notification. Valid reasons are `mandate_confirmed` or `debit_initiated`. -}
    , sourceMandateNotificationSepaDebit :: SourceMandateNotificationSepaDebitData
    , sourceMandateNotificationSource :: Source
    , sourceMandateNotificationStatus :: Text
    {- ^ The status of the mandate notification. Valid statuses are `pending` or `submitted`. -}
    , sourceMandateNotificationType_ :: Text
    {- ^ The type of source this mandate notification is attached to. Should be the source type identifier code for the payment method, such as `three_d_secure`. -}
    , sourceMandateNotificationAmount :: Maybe (Int)
    {- ^ A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the amount associated with the mandate notification. The amount is expressed in the currency of the underlying source. Required if the notification type is `debit_initiated`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_mandate_notification_bacs_debit_data"

data SourceMandateNotificationBacsDebitData
  = SourceMandateNotificationBacsDebitData
    { sourceMandateNotificationBacsDebitDataLast4 :: Text
    {- ^ Last 4 digits of the account number associated with the debit. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_mandate_notification_sepa_debit_data"

data SourceMandateNotificationSepaDebitData
  = SourceMandateNotificationSepaDebitData
    { sourceMandateNotificationSepaDebitDataCreditorIdentifier :: Text
    {- ^ SEPA creditor ID. -}
    , sourceMandateNotificationSepaDebitDataLast4 :: Text
    {- ^ Last 4 digits of the account number associated with the debit. -}
    , sourceMandateNotificationSepaDebitDataMandateReference :: Text
    {- ^ Mandate reference associated with the debit. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_order"

data SourceOrder
  = SourceOrder
    { sourceOrderAmount :: Int
    {- ^ A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the order. -}
    , sourceOrderCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , sourceOrderEmail :: Text
    {- ^ The email address of the customer placing the order. -}
    , sourceOrderItems :: Vector (SourceOrderItem)
    {- ^ List of items constituting the order. -}
    , sourceOrderShipping :: Shipping
    } deriving (Show, Eq, Generic)


-- Describes: "source_order_item"

data SourceOrderItem
  = SourceOrderItem
    { sourceOrderItemQuantity :: Int
    {- ^ The quantity of this order item. When type is `sku`, this is the number of instances of the SKU to be ordered. -}
    , sourceOrderItemAmount :: Maybe (Int)
    {- ^ The amount (price) for this order item. -}
    , sourceOrderItemCurrency :: Maybe (Text)
    {- ^ This currency of this order item. Required when `amount` is present. -}
    , sourceOrderItemDescription :: Maybe (Text)
    {- ^ Human-readable description for this order item. -}
    , sourceOrderItemType_ :: Maybe (Text)
    {- ^ The type of this order item. Must be `sku`, `tax`, or `shipping`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_owner"

data SourceOwner
  = SourceOwner
    { sourceOwnerAddress :: Maybe (Address)
    {- ^ Owner's address. -}
    , sourceOwnerEmail :: Maybe (Text)
    {- ^ Owner's email address. -}
    , sourceOwnerName :: Maybe (Text)
    {- ^ Owner's full name. -}
    , sourceOwnerPhone :: Maybe (Text)
    {- ^ Owner's phone number (including extension). -}
    , sourceOwnerVerifiedAddress :: Maybe (Address)
    {- ^ Verified owner's address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , sourceOwnerVerifiedEmail :: Maybe (Text)
    {- ^ Verified owner's email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , sourceOwnerVerifiedName :: Maybe (Text)
    {- ^ Verified owner's full name. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    , sourceOwnerVerifiedPhone :: Maybe (Text)
    {- ^ Verified owner's phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_receiver_flow"

data SourceReceiverFlow
  = SourceReceiverFlow
    { sourceReceiverFlowAmountCharged :: Int
    {- ^ The total amount that was charged by you. The amount charged is expressed in the source's currency. -}
    , sourceReceiverFlowAmountReceived :: Int
    {- ^ The total amount received by the receiver source. `amount_received = amount_returned + amount_charged` is true at all time. The amount received is expressed in the source's currency. -}
    , sourceReceiverFlowAmountReturned :: Int
    {- ^ The total amount that was returned to the customer. The amount returned is expressed in the source's currency. -}
    , sourceReceiverFlowRefundAttributesMethod :: SourceReceiverFlowRefundAttributesMethodEnum
    {- ^ Type of refund attribute method, one of `email`, `manual`, or `none`. -}
    , sourceReceiverFlowRefundAttributesStatus :: SourceReceiverFlowRefundAttributesStatusEnum
    {- ^ Type of refund attribute status, one of `missing`, `requested`, or `available`. -}
    , sourceReceiverFlowAddress :: Maybe (Text)
    {- ^ The address of the receiver source. This is the value that should be communicated to the customer to send their funds to. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_redirect_flow"

data SourceRedirectFlow
  = SourceRedirectFlow
    { sourceRedirectFlowReturnUrl :: Text
    {- ^ The URL you provide to redirect the customer to after they authenticated their payment. -}
    , sourceRedirectFlowStatus :: Text
    {- ^ The status of the redirect, either `pending` (ready to be used by your customer to authenticate the transaction), `succeeded` (succesful authentication, cannot be reused) or `not_required` (redirect should not be used) or `failed` (failed authentication, cannot be reused). -}
    , sourceRedirectFlowUrl :: Text
    {- ^ The URL provided to you to redirect a customer to as part of a `redirect` authentication flow. -}
    , sourceRedirectFlowFailureReason :: Maybe (Text)
    {- ^ The failure reason for the redirect, either `user_abort` (the customer aborted or dropped out of the redirect flow), `declined` (the authentication failed or the transaction was declined), or `processing_error` (the redirect failed due to a technical error). Present only if the redirect status is `failed`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_transaction"

data SourceTransaction
  = SourceTransaction
    { sourceTransactionId :: Id (SourceTransaction)
    {- ^ Unique identifier for the object. -}
    , sourceTransactionObject :: SourceTransactionObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , sourceTransactionLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , sourceTransactionAchCreditTransfer :: SourceTransactionAchCreditTransferData
    , sourceTransactionAmount :: Int
    {- ^ A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the amount your customer has pushed to the receiver. -}
    , sourceTransactionChfCreditTransfer :: SourceTransactionChfCreditTransferData
    , sourceTransactionCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , sourceTransactionCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , sourceTransactionGbpCreditTransfer :: SourceTransactionGbpCreditTransferData
    , sourceTransactionPaperCheck :: SourceTransactionPaperCheckData
    , sourceTransactionSepaCreditTransfer :: SourceTransactionSepaCreditTransferData
    , sourceTransactionSource :: Text
    {- ^ The ID of the source this transaction is attached to. -}
    , sourceTransactionStatus :: SourceTransactionStatusEnum
    {- ^ The status of the transaction, one of `succeeded`, `pending`, or `failed`. -}
    , sourceTransactionType_ :: SourceTransactionTypeEnum
    {- ^ The type of source this transaction is attached to. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_transaction_ach_credit_transfer_data"

data SourceTransactionAchCreditTransferData
  = SourceTransactionAchCreditTransferData
    { sourceTransactionAchCreditTransferDataCustomerData :: Text
    {- ^ Customer data associated with the transfer. -}
    , sourceTransactionAchCreditTransferDataFingerprint :: Text
    {- ^ Bank account fingerprint associated with the transfer. -}
    , sourceTransactionAchCreditTransferDataLast4 :: Text
    {- ^ Last 4 digits of the account number associated with the transfer. -}
    , sourceTransactionAchCreditTransferDataRoutingNumber :: Text
    {- ^ Routing number associated with the transfer. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_transaction_chf_credit_transfer_data"

data SourceTransactionChfCreditTransferData
  = SourceTransactionChfCreditTransferData
    { sourceTransactionChfCreditTransferDataReference :: Text
    {- ^ Reference associated with the transfer. -}
    , sourceTransactionChfCreditTransferDataSenderAddressCountry :: Text
    {- ^ Sender's country address. -}
    , sourceTransactionChfCreditTransferDataSenderAddressLine1 :: Text
    {- ^ Sender's line 1 address. -}
    , sourceTransactionChfCreditTransferDataSenderIban :: Text
    {- ^ Sender's bank account IBAN. -}
    , sourceTransactionChfCreditTransferDataSenderName :: Text
    {- ^ Sender's name. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_transaction_gbp_credit_transfer_data"

data SourceTransactionGbpCreditTransferData
  = SourceTransactionGbpCreditTransferData
    { sourceTransactionGbpCreditTransferDataFingerprint :: Text
    {- ^ Bank account fingerprint associated with the transfer. -}
    , sourceTransactionGbpCreditTransferDataLast4 :: Text
    {- ^ Last 4 digits of account number associated with the transfer. -}
    , sourceTransactionGbpCreditTransferDataSenderName :: Text
    {- ^ Sender name associated with the transfer. -}
    , sourceTransactionGbpCreditTransferDataSortCode :: Text
    {- ^ Sort code associated with the transfer. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_transaction_paper_check_data"

data SourceTransactionPaperCheckData
  = SourceTransactionPaperCheckData
    { sourceTransactionPaperCheckDataAvailableAt :: Text
    {- ^ String unix time for the available date. -}
    , sourceTransactionPaperCheckDataInvoices :: Text
    {- ^ Invoice ID associated with the paper check. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_transaction_sepa_credit_transfer_data"

data SourceTransactionSepaCreditTransferData
  = SourceTransactionSepaCreditTransferData
    { sourceTransactionSepaCreditTransferDataReference :: Text
    {- ^ Reference associated with the transfer. -}
    , sourceTransactionSepaCreditTransferDataSenderIban :: Text
    {- ^ Sender's bank account IBAN. -}
    , sourceTransactionSepaCreditTransferDataSenderName :: Text
    {- ^ Sender's name. -}
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_ach_credit_transfer"

data SourceTypeAchCreditTransfer
  = SourceTypeAchCreditTransfer
    { sourceTypeAchCreditTransferAccountNumber :: Maybe (Text)
    , sourceTypeAchCreditTransferBankName :: Maybe (Text)
    , sourceTypeAchCreditTransferFingerprint :: Maybe (Text)
    , sourceTypeAchCreditTransferRefundAccountHolderName :: Maybe (Text)
    , sourceTypeAchCreditTransferRefundAccountHolderType :: Maybe (Text)
    , sourceTypeAchCreditTransferRefundRoutingNumber :: Maybe (Text)
    , sourceTypeAchCreditTransferRoutingNumber :: Maybe (Text)
    , sourceTypeAchCreditTransferSwiftCode :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_ach_debit"

data SourceTypeAchDebit
  = SourceTypeAchDebit
    { sourceTypeAchDebitBankName :: Maybe (Text)
    , sourceTypeAchDebitCountry :: Maybe (Text)
    , sourceTypeAchDebitFingerprint :: Maybe (Text)
    , sourceTypeAchDebitLast4 :: Maybe (Text)
    , sourceTypeAchDebitRoutingNumber :: Maybe (Text)
    , sourceTypeAchDebitType_ :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_alipay"

data SourceTypeAlipay
  = SourceTypeAlipay
    { sourceTypeAlipayDataString :: Maybe (Text)
    , sourceTypeAlipayNativeUrl :: Maybe (Text)
    , sourceTypeAlipayStatementDescriptor :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_bancontact"

data SourceTypeBancontact
  = SourceTypeBancontact
    { sourceTypeBancontactBankCode :: Maybe (Text)
    , sourceTypeBancontactBankName :: Maybe (Text)
    , sourceTypeBancontactBic :: Maybe (Text)
    , sourceTypeBancontactIbanLast4 :: Maybe (Text)
    , sourceTypeBancontactPreferredLanguage :: Maybe (Text)
    , sourceTypeBancontactStatementDescriptor :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_card"

data SourceTypeCard
  = SourceTypeCard
    { sourceTypeCardFingerprint :: Text
    , sourceTypeCardThreeDSecure :: Text
    , sourceTypeCardAddressLine1Check :: Maybe (Text)
    , sourceTypeCardAddressZipCheck :: Maybe (Text)
    , sourceTypeCardBrand :: Maybe (Text)
    , sourceTypeCardCountry :: Maybe (Text)
    , sourceTypeCardCvcCheck :: Maybe (Text)
    , sourceTypeCardDynamicLast4 :: Maybe (Text)
    , sourceTypeCardExpMonth :: Maybe (Int)
    , sourceTypeCardExpYear :: Maybe (Int)
    , sourceTypeCardFunding :: Maybe (Text)
    , sourceTypeCardLast4 :: Maybe (Text)
    , sourceTypeCardName :: Maybe (Text)
    , sourceTypeCardTokenizationMethod :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_card_present"

data SourceTypeCardPresent
  = SourceTypeCardPresent
    { sourceTypeCardPresentApplicationCryptogram :: Text
    , sourceTypeCardPresentApplicationPreferredName :: Text
    , sourceTypeCardPresentAuthorizationResponseCode :: Text
    , sourceTypeCardPresentCvmType :: Text
    , sourceTypeCardPresentDedicatedFileName :: Text
    , sourceTypeCardPresentEmvAuthData :: Text
    , sourceTypeCardPresentFingerprint :: Text
    , sourceTypeCardPresentPosEntryMode :: Text
    , sourceTypeCardPresentTerminalVerificationResults :: Text
    , sourceTypeCardPresentTransactionStatusInformation :: Text
    , sourceTypeCardPresentAuthorizationCode :: Maybe (Text)
    , sourceTypeCardPresentBrand :: Maybe (Text)
    , sourceTypeCardPresentCountry :: Maybe (Text)
    , sourceTypeCardPresentDataType :: Maybe (Text)
    , sourceTypeCardPresentEvidenceCustomerSignature :: Maybe (Text)
    , sourceTypeCardPresentEvidenceTransactionCertificate :: Maybe (Text)
    , sourceTypeCardPresentExpMonth :: Maybe (Int)
    , sourceTypeCardPresentExpYear :: Maybe (Int)
    , sourceTypeCardPresentFunding :: Maybe (Text)
    , sourceTypeCardPresentLast4 :: Maybe (Text)
    , sourceTypeCardPresentPosDeviceId :: Maybe (Text)
    , sourceTypeCardPresentReadMethod :: Maybe (Text)
    , sourceTypeCardPresentReader :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_eps"

data SourceTypeEps
  = SourceTypeEps
    { sourceTypeEpsReference :: Maybe (Text)
    , sourceTypeEpsStatementDescriptor :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_giropay"

data SourceTypeGiropay
  = SourceTypeGiropay
    { sourceTypeGiropayBankCode :: Maybe (Text)
    , sourceTypeGiropayBankName :: Maybe (Text)
    , sourceTypeGiropayBic :: Maybe (Text)
    , sourceTypeGiropayStatementDescriptor :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_ideal"

data SourceTypeIdeal
  = SourceTypeIdeal
    { sourceTypeIdealBank :: Maybe (Text)
    , sourceTypeIdealBic :: Maybe (Text)
    , sourceTypeIdealIbanLast4 :: Maybe (Text)
    , sourceTypeIdealStatementDescriptor :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_klarna"

data SourceTypeKlarna
  = SourceTypeKlarna
    { sourceTypeKlarnaBackgroundImageUrl :: Text
    , sourceTypeKlarnaFirstName :: Text
    , sourceTypeKlarnaLastName :: Text
    , sourceTypeKlarnaLocale :: Text
    , sourceTypeKlarnaLogoUrl :: Text
    , sourceTypeKlarnaPageTitle :: Text
    , sourceTypeKlarnaPayLaterAssetUrlsDescriptive :: Text
    , sourceTypeKlarnaPayLaterAssetUrlsStandard :: Text
    , sourceTypeKlarnaPayLaterName :: Text
    , sourceTypeKlarnaPayLaterRedirectUrl :: Text
    , sourceTypeKlarnaPayNowAssetUrlsDescriptive :: Text
    , sourceTypeKlarnaPayNowAssetUrlsStandard :: Text
    , sourceTypeKlarnaPayNowName :: Text
    , sourceTypeKlarnaPayNowRedirectUrl :: Text
    , sourceTypeKlarnaPayOverTimeAssetUrlsDescriptive :: Text
    , sourceTypeKlarnaPayOverTimeAssetUrlsStandard :: Text
    , sourceTypeKlarnaPayOverTimeName :: Text
    , sourceTypeKlarnaPayOverTimeRedirectUrl :: Text
    , sourceTypeKlarnaPaymentMethodCategories :: Text
    , sourceTypeKlarnaPurchaseCountry :: Text
    , sourceTypeKlarnaPurchaseType :: Text
    , sourceTypeKlarnaRedirectUrl :: Text
    , sourceTypeKlarnaShippingFirstName :: Text
    , sourceTypeKlarnaShippingLastName :: Text
    , sourceTypeKlarnaClientToken :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_multibanco"

data SourceTypeMultibanco
  = SourceTypeMultibanco
    { sourceTypeMultibancoEntity :: Maybe (Text)
    , sourceTypeMultibancoReference :: Maybe (Text)
    , sourceTypeMultibancoRefundAccountHolderAddressCity :: Maybe (Text)
    , sourceTypeMultibancoRefundAccountHolderAddressCountry :: Maybe (Text)
    , sourceTypeMultibancoRefundAccountHolderAddressLine1 :: Maybe (Text)
    , sourceTypeMultibancoRefundAccountHolderAddressLine2 :: Maybe (Text)
    , sourceTypeMultibancoRefundAccountHolderAddressPostalCode :: Maybe (Text)
    , sourceTypeMultibancoRefundAccountHolderAddressState :: Maybe (Text)
    , sourceTypeMultibancoRefundAccountHolderName :: Maybe (Text)
    , sourceTypeMultibancoRefundIban :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_p24"

data SourceTypeP24
  = SourceTypeP24
    { sourceTypeP24Reference :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_sepa_debit"

data SourceTypeSepaDebit
  = SourceTypeSepaDebit
    { sourceTypeSepaDebitBankCode :: Maybe (Text)
    , sourceTypeSepaDebitBranchCode :: Maybe (Text)
    , sourceTypeSepaDebitCountry :: Maybe (Text)
    , sourceTypeSepaDebitFingerprint :: Maybe (Text)
    , sourceTypeSepaDebitLast4 :: Maybe (Text)
    , sourceTypeSepaDebitMandateReference :: Maybe (Text)
    , sourceTypeSepaDebitMandateUrl :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_sofort"

data SourceTypeSofort
  = SourceTypeSofort
    { sourceTypeSofortBankCode :: Maybe (Text)
    , sourceTypeSofortBankName :: Maybe (Text)
    , sourceTypeSofortBic :: Maybe (Text)
    , sourceTypeSofortCountry :: Maybe (Text)
    , sourceTypeSofortIbanLast4 :: Maybe (Text)
    , sourceTypeSofortPreferredLanguage :: Maybe (Text)
    , sourceTypeSofortStatementDescriptor :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_three_d_secure"

data SourceTypeThreeDSecure
  = SourceTypeThreeDSecure
    { sourceTypeThreeDSecureFingerprint :: Text
    , sourceTypeThreeDSecureThreeDSecure :: Text
    , sourceTypeThreeDSecureAddressLine1Check :: Maybe (Text)
    , sourceTypeThreeDSecureAddressZipCheck :: Maybe (Text)
    , sourceTypeThreeDSecureAuthenticated :: Maybe (Bool)
    , sourceTypeThreeDSecureBrand :: Maybe (Text)
    , sourceTypeThreeDSecureCard :: Maybe (Text)
    , sourceTypeThreeDSecureCountry :: Maybe (Text)
    , sourceTypeThreeDSecureCustomer :: Maybe (Text)
    , sourceTypeThreeDSecureCvcCheck :: Maybe (Text)
    , sourceTypeThreeDSecureDynamicLast4 :: Maybe (Text)
    , sourceTypeThreeDSecureExpMonth :: Maybe (Int)
    , sourceTypeThreeDSecureExpYear :: Maybe (Int)
    , sourceTypeThreeDSecureFunding :: Maybe (Text)
    , sourceTypeThreeDSecureLast4 :: Maybe (Text)
    , sourceTypeThreeDSecureName :: Maybe (Text)
    , sourceTypeThreeDSecureTokenizationMethod :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "source_type_wechat"

data SourceTypeWechat
  = SourceTypeWechat
    { sourceTypeWechatPrepayId :: Text
    , sourceTypeWechatStatementDescriptor :: Text
    , sourceTypeWechatQrCodeUrl :: Maybe (Text)
    } deriving (Show, Eq, Generic)


-- Describes: "status_transitions"

data StatusTransitions
  = StatusTransitions
    { statusTransitionsCanceled :: Maybe (POSIXTime)
    , statusTransitionsFulfiled :: Maybe (POSIXTime)
    , statusTransitionsPaid :: Maybe (POSIXTime)
    , statusTransitionsReturned :: Maybe (POSIXTime)
    } deriving (Show, Eq, Generic)


-- Describes: "subscription"

data Subscription
  = Subscription
    { subscriptionId :: Id (Subscription)
    {- ^ Unique identifier for the object. -}
    , subscriptionObject :: SubscriptionObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , subscriptionLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , subscriptionBilling :: SubscriptionBillingEnum
    {- ^ This field has been renamed to `collection_method` and will be removed in a future API version. -}
    , subscriptionBillingCycleAnchor :: POSIXTime
    {- ^ Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. -}
    , subscriptionCancelAtPeriodEnd :: Bool
    {- ^ If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period. -}
    , subscriptionCollectionMethod :: SubscriptionCollectionMethodEnum
    {- ^ Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. -}
    , subscriptionCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , subscriptionCurrentPeriodEnd :: POSIXTime
    {- ^ End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created. -}
    , subscriptionCurrentPeriodStart :: POSIXTime
    {- ^ Start of the current period that the subscription has been invoiced for. -}
    , subscriptionCustomer :: AnyOf  '[Text, Customer, DeletedCustomer]
    {- ^ ID of the customer who owns the subscription. -}
    , subscriptionDefaultTaxRates :: Vector (TaxRate)
    {- ^ The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. -}
    , subscriptionItems :: Object
    {- ^ List of subscription items, each with an attached plan. -}
    , subscriptionMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , subscriptionStart :: POSIXTime
    {- ^ Date of the last substantial change to this subscription. For example, a change to the items array, or a change of status, will reset this timestamp. -}
    , subscriptionStartDate :: POSIXTime
    {- ^ Date when the subscription was first created. The date might differ from the `created` date due to backdating. -}
    , subscriptionStatus :: SubscriptionStatusEnum
    {- ^ Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. 

For `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated. 

A subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. 

If subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. 

If subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices. -}
    , subscriptionApplicationFeePercent :: Maybe (Scientific)
    {- ^ A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. -}
    , subscriptionBillingThresholds :: Maybe (SubscriptionBillingThresholds)
    {- ^ Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period -}
    , subscriptionCancelAt :: Maybe (POSIXTime)
    {- ^ A date in the future at which the subscription will automatically get canceled -}
    , subscriptionCanceledAt :: Maybe (POSIXTime)
    {- ^ If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will still reflect the date of the initial cancellation request, not the end of the subscription period when the subscription is automatically moved to a canceled state. -}
    , subscriptionDaysUntilDue :: Maybe (Int)
    {- ^ Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`. -}
    , subscriptionDefaultPaymentMethod :: Maybe (Either (Text) (PaymentMethod))
    {- ^ ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. If not set, invoices will use the default payment method in the customer's invoice settings. -}
    , subscriptionDefaultSource :: Maybe (AnyOf  '[Text, AlipayAccount, BankAccount, BitcoinReceiver, Card, Source])
    {- ^ ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If not set, defaults to the customer's default source. -}
    , subscriptionDiscount :: Maybe (Discount)
    {- ^ Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis. -}
    , subscriptionEndedAt :: Maybe (POSIXTime)
    {- ^ If the subscription has ended, the date the subscription ended. -}
    , subscriptionLatestInvoice :: Maybe (Either (Text) (Invoice))
    {- ^ The most recent invoice this subscription has generated. -}
    , subscriptionPendingSetupIntent :: Maybe (Either (Text) (SetupIntent))
    {- ^ You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2). -}
    , subscriptionPlan :: Maybe (Plan)
    {- ^ Hash describing the plan the customer is subscribed to. Only set if the subscription contains a single plan. -}
    , subscriptionQuantity :: Maybe (Int)
    {- ^ The quantity of the plan to which the customer is subscribed. For example, if your plan is $10/user/month, and your customer has 5 users, you could pass 5 as the quantity to have the customer charged $50 (5 x $10) monthly. Only set if the subscription contains a single plan. -}
    , subscriptionSchedule :: Maybe (Either (Text) (SubscriptionSchedule))
    {- ^ The schedule attached to the subscription -}
    , subscriptionTaxPercent :: Maybe (Scientific)
    {- ^ If provided, each invoice created by this subscription will apply the tax rate, increasing the amount billed to the customer. -}
    , subscriptionTrialEnd :: Maybe (POSIXTime)
    {- ^ If the subscription has a trial, the end of that trial. -}
    , subscriptionTrialStart :: Maybe (POSIXTime)
    {- ^ If the subscription has a trial, the beginning of that trial. -}
    } deriving (Show, Eq, Generic)


-- Describes: "subscription_billing_thresholds"

data SubscriptionBillingThresholds
  = SubscriptionBillingThresholds
    { subscriptionBillingThresholdsAmountGte :: Maybe (Int)
    {- ^ Monetary threshold that triggers the subscription to create an invoice -}
    , subscriptionBillingThresholdsResetBillingCycleAnchor :: Maybe (Bool)
    {- ^ Indicates if the `billing_cycle_anchor` should be reset when a threshold is reached. If true, `billing_cycle_anchor` will be updated to the date/time the threshold was last reached; otherwise, the value will remain unchanged. This value may not be `true` if the subscription contains items with plans that have `aggregate_usage=last_ever`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "subscription_item"

data SubscriptionItem
  = SubscriptionItem
    { subscriptionItemId :: Id (SubscriptionItem)
    {- ^ Unique identifier for the object. -}
    , subscriptionItemObject :: SubscriptionItemObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , subscriptionItemCreated :: Int
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , subscriptionItemMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , subscriptionItemPlan :: Plan
    , subscriptionItemQuantity :: Int
    {- ^ The [quantity](https://stripe.com/docs/subscriptions/quantities) of the plan to which the customer should be subscribed. -}
    , subscriptionItemSubscription :: Text
    {- ^ The `subscription` this `subscription_item` belongs to. -}
    , subscriptionItemTaxRates :: Vector (TaxRate)
    {- ^ The tax rates which apply to this `subscription_item`. When set, the `default_tax_rates` on the subscription do not apply to this `subscription_item`. -}
    , subscriptionItemBillingThresholds :: Maybe (SubscriptionItemBillingThresholds)
    {- ^ Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period -}
    } deriving (Show, Eq, Generic)


-- Describes: "subscription_item_billing_thresholds"

data SubscriptionItemBillingThresholds
  = SubscriptionItemBillingThresholds
    { subscriptionItemBillingThresholdsUsageGte :: Maybe (Int)
    {- ^ Usage threshold that triggers the subscription to create an invoice -}
    } deriving (Show, Eq, Generic)


-- Describes: "subscription_schedule"

data SubscriptionSchedule
  = SubscriptionSchedule
    { subscriptionScheduleId :: Id (SubscriptionSchedule)
    {- ^ Unique identifier for the object. -}
    , subscriptionScheduleObject :: SubscriptionScheduleObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , subscriptionScheduleLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , subscriptionScheduleBilling :: SubscriptionScheduleBillingEnum
    {- ^ This field has been renamed to `collection_method` and will be removed in a future API version. -}
    , subscriptionScheduleCollectionMethod :: SubscriptionScheduleCollectionMethodEnum
    {- ^ Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. -}
    , subscriptionScheduleCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , subscriptionScheduleCustomer :: AnyOf  '[Text, Customer, DeletedCustomer]
    {- ^ ID of the customer who owns the subscription schedule. -}
    , subscriptionScheduleEndBehavior :: SubscriptionScheduleEndBehaviorEnum
    {- ^ Behavior of the subscription schedule and underlying subscription when it ends. -}
    , subscriptionSchedulePhases :: Vector (SubscriptionSchedulePhaseConfiguration)
    {- ^ Configuration for the subscription schedule's phases. -}
    , subscriptionScheduleRenewalBehavior :: SubscriptionScheduleRenewalBehaviorEnum
    {- ^ Behavior of the subscription schedule and underlying subscription when it ends. -}
    , subscriptionScheduleStatus :: SubscriptionScheduleStatusEnum
    {- ^ Possible values are `not_started`, `active`, `completed`, `released`, and `canceled`. -}
    , subscriptionScheduleBillingThresholds :: Maybe (SubscriptionBillingThresholds)
    {- ^ Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period -}
    , subscriptionScheduleCanceledAt :: Maybe (POSIXTime)
    {- ^ Time at which the subscription schedule was canceled. Measured in seconds since the Unix epoch. -}
    , subscriptionScheduleCompletedAt :: Maybe (POSIXTime)
    {- ^ Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch. -}
    , subscriptionScheduleCurrentPhase :: Maybe (SubscriptionScheduleCurrentPhase)
    {- ^ Object representing the start and end dates for the current phase of the subscription schedule, if it is `active`. -}
    , subscriptionScheduleDefaultPaymentMethod :: Maybe (Either (Text) (PaymentMethod))
    {- ^ ID of the default payment method for the subscription schedule. It must belong to the customer associated with the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings. -}
    , subscriptionScheduleInvoiceSettings :: Maybe (InvoiceSettingSubscriptionScheduleSetting)
    {- ^ The subscription schedule's default invoice settings. -}
    , subscriptionScheduleMetadata :: Maybe (Object)
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , subscriptionScheduleReleasedAt :: Maybe (POSIXTime)
    {- ^ Time at which the subscription schedule was released. Measured in seconds since the Unix epoch. -}
    , subscriptionScheduleReleasedSubscription :: Maybe (Text)
    {- ^ ID of the subscription once managed by the subscription schedule (if it is released). -}
    , subscriptionScheduleRenewalInterval :: Maybe (SubscriptionScheduleRenewalInterval)
    {- ^ Interval and duration at which the subscription schedule renews for when it ends if `renewal_behavior` is `renew`. -}
    , subscriptionScheduleSubscription :: Maybe (Either (Text) (Subscription))
    {- ^ ID of the subscription managed by the subscription schedule. -}
    } deriving (Show, Eq, Generic)


-- Describes: "subscription_schedule_configuration_item"

data SubscriptionScheduleConfigurationItem
  = SubscriptionScheduleConfigurationItem
    { subscriptionScheduleConfigurationItemPlan :: AnyOf  '[Text, Plan, DeletedPlan]
    {- ^ ID of the plan to which the customer should be subscribed. -}
    , subscriptionScheduleConfigurationItemTaxRates :: Vector (TaxRate)
    {- ^ The tax rates which apply to this `phase_item`. When set, the `default_tax_rates` on the phase do not apply to this `phase_item`. -}
    , subscriptionScheduleConfigurationItemBillingThresholds :: Maybe (SubscriptionItemBillingThresholds)
    {- ^ Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period -}
    , subscriptionScheduleConfigurationItemQuantity :: Maybe (Int)
    {- ^ Quantity of the plan to which the customer should be subscribed. -}
    } deriving (Show, Eq, Generic)


-- Describes: "subscription_schedule_current_phase"

data SubscriptionScheduleCurrentPhase
  = SubscriptionScheduleCurrentPhase
    { subscriptionScheduleCurrentPhaseEndDate :: POSIXTime
    , subscriptionScheduleCurrentPhaseStartDate :: POSIXTime
    } deriving (Show, Eq, Generic)


-- Describes: "subscription_schedule_phase_configuration"

data SubscriptionSchedulePhaseConfiguration
  = SubscriptionSchedulePhaseConfiguration
    { subscriptionSchedulePhaseConfigurationCollectionMethod :: SubscriptionSchedulePhaseConfigurationCollectionMethodEnum
    {- ^ Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. -}
    , subscriptionSchedulePhaseConfigurationDefaultTaxRates :: Vector (TaxRate)
    , subscriptionSchedulePhaseConfigurationEndDate :: POSIXTime
    {- ^ The end of this phase of the subscription schedule. -}
    , subscriptionSchedulePhaseConfigurationPlans :: Vector (SubscriptionScheduleConfigurationItem)
    {- ^ Plans to subscribe during this phase of the subscription schedule. -}
    , subscriptionSchedulePhaseConfigurationStartDate :: POSIXTime
    {- ^ The start of this phase of the subscription schedule. -}
    , subscriptionSchedulePhaseConfigurationApplicationFeePercent :: Maybe (Scientific)
    {- ^ A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account during this phase of the schedule. -}
    , subscriptionSchedulePhaseConfigurationBillingThresholds :: Maybe (SubscriptionBillingThresholds)
    {- ^ Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period -}
    , subscriptionSchedulePhaseConfigurationCoupon :: Maybe (Either (Text) (Coupon))
    {- ^ ID of the coupon to use during this phase of the subscription schedule. -}
    , subscriptionSchedulePhaseConfigurationDefaultPaymentMethod :: Maybe (Either (Text) (PaymentMethod))
    {- ^ ID of the default payment method for the subscription schedule. It must belong to the customer associated with the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings. -}
    , subscriptionSchedulePhaseConfigurationInvoiceSettings :: Maybe (InvoiceSettingSubscriptionScheduleSetting)
    {- ^ The subscription schedule's default invoice settings. -}
    , subscriptionSchedulePhaseConfigurationTaxPercent :: Maybe (Scientific)
    {- ^ If provided, each invoice created during this phase of the subscription schedule will apply the tax rate, increasing the amount billed to the customer. -}
    , subscriptionSchedulePhaseConfigurationTrialEnd :: Maybe (POSIXTime)
    {- ^ When the trial ends within the phase. -}
    } deriving (Show, Eq, Generic)


-- Describes: "subscription_schedule_renewal_interval"

data SubscriptionScheduleRenewalInterval
  = SubscriptionScheduleRenewalInterval
    { subscriptionScheduleRenewalIntervalInterval :: SubscriptionScheduleRenewalIntervalIntervalEnum
    {- ^ Interval at which to renew the subscription schedule for when it ends. -}
    , subscriptionScheduleRenewalIntervalLength :: Int
    {- ^ Number of intervals to renew the subscription schedule for when it ends. -}
    } deriving (Show, Eq, Generic)


-- Describes: "tax_id"

data TaxId
  = TaxId
    { taxIdId :: Id (TaxId)
    {- ^ Unique identifier for the object. -}
    , taxIdObject :: TaxIdObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , taxIdLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , taxIdCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , taxIdCustomer :: Either (Text) (Customer)
    {- ^ ID of the customer. -}
    , taxIdType_ :: TaxIdTypeEnum
    {- ^ Type of the tax ID, one of `au_abn`, `eu_vat`, `in_gst`, `no_vat`, `nz_gst`, or `unknown` -}
    , taxIdValue :: Text
    {- ^ Value of the tax ID. -}
    , taxIdVerification :: TaxIdVerification
    , taxIdCountry :: Maybe (Text)
    {- ^ Two-letter ISO code representing the country of the tax ID. -}
    } deriving (Show, Eq, Generic)


-- Describes: "tax_id_verification"

data TaxIdVerification
  = TaxIdVerification
    { taxIdVerificationStatus :: TaxIdVerificationStatusEnum
    {- ^ Verification status, one of `pending`, `unavailable`, `unverified`, or `verified`. -}
    , taxIdVerificationVerifiedAddress :: Maybe (Text)
    {- ^ Verified address. -}
    , taxIdVerificationVerifiedName :: Maybe (Text)
    {- ^ Verified name. -}
    } deriving (Show, Eq, Generic)


-- Describes: "tax_info"

data TaxInfo
  = TaxInfo
    { taxInfoType_ :: Text
    {- ^ The type of ID number. -}
    , taxInfoTaxId :: Maybe (Text)
    {- ^ The customer's tax ID number. -}
    } deriving (Show, Eq, Generic)


-- Describes: "tax_info_verification"

data TaxInfoVerification
  = TaxInfoVerification
    { taxInfoVerificationStatus :: Maybe (Text)
    {- ^ The state of verification for this customer. Possible values are `unverified`, `pending`, or `verified`. -}
    , taxInfoVerificationVerifiedName :: Maybe (Text)
    {- ^ The official name associated with the tax ID returned from the external provider. -}
    } deriving (Show, Eq, Generic)


-- Describes: "tax_rate"

data TaxRate
  = TaxRate
    { taxRateId :: Id (TaxRate)
    {- ^ Unique identifier for the object. -}
    , taxRateObject :: TaxRateObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , taxRateLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , taxRateActive :: Bool
    {- ^ Defaults to `true`. When set to `false`, this tax rate cannot be applied to objects in the API, but will still be applied to subscriptions and invoices that already have it set. -}
    , taxRateCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , taxRateDisplayName :: Text
    {- ^ The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page. -}
    , taxRateInclusive :: Bool
    {- ^ This specifies if the tax rate is inclusive or exclusive. -}
    , taxRateMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , taxRatePercentage :: Scientific
    {- ^ This represents the tax rate percent out of 100. -}
    , taxRateDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers. -}
    , taxRateJurisdiction :: Maybe (Text)
    {- ^ The jurisdiction for the tax rate. -}
    } deriving (Show, Eq, Generic)


-- Describes: "three_d_secure"

data ThreeDSecure
  = ThreeDSecure
    { threeDSecureId :: Id (ThreeDSecure)
    {- ^ Unique identifier for the object. -}
    , threeDSecureObject :: ThreeDSecureObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , threeDSecureLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , threeDSecureAmount :: Int
    , threeDSecureAuthenticated :: Bool
    {- ^ True if the cardholder went through the authentication flow and their bank indicated that authentication succeeded. -}
    , threeDSecureCard :: Card
    , threeDSecureCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , threeDSecureCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , threeDSecureStatus :: Text
    {- ^ Possible values are `redirect_pending`, `succeeded`, or `failed`. When the cardholder can be authenticated, the object starts with status `redirect_pending`. When liability will be shifted to the cardholder's bank (either because the cardholder was successfully authenticated, or because the bank has not implemented 3D Secure, the object wlil be in status `succeeded`. `failed` indicates that authentication was attempted unsuccessfully. -}
    , threeDSecureRedirectUrl :: Maybe (Text)
    {- ^ If present, this is the URL that you should send the cardholder to for authentication. If you are going to use Stripe.js to display the authentication page in an iframe, you should use the value "_callback". -}
    } deriving (Show, Eq, Generic)


-- Describes: "three_d_secure_details"

data ThreeDSecureDetails
  = ThreeDSecureDetails
    { threeDSecureDetailsAuthenticated :: Bool
    {- ^ Whether or not authentication was performed. 3D Secure will succeed without authentication when the card is not enrolled. -}
    , threeDSecureDetailsSucceeded :: Bool
    {- ^ Whether or not 3D Secure succeeded. -}
    , threeDSecureDetailsVersion :: Text
    {- ^ The version of 3D Secure that was used for this payment. -}
    } deriving (Show, Eq, Generic)


-- Describes: "three_d_secure_usage"

data ThreeDSecureUsage
  = ThreeDSecureUsage
    { threeDSecureUsageSupported :: Bool
    {- ^ Whether 3D Secure is supported on this card. -}
    } deriving (Show, Eq, Generic)


-- Describes: "token"

data Token
  = Token
    { tokenId :: Id (Token)
    {- ^ Unique identifier for the object. -}
    , tokenObject :: TokenObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , tokenLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , tokenBankAccount :: BankAccount
    , tokenCard :: Card
    , tokenCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , tokenType_ :: Text
    {- ^ Type of the token: `account`, `bank_account`, `card`, or `pii`. -}
    , tokenUsed :: Bool
    {- ^ Whether this token has already been used (tokens can be used only once). -}
    , tokenClientIp :: Maybe (Text)
    {- ^ IP address of the client that generated the token. -}
    } deriving (Show, Eq, Generic)


-- Describes: "topup"

data Topup
  = Topup
    { topupId :: Id (Topup)
    {- ^ Unique identifier for the object. -}
    , topupObject :: TopupObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , topupLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , topupAmount :: Int
    {- ^ Amount transferred. -}
    , topupCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , topupCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , topupMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , topupSource :: Source
    , topupStatus :: TopupStatusEnum
    {- ^ The status of the top-up is either `canceled`, `failed`, `pending`, `reversed`, or `succeeded`. -}
    , topupBalanceTransaction :: Maybe (Either (Text) (BalanceTransaction))
    {- ^ ID of the balance transaction that describes the impact of this top-up on your account balance. May not be specified depending on status of top-up. -}
    , topupDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , topupExpectedAvailabilityDate :: Maybe (Int)
    {- ^ Date the funds are expected to arrive in your Stripe account for payouts. This factors in delays like weekends or bank holidays. May not be specified depending on status of top-up. -}
    , topupFailureCode :: Maybe (Text)
    {- ^ Error code explaining reason for top-up failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes). -}
    , topupFailureMessage :: Maybe (Text)
    {- ^ Message to user further explaining reason for top-up failure if available. -}
    , topupStatementDescriptor :: Maybe (Text)
    {- ^ Extra information about a top-up. This will appear on your source's bank statement. It must contain at least one letter. -}
    , topupTransferGroup :: Maybe (Text)
    {- ^ A string that identifies this top-up as part of a group. -}
    } deriving (Show, Eq, Generic)


-- Describes: "transfer"

data Transfer
  = Transfer
    { transferId :: Id (Transfer)
    {- ^ Unique identifier for the object. -}
    , transferObject :: TransferObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , transferLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , transferAmount :: Int
    {- ^ Amount in %s to be transferred. -}
    , transferAmountReversed :: Int
    {- ^ Amount in %s reversed (can be less than the amount attribute on the transfer if a partial reversal was issued). -}
    , transferCreated :: POSIXTime
    {- ^ Time that this record of the transfer was first created. -}
    , transferCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , transferDestinationPayment :: Either (Text) (Charge)
    {- ^ If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer. -}
    , transferMetadata :: Object
    {- ^ A set of key-value pairs that you can attach to a transfer object. It can be useful for storing additional information about the transfer in a structured format. -}
    , transferReversals :: Object
    {- ^ A list of reversals that have been applied to the transfer. -}
    , transferReversed :: Bool
    {- ^ Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false. -}
    , transferSourceType :: TransferSourceTypeEnum
    {- ^ The source balance this transfer came from. One of `card` or `bank_account`. -}
    , transferBalanceTransaction :: Maybe (Either (Text) (BalanceTransaction))
    {- ^ Balance transaction that describes the impact of this transfer on your account balance. -}
    , transferDescription :: Maybe (Text)
    {- ^ An arbitrary string attached to the object. Often useful for displaying to users. -}
    , transferDestination :: Maybe (Either (Text) (Account))
    {- ^ ID of the Stripe account the transfer was sent to. -}
    , transferSourceTransaction :: Maybe (Either (Text) (Charge))
    {- ^ ID of the charge or payment that was used to fund the transfer. If null, the transfer was funded from the available balance. -}
    , transferTransferGroup :: Maybe (Text)
    {- ^ A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#grouping-transactions) for details. -}
    } deriving (Show, Eq, Generic)


-- Describes: "transfer_data"

data TransferData
  = TransferData
    { transferDataAmount :: Int
    {- ^ A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99). -}
    , transferDataDestination :: Either (Text) (Account)
    {- ^ The account (if any) the payment will be attributed to for tax
reporting, and where funds from the payment will be transferred to upon
payment success. -}
    } deriving (Show, Eq, Generic)


-- Describes: "transfer_reversal"

data TransferReversal
  = TransferReversal
    { transferReversalId :: Id (TransferReversal)
    {- ^ Unique identifier for the object. -}
    , transferReversalObject :: TransferReversalObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , transferReversalAmount :: Int
    {- ^ Amount, in %s. -}
    , transferReversalCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , transferReversalCurrency :: Text
    {- ^ Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). -}
    , transferReversalMetadata :: Object
    {- ^ Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. -}
    , transferReversalTransfer :: Either (Text) (Transfer)
    {- ^ ID of the transfer that was reversed. -}
    , transferReversalBalanceTransaction :: Maybe (Either (Text) (BalanceTransaction))
    {- ^ Balance transaction that describes the impact on your account balance. -}
    , transferReversalDestinationPaymentRefund :: Maybe (Either (Text) (Refund))
    {- ^ Linked payment refund for the transfer reversal. -}
    , transferReversalSourceRefund :: Maybe (Either (Text) (Refund))
    {- ^ ID of the refund responsible for the transfer reversal. -}
    } deriving (Show, Eq, Generic)


-- Describes: "transfer_schedule"

data TransferSchedule
  = TransferSchedule
    { transferScheduleDelayDays :: Int
    {- ^ The number of days charges for the account will be held before being paid out. -}
    , transferScheduleInterval :: TransferScheduleIntervalEnum
    {- ^ How frequently funds will be paid out. One of `manual` (payouts only created via API call), `daily`, `weekly`, or `monthly`. -}
    , transferScheduleMonthlyAnchor :: Int
    {- ^ The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months. -}
    , transferScheduleWeeklyAnchor :: Text
    {- ^ The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly. -}
    } deriving (Show, Eq, Generic)


-- Describes: "transform_usage"

data TransformUsage
  = TransformUsage
    { transformUsageDivideBy :: Int
    {- ^ Divide usage by this number. -}
    , transformUsageRound :: TransformUsageRoundEnum
    {- ^ After division, either round the result `up` or `down`. -}
    } deriving (Show, Eq, Generic)


-- Describes: "usage_record"

data UsageRecord
  = UsageRecord
    { usageRecordId :: Id (UsageRecord)
    {- ^ Unique identifier for the object. -}
    , usageRecordObject :: UsageRecordObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , usageRecordLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , usageRecordQuantity :: Int
    {- ^ The usage quantity for the specified date. -}
    , usageRecordSubscriptionItem :: Text
    {- ^ The ID of the subscription item this usage record contains data for. -}
    , usageRecordTimestamp :: POSIXTime
    {- ^ The timestamp when this usage occurred. -}
    } deriving (Show, Eq, Generic)


-- Describes: "usage_record_summary"

data UsageRecordSummary
  = UsageRecordSummary
    { usageRecordSummaryId :: Id (UsageRecordSummary)
    {- ^ Unique identifier for the object. -}
    , usageRecordSummaryObject :: UsageRecordSummaryObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , usageRecordSummaryLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , usageRecordSummaryPeriod :: Period
    , usageRecordSummarySubscriptionItem :: Text
    {- ^ The ID of the subscription item this summary is describing. -}
    , usageRecordSummaryTotalUsage :: Int
    {- ^ The total usage within this usage period. -}
    , usageRecordSummaryInvoice :: Maybe (Text)
    {- ^ The invoice in which this usage period has been billed for. -}
    } deriving (Show, Eq, Generic)


-- Describes: "webhook_endpoint"

data WebhookEndpoint
  = WebhookEndpoint
    { webhookEndpointId :: Id (WebhookEndpoint)
    {- ^ Unique identifier for the object. -}
    , webhookEndpointObject :: WebhookEndpointObjectEnum
    {- ^ String representing the object's type. Objects of the same type share the same value. -}
    , webhookEndpointLivemode :: Bool
    {- ^ Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode. -}
    , webhookEndpointCreated :: POSIXTime
    {- ^ Time at which the object was created. Measured in seconds since the Unix epoch. -}
    , webhookEndpointEnabledEvents :: Vector (Text)
    {- ^ The list of events to enable for this endpoint. You may specify `['*']` to enable all events. -}
    , webhookEndpointSecret :: Text
    {- ^ The endpoint's secret, used to generate [webhook signatures](https://stripe.com/docs/webhooks/signatures). Only returned at creation. -}
    , webhookEndpointStatus :: Text
    {- ^ The status of the webhook. It can be `enabled` or `disabled`. -}
    , webhookEndpointUrl :: Text
    {- ^ The URL of the webhook endpoint. -}
    , webhookEndpointApiVersion :: Maybe (Text)
    {- ^ The API version events are rendered as for this webhook endpoint. -}
    , webhookEndpointApplication :: Maybe (Text)
    {- ^ The ID of the associated Connect application. -}
    } deriving (Show, Eq, Generic)


